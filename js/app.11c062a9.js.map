{"version":3,"file":"js/app.11c062a9.js","mappings":"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","sources":["webpack://yellow_submarine/./src/App.vue?c4b5","webpack://yellow_submarine/./src/App.vue","webpack://yellow_submarine/./src/components/YellowSubmarine.vue?53ff","webpack://yellow_submarine/./src/components/YellowSubmarine.vue","webpack://yellow_submarine/./src/YellowSubmarine/sky system/CelestialBody.ts","webpack://yellow_submarine/./src/YellowSubmarine/sky system/HemisphericCelestialBody.ts","webpack://yellow_submarine/./src/YellowSubmarine/sky system/Sun.ts","webpack://yellow_submarine/./src/YellowSubmarine/sky system/Moon.ts","webpack://yellow_submarine/./src/YellowSubmarine/sky system/SkyBox.ts","webpack://yellow_submarine/./src/YellowSubmarine/sky system/DayNightCycle.ts","webpack://yellow_submarine/./src/YellowSubmarine/sky system/Sky.ts","webpack://yellow_submarine/./src/YellowSubmarine/shader material/ReflectiveToonWaterMaterial.ts","webpack://yellow_submarine/./src/YellowSubmarine/Sea.ts","webpack://yellow_submarine/./src/YellowSubmarine/camera system/ConfigurableCamera.ts","webpack://yellow_submarine/./src/YellowSubmarine/camera system/CameraConfiguration.ts","webpack://yellow_submarine/./src/YellowSubmarine/interaction system/InteractionManager.ts","webpack://yellow_submarine/./src/YellowSubmarine/interaction system/interactions/AbstractInteraction.ts","webpack://yellow_submarine/./src/YellowSubmarine/interaction system/interactions/DialogueInteraction.ts","webpack://yellow_submarine/./src/YellowSubmarine/ui system/UI.ts","webpack://yellow_submarine/./src/YellowSubmarine/Utils.ts","webpack://yellow_submarine/./src/YellowSubmarine/ui system/BBCode/BBTag.ts","webpack://yellow_submarine/./src/YellowSubmarine/ui system/BBCode/Tags/ItalicTag.ts","webpack://yellow_submarine/./src/YellowSubmarine/ui system/BBCode/Tags/BoldTag.ts","webpack://yellow_submarine/./src/YellowSubmarine/ui system/BBCode/Tags/ColorTag.ts","webpack://yellow_submarine/./src/YellowSubmarine/ui system/BBCode/Tags/SizeTag.ts","webpack://yellow_submarine/./src/YellowSubmarine/ui system/BBCode/BBParser.ts","webpack://yellow_submarine/./src/YellowSubmarine/ui system/TextLayoutManager.ts","webpack://yellow_submarine/./src/YellowSubmarine/ui system/TextAnimator.ts","webpack://yellow_submarine/./src/YellowSubmarine/interaction system/ui/DialogueInteractionUI.ts","webpack://yellow_submarine/./src/YellowSubmarine/dialogue system/interactions/NextDialogueInteraction.ts","webpack://yellow_submarine/./src/YellowSubmarine/dialogue system/Conversation.ts","webpack://yellow_submarine/./src/YellowSubmarine/Player.ts","webpack://yellow_submarine/./src/YellowSubmarine/shader material/CartoonShaderMaterial.ts","webpack://yellow_submarine/./src/YellowSubmarine/grappling system/Grappler.ts","webpack://yellow_submarine/./src/YellowSubmarine/sound system/SoundManager.ts","webpack://yellow_submarine/./src/YellowSubmarine/Submarine.ts","webpack://yellow_submarine/./src/YellowSubmarine/keyzone system/KeyZone.ts","webpack://yellow_submarine/./src/YellowSubmarine/detection system/MeshDetectionZone.ts","webpack://yellow_submarine/./src/YellowSubmarine/detection system/SphericalDetectionZone.ts","webpack://yellow_submarine/./src/YellowSubmarine/interaction system/interactions/WorldInteraction.ts","webpack://yellow_submarine/./src/YellowSubmarine/dialogue system/interactions/StartConversationInteraction.ts","webpack://yellow_submarine/./src/YellowSubmarine/npcs/NPC.ts","webpack://yellow_submarine/./src/YellowSubmarine/detection system/CylindricalDetectionZone.ts","webpack://yellow_submarine/./src/YellowSubmarine/dialogue system/nodes/AbstractDialogueNode.ts","webpack://yellow_submarine/./src/YellowSubmarine/dialogue system/nodes/SimpleDialogueNode.ts","webpack://yellow_submarine/./src/YellowSubmarine/dialogue system/ConversationBuilder.ts","webpack://yellow_submarine/./src/YellowSubmarine/quest system/ui/QuestUI.ts","webpack://yellow_submarine/./src/YellowSubmarine/quest system/Quest.ts","webpack://yellow_submarine/./src/YellowSubmarine/quest system/QuestStep.ts","webpack://yellow_submarine/./src/YellowSubmarine/temple/interaction/RemoveTempleBallInteraction.ts","webpack://yellow_submarine/./src/YellowSubmarine/temple/interaction/PlaceTempleBallInteraction.ts","webpack://yellow_submarine/./src/YellowSubmarine/temple/Socle.ts","webpack://yellow_submarine/./src/YellowSubmarine/grappling system/interaction/GrappleInteraction.ts","webpack://yellow_submarine/./src/YellowSubmarine/temple/TempleBall.ts","webpack://yellow_submarine/./src/YellowSubmarine/temple/TemplePuzzle.ts","webpack://yellow_submarine/./src/YellowSubmarine/quest system/QuestFactory.ts","webpack://yellow_submarine/./src/YellowSubmarine/quest system/QuestManager.ts","webpack://yellow_submarine/./src/YellowSubmarine/quest system/ui/JournalUI.ts","webpack://yellow_submarine/./src/YellowSubmarine/npcs/NPCFactory.ts","webpack://yellow_submarine/./src/YellowSubmarine/temple/Stele.ts","webpack://yellow_submarine/./src/YellowSubmarine/keyzone system/KeyZoneFactory.ts","webpack://yellow_submarine/./src/YellowSubmarine/World.ts","webpack://yellow_submarine/./src/YellowSubmarine/interaction system/ui/WorldInteractionUI.ts","webpack://yellow_submarine/./src/YellowSubmarine/interaction system/ui/IslandsUI.ts","webpack://yellow_submarine/./src/YellowSubmarine/ui system/OptionsMenuUI.ts","webpack://yellow_submarine/./src/YellowSubmarine/ui system/MainMenuUI.ts","webpack://yellow_submarine/./src/YellowSubmarine/ui system/UIManager.ts","webpack://yellow_submarine/./src/YellowSubmarine/Game.ts","webpack://yellow_submarine/./src/components/YellowSubmarine.vue?d24b","webpack://yellow_submarine/./src/App.vue?7ccd","webpack://yellow_submarine/./src/main.ts","webpack://yellow_submarine/webpack/bootstrap","webpack://yellow_submarine/webpack/runtime/chunk loaded","webpack://yellow_submarine/webpack/runtime/define property getters","webpack://yellow_submarine/webpack/runtime/global","webpack://yellow_submarine/webpack/runtime/hasOwnProperty shorthand","webpack://yellow_submarine/webpack/runtime/make namespace object","webpack://yellow_submarine/webpack/runtime/publicPath","webpack://yellow_submarine/webpack/runtime/jsonp chunk loading","webpack://yellow_submarine/webpack/startup"],"sourcesContent":["import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_YellowSubmarine = _resolveComponent(\"YellowSubmarine\")!\n\n  return (_openBlock(), _createBlock(_component_YellowSubmarine))\n}","<template>\n  <YellowSubmarine/>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport YellowSubmarine from './components/YellowSubmarine.vue';\n\nexport default defineComponent({\n  name: 'App',\n  components: {\n    YellowSubmarine\n  }\n});\n</script>\n\n<style>\nhtml, body, #app {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n}\n</style>\n","import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, vShow as _vShow, normalizeClass as _normalizeClass, withDirectives as _withDirectives } from \"vue\"\n\nconst _hoisted_1 = [\"src\"]\nconst _hoisted_2 = { class: \"wave-text\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _withDirectives(_createElementVNode(\"div\", {\n      id: \"loadingScreen\",\n      class: _normalizeClass({ 'fade-out': _ctx.isFadingOut })\n    }, [\n      _createElementVNode(\"img\", {\n        src: _ctx.getLogoSrc(),\n        alt: \"Logo\",\n        class: \"logo\"\n      }, null, 8, _hoisted_1),\n      _createElementVNode(\"h1\", _hoisted_2, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.loadingText, (letter, index) => {\n          return (_openBlock(), _createElementBlock(\"span\", {\n            key: index,\n            class: \"letter\",\n            style: _normalizeStyle({ animationDelay: `${index * 0.1}s` })\n          }, _toDisplayString(letter), 5))\n        }), 128))\n      ])\n    ], 2), [\n      [_vShow, _ctx.isLoading]\n    ]),\n    _cache[0] || (_cache[0] = _createElementVNode(\"canvas\", { id: \"mainCanvas\" }, null, -1))\n  ]))\n}","<template>\r\n  <div>\r\n    <div v-show=\"isLoading\" id=\"loadingScreen\" :class=\"{ 'fade-out': isFadingOut }\">\r\n      <img :src=\"getLogoSrc()\" alt=\"Logo\" class=\"logo\" />\r\n      <h1 class=\"wave-text\">\r\n        <span\r\n            v-for=\"(letter, index) in loadingText\"\r\n            :key=\"index\"\r\n            class=\"letter\"\r\n            :style=\"{ animationDelay: `${index * 0.1}s` }\"\r\n        >\r\n          {{ letter }}\r\n        </span>\r\n      </h1>\r\n    </div>\r\n\r\n    <canvas id=\"mainCanvas\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, ref } from 'vue';\r\nimport { Game } from \"@/YellowSubmarine/Game\";\r\nimport { Effect, Engine, HavokPlugin } from \"@babylonjs/core\";\r\nimport HavokPhysics from \"@babylonjs/havok\";\r\n\r\nexport default defineComponent({\r\n  name: 'YellowSubmarine',\r\n  setup() {\r\n    const isLoading = ref(true);\r\n    const isFadingOut = ref(false);\r\n    const loadingText = 'Chargement...'.split('');\r\n\r\n    const getLogoSrc = () => {\r\n      return process.env.NODE_ENV === \"production\"\r\n          ? \"/YellowSubmarine/logo.png\"\r\n          : \"/logo.png\";\r\n    };\r\n\r\n    return { isLoading, isFadingOut, loadingText, getLogoSrc };\r\n  },\r\n  async mounted() {\r\n    const canvas = document.getElementById(\"mainCanvas\") as HTMLCanvasElement;\r\n    Effect.ShadersRepository = process.env.NODE_ENV === \"production\"\r\n        ? \"/YellowSubmarine/shaders/\"\r\n        : \"/shaders/\";\r\n    Engine.ShadersRepository = process.env.NODE_ENV === \"production\"\r\n        ? \"/YellowSubmarine/shaders/\"\r\n        : \"/shaders/\";\r\n\r\n    const havok = await HavokPhysics();\r\n    const havokPlugin = new HavokPlugin(true, havok);\r\n    const game = new Game(canvas, havokPlugin);\r\n\r\n    await game.init();\r\n\r\n    setTimeout(() => {\r\n      this.isFadingOut = true;\r\n      setTimeout(() => {\r\n        this.isLoading = false;\r\n      }, 1000);\r\n    }, 500);\r\n  },\r\n});\r\n</script>\r\n\r\n<style scoped>\r\ncanvas {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: block;\r\n}\r\n\r\n#loadingScreen {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  background: #0b1c1b;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 9999;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  transition: opacity 1s ease;\r\n  gap: 30px; /* espace entre logo et texte */\r\n}\r\n\r\n.fade-out {\r\n  opacity: 0;\r\n  pointer-events: none;\r\n}\r\n\r\n.logo {\r\n  width: 400px;\r\n  height: auto;\r\n}\r\n\r\n.wave-text {\r\n  font-size: 2.5rem;\r\n  display: flex;\r\n  gap: 4px;\r\n  justify-content: center;\r\n}\r\n\r\n.letter {\r\n  display: inline-block;\r\n  animation: bounce 1.4s infinite ease-in-out;\r\n}\r\n\r\n@keyframes bounce {\r\n  0%, 100% { transform: translateY(0); }\r\n  50% { transform: translateY(-8px); }\r\n}\r\n</style>\r\n","import {\r\n    Color3,\r\n    DirectionalLight,\r\n    GlowLayer,\r\n    Mesh,\r\n    MeshBuilder,\r\n    Scene,\r\n    StandardMaterial,\r\n    Vector3\r\n} from \"@babylonjs/core\";\r\nimport {Game} from \"@/YellowSubmarine/Game\";\r\n\r\nexport abstract class CelestialBody {\r\n\r\n    protected _bodyMesh : Mesh\r\n    protected _haloMesh : Mesh\r\n    private _light : DirectionalLight\r\n\r\n    // Physics Characteristic\r\n    public get _defaultPosition(): Vector3{\r\n        return new Vector3(1000, 200, -1000);\r\n    }\r\n\r\n    public get _diameter(): number {\r\n        return 40;\r\n    }\r\n\r\n    // Light Characteristic\r\n    public get _intensity(): number {\r\n        return 1.0;\r\n    }\r\n    public get _diffuse(): Color3 {\r\n        return new Color3(1.0, 1.0, 1.0);\r\n    }\r\n    public get _specular(): Color3 {\r\n        return new Color3(1.0, 1.0, 1.0);\r\n    }\r\n    public get _emissiveColor(): Color3 {\r\n        return new Color3(1.0, 1.0, 1.0);\r\n    }\r\n\r\n    constructor(){\r\n        this._bodyMesh = this.createBody(Game.scene);\r\n        this._haloMesh = this.createHalo(Game.scene);\r\n        this._light = this.createLight(Game.scene);\r\n        this.configMaterials(Game.scene);\r\n    }\r\n\r\n    private createBody(scene: Scene) : Mesh{\r\n        const body = MeshBuilder.CreateSphere(\"celestialBody\", {\r\n            diameter: this._diameter,\r\n            segments: 32\r\n        }, scene);\r\n        body.infiniteDistance = true;\r\n        body.isPickable = false;\r\n        body.position = this._defaultPosition;\r\n        return body;\r\n    }\r\n\r\n    private createHalo(scene: Scene) : Mesh{\r\n        const halo = MeshBuilder.CreateSphere(\"halo\", {\r\n            diameter: this._diameter * 1.05,\r\n            segments: 32\r\n        }, scene);\r\n        halo.infiniteDistance = true;\r\n        halo.isPickable = false;\r\n        halo.position = this._defaultPosition;\r\n        return halo;\r\n    }\r\n\r\n    private createLight(scene: Scene) : DirectionalLight{\r\n        let direction = new Vector3(0, 0, 0);\r\n        if (scene.activeCamera) {\r\n            direction = this._bodyMesh.position.subtract(scene.activeCamera.position).normalize();\r\n        }\r\n        const light = new DirectionalLight(\"sunLight\", direction.negate(), scene);\r\n        light.intensity = this._intensity;\r\n        light.shadowEnabled = true;\r\n        light.parent = this._bodyMesh;\r\n        light.diffuse = this._diffuse;\r\n        light.specular = this._specular;\r\n        const glowLayer = new GlowLayer(\"\", scene);\r\n        glowLayer.intensity = 0.3;\r\n        return light;\r\n    }\r\n\r\n    protected configMaterials(scene: Scene){\r\n        const bodyMaterial = new StandardMaterial(\"bodyMat\", scene);\r\n        bodyMaterial.emissiveColor = this._emissiveColor;\r\n        bodyMaterial.diffuseColor = this._diffuse;\r\n        bodyMaterial.specularColor = this._specular;\r\n        this._bodyMesh.material = bodyMaterial;\r\n\r\n        const haloMaterial = new StandardMaterial(\"haloMat\", scene);\r\n        haloMaterial.emissiveColor = this._emissiveColor;\r\n        haloMaterial.diffuseColor = this._diffuse;\r\n        haloMaterial.specularColor = this._specular;\r\n        haloMaterial.alpha = 0.5;\r\n        this._haloMesh.material = haloMaterial;\r\n    }\r\n\r\n    public get bodyMesh(): Mesh {\r\n        return this._bodyMesh;\r\n    }\r\n\r\n    public get haloMesh(): Mesh {\r\n        return this._haloMesh;\r\n    }\r\n\r\n    public get light(): DirectionalLight {\r\n        return this._light;\r\n    }\r\n\r\n    public get position(): Vector3 {\r\n        return this.bodyMesh.position;\r\n    }\r\n\r\n    public set position(position: Vector3){\r\n        this._bodyMesh.position = position;\r\n        this._haloMesh.position = position;\r\n        this.light.position = position;\r\n    }\r\n}","import {CelestialBody} from \"@/YellowSubmarine/sky system/CelestialBody\";\r\nimport {Color3, HemisphericLight, Scene, ShadowGenerator, Vector3} from \"@babylonjs/core\";\r\nimport {Game} from \"@/YellowSubmarine/Game\";\r\n\r\nexport abstract class HemisphericCelestialBody extends CelestialBody{\r\n\r\n    private _hemiLight : HemisphericLight\r\n    private shadowGenerator: ShadowGenerator;\r\n\r\n    public get hemiLight(){\r\n        return this._hemiLight;\r\n    }\r\n\r\n    public get hemiLightIntensity(){\r\n        return this._hemiLight.intensity;\r\n    }\r\n\r\n    public get _emissiveColor(): Color3 {\r\n        return new Color3(1.0, 1.0, 1.0);\r\n    }\r\n\r\n    public getPosition(){\r\n        return this._bodyMesh.position;\r\n    }\r\n\r\n    public get _direction(): Vector3{\r\n        if(Game.scene.activeCamera){\r\n            this.light.direction = this._bodyMesh.absolutePosition.subtract(Vector3.Zero()).normalize();\r\n            this._hemiLight.direction = this._bodyMesh.position.subtract(Game.scene.activeCamera.position).normalize();\r\n        }\r\n        return this.light.direction;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this._hemiLight = this.createHemiLight(Game.scene);\r\n        this.configMaterials(Game.scene);\r\n        this._hemiLight.direction = Vector3.Up();\r\n        this._hemiLight.isEnabled(false);\r\n        this.shadowGenerator = new ShadowGenerator(1024, this.light);\r\n        this.shadowGenerator.useBlurExponentialShadowMap = true;\r\n        this.shadowGenerator.blurKernel = 16;\r\n        this.light.shadowEnabled = true;\r\n        Game.scene.onBeforeRenderObservable.add(() => {\r\n            if (Game.scene.activeCamera) {\r\n                const dir = this._bodyMesh.absolutePosition.subtract(Vector3.Zero()).normalize();\r\n                this.light.direction = dir.negate();\r\n            }\r\n        });\r\n    }\r\n\r\n    private createHemiLight(scene: Scene) : HemisphericLight{\r\n        const light = new HemisphericLight(\"hemisphericLight\", Vector3.Up(), scene);\r\n        light.intensity = 2;\r\n        light.diffuse = this._diffuse;\r\n        light.shadowEnabled = false;\r\n        light.parent = this._bodyMesh;\r\n        return light;\r\n    }\r\n\r\n}","import {\r\n    Color3,\r\n    Vector3\r\n} from \"@babylonjs/core\";\r\nimport {HemisphericCelestialBody} from \"@/YellowSubmarine/sky system/HemisphericCelestialBody\";\r\n\r\nexport class Sun extends HemisphericCelestialBody {\r\n\r\n    // Physics Characteristic\r\n    public override get _defaultPosition(): Vector3{\r\n        return new Vector3(1000, 200, -1000);\r\n    }\r\n    public override get _diameter(): number {\r\n        return 40;\r\n    }\r\n\r\n    // Light Characteristic\r\n    public override get _intensity(): number {\r\n        return 5;\r\n    }\r\n    public override get hemiLightIntensity(){\r\n        return 2;\r\n    }\r\n    public override get _diffuse(): Color3 {\r\n        return new Color3(1.0, 1.0, 1.0);\r\n    }\r\n    public override get _specular(): Color3 {\r\n        return new Color3(1.0, 1.0, 1.0);\r\n    }\r\n    public override get _emissiveColor(): Color3 {\r\n        return new Color3(1.0, 1.0, 1.0);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n}","import {\r\n    Color3,\r\n    Vector3\r\n} from \"@babylonjs/core\";\r\nimport {HemisphericCelestialBody} from \"@/YellowSubmarine/sky system/HemisphericCelestialBody\";\r\n\r\nexport class Moon extends HemisphericCelestialBody {\r\n\r\n    // Physics Characteristic\r\n    public override get _defaultPosition(): Vector3{\r\n        return new Vector3(1000, 200, 1000);\r\n    }\r\n    public override get _diameter(): number {\r\n        return 40;\r\n    }\r\n\r\n    // Light Characteristic\r\n    public override get _intensity(): number {\r\n        return 2;\r\n    }\r\n    public override get hemiLightIntensity(){\r\n        return 1;\r\n    }\r\n    public override get _diffuse(): Color3 {\r\n        return new Color3(1.0, 1.0, 1.0);\r\n    }\r\n    public override get _specular(): Color3 {\r\n        return new Color3(1.0, 1.0, 1.0);\r\n    }\r\n    public override get _emissiveColor(): Color3 {\r\n        return new Color3(1.0, 1.0, 1.0);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n}\r\n","import {\r\n    Color3, CubeTexture, Effect,\r\n    Mesh,\r\n    MeshBuilder,\r\n    ShaderMaterial, Texture\r\n} from \"@babylonjs/core\";\r\nimport {Game} from \"@/YellowSubmarine/Game\";\r\nimport {Sky} from \"@/YellowSubmarine/sky system/Sky\";\r\n\r\n\r\nexport class SkyBox {\r\n\r\n    private static _instance: SkyBox;\r\n    private _daySkyboxTexture: CubeTexture;\r\n    private _nightSkyboxTexture: CubeTexture;\r\n    private _shaderMaterial: ShaderMaterial;\r\n\r\n    public static get instance(): SkyBox {\r\n        return this._instance;\r\n    }\r\n\r\n    public get mesh(): Mesh {\r\n        return this._mesh;\r\n    }\r\n\r\n    private _mesh: Mesh;\r\n\r\n    constructor() {\r\n        SkyBox._instance = this;\r\n        this._mesh = MeshBuilder.CreateBox(\"skyBox\", { size: 10000 }, Game.scene);\r\n        this._mesh.infiniteDistance = true;\r\n        this._mesh.isPickable = false;\r\n\r\n        this._shaderMaterial = new ShaderMaterial(\"skyboxMaterial\", Game.scene, {\r\n            vertex: \"skyboxShader\",\r\n            fragment: \"skyboxShader\",\r\n        },{\r\n            attributes: [\"position\", \"uv\"],\r\n            uniforms: [\"worldViewProjection\", \"timeOfTheDay\"],\r\n            samplers: [\"daySkyboxTexture\", \"nightSkyboxTexture\"],\r\n        })\r\n\r\n        Game.scene.onBeforeRenderObservable.add(() => {\r\n            this._shaderMaterial.setFloat(\"timeOfTheDay\", Sky.instance.dayNightCycle.timeOfTheDay);\r\n        })\r\n\r\n        this._daySkyboxTexture = CubeTexture.CreateFromImages([\r\n            \"textures/skybox/alternate day/px.png\",\r\n            \"textures/skybox/alternate day/pz.png\",\r\n            \"textures/skybox/alternate day/py.png\",\r\n            \"textures/skybox/alternate day/nx.png\",\r\n            \"textures/skybox/alternate day/nz.png\",\r\n            \"textures/skybox/alternate day/ny.png\"\r\n        ], Game.scene);\r\n        this._daySkyboxTexture.coordinatesMode = Texture.SKYBOX_MODE;\r\n        this._nightSkyboxTexture = CubeTexture.CreateFromImages([\r\n            \"textures/skybox/alternate night/px.png\",\r\n            \"textures/skybox/alternate night/pz.png\",\r\n            \"textures/skybox/alternate night/py.png\",\r\n            \"textures/skybox/alternate night/nx.png\",\r\n            \"textures/skybox/alternate night/nz.png\",\r\n            \"textures/skybox/alternate night/ny.png\"\r\n        ], Game.scene);\r\n        this._nightSkyboxTexture.coordinatesMode = Texture.SKYBOX_MODE;\r\n\r\n        this._shaderMaterial.setTexture(\"daySkyboxTexture\", this._daySkyboxTexture);\r\n        this._shaderMaterial.setTexture(\"nightSkyboxTexture\", this._nightSkyboxTexture);\r\n        this._shaderMaterial.backFaceCulling = false;\r\n\r\n        this._mesh.material = this._shaderMaterial;\r\n\r\n\r\n/*\r\n        const material = new ShaderMaterial(\"skyShader\", Game.scene, {\r\n            vertex: \"sky\",\r\n            fragment: \"sky\",\r\n        }, {\r\n            attributes: [\"position\"],\r\n            uniforms: [\r\n                \"worldViewProjection\", \"timeOfDay\",\r\n                \"dayTop\", \"dayBottom\",\r\n                \"sunsetTop\", \"sunsetBottom\",\r\n                \"dayTop\", \"nightBottom\",\r\n                \"dawnTop\", \"dawnBottom\"\r\n            ],\r\n        });\r\n\r\n        material.backFaceCulling = false;\r\n        this._mesh.material = material;\r\n\r\n        this.initColors(material);\r\n\r\n        Game.scene.onBeforeRenderObservable.add(() => {\r\n            const secondsInCycle = 30;\r\n            const time = performance.now() / 1000;\r\n            const timeOfDay = (time % secondsInCycle) / secondsInCycle;\r\n            material.setFloat(\"timeOfDay\", timeOfDay);\r\n        });\r\n*/\r\n    }\r\n\r\n    private initColors(material: ShaderMaterial): void {\r\n        material.setColor3(\"dayTop\", new Color3(0.3, 0.78, 0.98));       // #3580d9\r\n        material.setColor3(\"dayBottom\", new Color3(1.0, 0.94, 0.80)); // bleu très clair avec un ton chaud\r\n\r\n        material.setColor3(\"sunsetTop\", new Color3(1.0, 0.69, 0.4));     // #ffb066 (anciennement #fff2ce)\r\n        material.setColor3(\"sunsetBottom\", new Color3(0.58, 0.55, 0.82)); // #938cd2\r\n\r\n        material.setColor3(\"dawnTop\", new Color3(0.65, 0.80, 1.0));      // Bleu clair doux #a6ccff\r\n        material.setColor3(\"dawnBottom\", new Color3(1.0, 0.69, 0.4));    // Orange doux #ffb066\r\n\r\n        material.setColor3(\"nightTop\", new Color3(0.043, 0.106, 0.212));    // #3a4a6b\r\n        material.setColor3(\"nightBottom\", new Color3(0.23, 0.29, 0.42)); // #0b1b36\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n}","import {Moon} from \"@/YellowSubmarine/sky system/Moon\";\r\nimport {Sky} from \"@/YellowSubmarine/sky system/Sky\";\r\nimport {Sun} from \"@/YellowSubmarine/sky system/Sun\";\r\nimport {Color3, Vector3} from \"@babylonjs/core\";\r\nimport {Game} from \"@/YellowSubmarine/Game\";\r\n\r\nexport class DayNightCycle {\r\n    \r\n    private _sun : Sun;\r\n    private _moon : Moon;\r\n    private _time = 0;\r\n\r\n    constructor(sky : Sky) {\r\n        this._sun = sky.sun;\r\n        this._moon = sky.moon;\r\n\r\n        Game.scene.onBeforeRenderObservable.add(() => {\r\n            this._time += Game.engine.getDeltaTime() * 0.00001;\r\n            if (this._time > 1) this._time -= 1;\r\n\r\n            this.updateBody(this._time);\r\n            this.updateLight();\r\n            this.updateMoonLight();\r\n        });\r\n    }\r\n\r\n    public get timeOfTheDay(): number{\r\n        return this._time;\r\n    }\r\n\r\n\r\n    private updateBody(time: number): void {\r\n        const sunAngle = time * 2.0 * Math.PI;\r\n        const moonAngle = (time * 2.0 * Math.PI) / 1.5 + Math.PI;\r\n\r\n        const sunRadius = this._sun._defaultPosition.length();\r\n        const moonRadius = this._moon._defaultPosition.length();\r\n\r\n        const inclination = Math.PI / 6;\r\n\r\n        const sunX = sunRadius * Math.cos(sunAngle);\r\n        const sunY = sunRadius * Math.sin(sunAngle) * Math.sin(inclination);\r\n        const sunZ = sunRadius * Math.sin(sunAngle) * Math.cos(inclination);\r\n\r\n        const moonInclination = Math.PI / 8;\r\n        const moonX = moonRadius * Math.cos(moonAngle);\r\n        const moonY = moonRadius * Math.sin(moonAngle) * Math.sin(moonInclination);\r\n        const moonZ = moonRadius * Math.sin(moonAngle) * Math.cos(moonInclination);\r\n\r\n        this._sun.position = new Vector3(sunX, sunY, sunZ);\r\n        this._moon.position = new Vector3(moonX, moonY, moonZ);\r\n    }\r\n\r\n    private updateLight(){\r\n        const sunPos = this._sun.position;\r\n        const sunRadius = this._sun._defaultPosition.length();\r\n        const sunHeight = sunPos.y;\r\n\r\n        const normalized = Math.max(0, Math.min(sunHeight / sunRadius, 1));\r\n        const smooth = Math.pow(normalized, 1.5);\r\n\r\n        this._sun.light.intensity = smooth * this._sun._intensity;\r\n\r\n        if (normalized <= 0.01) {\r\n            this._sun.light.setEnabled(false);\r\n        } else {\r\n            this._sun.light.setEnabled(true);\r\n        }\r\n\r\n        if (smooth > 0 && smooth < 0.3) {\r\n            const sunsetColor = Color3.FromHexString(\"#ff884d\");\r\n            this._sun.light.diffuse = Color3.Lerp(sunsetColor, Color3.White(), smooth / 0.3);\r\n        } else {\r\n            this._sun.light.diffuse = Color3.White();\r\n        }\r\n\r\n        const hemi = this._sun.hemiLight;\r\n        if (hemi) {\r\n            const dayColor = Color3.FromHexString(\"#b6e8ff\");\r\n            const nightColor = Color3.FromHexString(\"#1a1a2e\");\r\n            hemi.diffuse = Color3.Lerp(nightColor, dayColor, smooth);\r\n        }\r\n        Game.scene.ambientColor = new Color3(1, 0, 0);\r\n    }\r\n\r\n    private updateMoonLight(): void {\r\n        const moonPos = this._moon.position;\r\n        const moonRadius = this._moon._defaultPosition.length();\r\n        const moonHeight = moonPos.y;\r\n\r\n        const normalized = Math.max(0, Math.min(moonHeight / moonRadius, 1));\r\n        const smooth = Math.pow(normalized, 1.5);\r\n\r\n        if (this._moon.light) {\r\n            this._moon.light.intensity = smooth * this._moon._intensity;\r\n\r\n            if (normalized <= 0.01) {\r\n                this._moon.light.setEnabled(false);\r\n            } else {\r\n                this._moon.light.setEnabled(true);\r\n            }\r\n        }\r\n\r\n        const hemi = this._moon.hemiLight;\r\n        if (hemi) {\r\n            const nightColor = Color3.FromHexString(\"#818de3\");\r\n            const deepNightColor = Color3.FromHexString(\"#1a1a2e\");\r\n            hemi.diffuse = Color3.Lerp(deepNightColor, nightColor, smooth);\r\n            hemi.intensity = 0.1 + smooth * 0.3;\r\n        }\r\n\r\n    }\r\n}","import {Sun} from \"@/YellowSubmarine/sky system/Sun\";\r\nimport {Moon} from \"@/YellowSubmarine/sky system/Moon\";\r\nimport {SkyBox} from \"@/YellowSubmarine/sky system/SkyBox\";\r\nimport {DayNightCycle} from \"@/YellowSubmarine/sky system/DayNightCycle\";\r\n\r\nexport class Sky{\r\n    private static _instance: Sky;\r\n\r\n    private _sun : Sun;\r\n    private _moon : Moon;\r\n    private _skybox : SkyBox;\r\n    private _dayNightCycle: DayNightCycle;\r\n\r\n    public static get instance(): Sky{\r\n        return this._instance;\r\n    }\r\n\r\n    constructor() {\r\n        Sky._instance = this;\r\n        this._sun = new Sun();\r\n        this._moon = new Moon();\r\n        this._skybox = new SkyBox();\r\n        this._dayNightCycle = new DayNightCycle(this);\r\n    }\r\n\r\n    public get sun(): Sun {\r\n        return this._sun;\r\n    }\r\n\r\n    public set sun(value: Sun) {\r\n        this._sun = value;\r\n    }\r\n\r\n    public static get sun(){\r\n        return this._instance._sun;\r\n    }\r\n\r\n    public get skybox(): SkyBox {\r\n        return this._skybox;\r\n    }\r\n\r\n    public set skybox(value: SkyBox) {\r\n        this._skybox = value;\r\n    }\r\n\r\n    public get moon(): Moon {\r\n        return this._moon;\r\n    }\r\n\r\n    public set moon(value: Moon) {\r\n        this._moon = value;\r\n    }\r\n\r\n    public get dayNightCycle(): DayNightCycle {\r\n        return this._dayNightCycle;\r\n    }\r\n\r\n}","import {\r\n    AbstractMesh, DepthRenderer, Effect, GeometryBufferRenderer, Material, MirrorTexture,\r\n    MultiRenderTarget, Nullable, Plane, RenderTargetTexture, Scene,\r\n    ShaderMaterial, Texture, Vector2, Vector3, Vector4\r\n} from \"@babylonjs/core\";\r\nimport {Game} from \"@/YellowSubmarine/Game\";\r\nimport {Sky} from \"@/YellowSubmarine/sky system/Sky\";\r\n\r\nexport class ReflectiveToonWaterMaterial {\r\n\r\n    private static _instance: ReflectiveToonWaterMaterial;\r\n\r\n    protected _scene: Scene;\r\n    protected _material: ShaderMaterial;\r\n    private _depthRenderer: DepthRenderer;\r\n    private _depthMap: RenderTargetTexture;\r\n    private _geometryBufferRenderer: Nullable<GeometryBufferRenderer>;\r\n    private _gBuffer: Nullable<MultiRenderTarget> = null;\r\n    private _renderListPredicate: (mesh: AbstractMesh) => boolean;\r\n\r\n    protected constructor() {\r\n        ReflectiveToonWaterMaterial._instance = this;\r\n        this._scene = Game.scene;\r\n        const camera = this._scene.activeCamera;\r\n\r\n        this._material = new ShaderMaterial(\"toonWaterMaterial\", this._scene,{\r\n            vertex: this.shaderMaterialName, fragment: this.shaderMaterialName,\r\n        },{\r\n            attributes: [\"position\", \"normal\", \"uv\"],\r\n            uniforms: [\"world\",\"view\",\"projection\",\"depthShallowColor\", \"depthDeepColor\", \"depthMaximumDistance\",\r\n                \"surfaceNoiseST\", \"surfaceNoiseCutoff\", \"foamMaxDistance\", \"foamMinDistance\", \"surfaceNoiseScroll\", \"time\", \"surfaceDistortionST\",\r\n                \"surfaceDistortionAmount\", \"screensize\", \"timeOfTheDay\"],\r\n            samplers: [\"linearDepthTexture\", \"surfaceNoiseTexture\",\"surfaceDistortionTexture\",\"reflectionTexture\"],\r\n            needAlphaTesting: true,\r\n        });\r\n\r\n\r\n        this._depthRenderer = this._scene.enableDepthRenderer(undefined, false, undefined, undefined, true);\r\n        this._depthMap = this._depthRenderer.getDepthMap();\r\n        this._renderListPredicate = (m) => m.material !== this._material;\r\n        this._depthMap.renderListPredicate = this._renderListPredicate;\r\n\r\n        this._material.setVector4(\"depthShallowColor\", new Vector4(0.325, 0.807, 0.971, 0.725));\r\n        this._material.setVector4(\"depthDeepColor\", new Vector4(0.086, 0.407, 1, 0.749));\r\n        this._material.setFloat(\"depthMaximumDistance\", 10.0);\r\n        this._material.setTexture(\"linearDepthTexture\", this._depthMap);\r\n        this._material.setVector4(\"surfaceNoiseST\", new Vector4(1, 4, 0, 0));\r\n        this._material.setTexture(\"surfaceNoiseTexture\", new Texture(\"textures/PerlinNoise.png\"));\r\n        this._material.setFloat(\"surfaceNoiseCutoff\", 0.85);\r\n        this._material.setFloat(\"foamMaxDistance\", 0.6);\r\n        this._material.setFloat(\"foamMinDistance\", 0.04);\r\n        this._material.setVector2(\"surfaceNoiseScroll\", new Vector2(0.03, 0.03));\r\n        this._material.setVector4(\"surfaceDistortionST\", new Vector4(1,1,0,0));\r\n        this._material.setFloat(\"surfaceDistortionAmount\", 0.27);\r\n        this._material.setTexture(\"surfaceDistortionTexture\", new Texture(\"textures/WaterDistortion.png\"));\r\n        Game.scene.onBeforeRenderObservable.add(() => {\r\n            this._material.setFloat(\"timeOfTheDay\", Sky.instance.dayNightCycle.timeOfTheDay);\r\n        })\r\n        this._material.setVector2(\"screensize\", new Vector2(window.innerWidth, window.innerHeight));\r\n        window.addEventListener(\"resize\", () => this._material.setVector2(\"screensize\", new Vector2(window.innerWidth, window.innerHeight)) );\r\n        const mirrorTexture = new MirrorTexture(\"mirrorTexture\", 1024, Game.scene);\r\n        mirrorTexture.mirrorPlane = Plane.FromPositionAndNormal(Vector3.Zero(), Vector3.Down());\r\n        mirrorTexture.renderListPredicate = (m) => true;\r\n        this._material.setTexture(\"reflectionTexture\", mirrorTexture);\r\n        Game.scene.customRenderTargets.push(mirrorTexture);\r\n        // this._material.disableDepthWrite = false;\r\n\r\n        this._geometryBufferRenderer = this._scene.enableGeometryBufferRenderer();\r\n        if(this._geometryBufferRenderer != null) {\r\n            this._geometryBufferRenderer.enableNormal;\r\n            this._gBuffer = this._geometryBufferRenderer.getGBuffer();\r\n            this._gBuffer.renderListPredicate = this._renderListPredicate\r\n            const cameraNormalTexture = this._gBuffer.textures[GeometryBufferRenderer.NORMAL_TEXTURE_TYPE];\r\n            this._material.setTexture(\"cameraNormalTexture\", cameraNormalTexture);\r\n        }\r\n\r\n        let time = 0;\r\n        Game.scene.onBeforeRenderObservable.add(() => {\r\n            time += (Game.engine.getDeltaTime()/1000) * 0.01;\r\n            this._material.setFloat(\"time\", time);\r\n        })\r\n\r\n        /*this._material = new ShaderMaterial(\"mirror\", Game.scene, {\r\n            vertex: \"mirror\", fragment: \"mirror\"\r\n        },{\r\n            attributes: [\"position\", \"normal\", \"uv\"],\r\n            uniforms: [\"worldViewProjection\", \"screensize\"],\r\n            samplers: [\"mirrorSampler\"]\r\n        })\r\n\r\n        const mirrorTexture = new MirrorTexture(\"mirrorTex\",512, Game.scene);\r\n        mirrorTexture.mirrorPlane = Plane.FromPositionAndNormal(Vector3.Zero(), Vector3.Down());\r\n        mirrorTexture.renderListPredicate = (m) => m.material !== this._material;\r\n        this._material.setTexture(\"mirrorSampler\", mirrorTexture);\r\n        const canvas = Game.canvas;\r\n        this._material.setVector2(\"screensize\", new Vector2(canvas.width, canvas.height));\r\n        canvas.addEventListener(\"resize\", () => this._material.setVector2(\"screensize\", new Vector2(canvas.width, canvas.height)) );\r\n        Game.scene.customRenderTargets.push(mirrorTexture);*/\r\n\r\n    }\r\n\r\n    public static get instance(){\r\n        if(this._instance == null){\r\n            this._instance = new this();\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    public static get material(){\r\n        return this.instance._material;\r\n    }\r\n\r\n    protected get shaderMaterialName(){ return \"toonWaterAndReflections\"; }\r\n\r\n}","import {\r\n    Mesh,\r\n    MeshBuilder,\r\n    PhysicsBody,\r\n    PhysicsMotionType,\r\n    PhysicsShape,\r\n    PhysicsShapeType,\r\n    Vector3,\r\n} from \"@babylonjs/core\";\r\nimport {Game} from \"@/YellowSubmarine/Game\";\r\nimport {ReflectiveToonWaterMaterial} from \"@/YellowSubmarine/shader material/ReflectiveToonWaterMaterial\";\r\n\r\nexport class Sea {\r\n\r\n        private static _instance: Sea;\r\n        private _seaMesh: Mesh;\r\n        private _invisiblePlane: Mesh;\r\n        private _invisiblePlaneBody: PhysicsBody;\r\n        private _invisiblePlaneShape: PhysicsShape;\r\n\r\n        constructor() {\r\n            Sea._instance = this;\r\n            this._seaMesh = MeshBuilder.CreateGround(\r\n                \"waterPlane\",\r\n                {\r\n                    width: 2048,\r\n                    height: 2048,\r\n                    subdivisions: 128,\r\n                },\r\n                Game.scene\r\n            );\r\n            this._invisiblePlane = MeshBuilder.CreateGround(\r\n                \"collisionPlane\",\r\n                {\r\n                    width: 2048,\r\n                    height: 2048,\r\n                    subdivisions: 128,\r\n                },\r\n                Game.scene\r\n            );\r\n            this._invisiblePlane.position = new Vector3(0,-2,0);\r\n            this._invisiblePlaneBody = new PhysicsBody(this._invisiblePlane, PhysicsMotionType.STATIC, false, Game.scene);\r\n            this._invisiblePlaneShape = new PhysicsShape({\r\n                type: PhysicsShapeType.BOX,\r\n                parameters: {\r\n                    mesh: this._invisiblePlane,\r\n                    extents: new Vector3(2048,2,2048),\r\n                }\r\n            }, Game.scene);\r\n            this._invisiblePlaneBody.shape = this._invisiblePlaneShape;\r\n            this._invisiblePlaneBody.setMassProperties({\r\n                mass: 0,\r\n            });\r\n            this._seaMesh.material = ReflectiveToonWaterMaterial.material;\r\n\r\n        }\r\n\r\n\r\n}","import {\r\n    Angle,\r\n    ArcRotateCamera,\r\n    Scalar,\r\n    Vector3\r\n} from \"@babylonjs/core\";\r\nimport {Game} from \"@/YellowSubmarine/Game\";\r\nimport {CameraConfiguration} from \"@/YellowSubmarine/camera system/CameraConfiguration\";\r\nimport {Lerp} from \"@babylonjs/core/Maths/math.scalar.functions\";\r\n\r\nexport class ConfigurableCamera {\r\n    private static _instance: ConfigurableCamera;\r\n\r\n    public static get instance(): ConfigurableCamera {\r\n        return this._instance;\r\n    }\r\n\r\n    private _cameraConfiguration?: CameraConfiguration;\r\n    private _arcRotateCamera: ArcRotateCamera;\r\n    private _positionLerpFactor = 2.0;\r\n    private _rotationLerpFactor = 2.0;\r\n\r\n    constructor() {\r\n        ConfigurableCamera._instance = this;\r\n        this._arcRotateCamera = new ArcRotateCamera(\"customCamera\", 0, 0, 0, Vector3.Zero(), Game.scene);\r\n        Game.scene.onBeforeRenderObservable.add( () => {\r\n            const deltaTimeInSeconds = Game.engine.getDeltaTime() / 1000;\r\n            this.update(deltaTimeInSeconds);\r\n        } );\r\n    }\r\n\r\n    public set cameraConfiguration(cameraParameter: CameraConfiguration | undefined) {\r\n        const oldCameraParameter = this._cameraConfiguration;\r\n        this._cameraConfiguration = cameraParameter;\r\n        if(!oldCameraParameter){\r\n            this.jumpToTarget();\r\n        }\r\n    }\r\n\r\n    public get cameraConfiguration(): CameraConfiguration | undefined {\r\n        return this._cameraConfiguration;\r\n    }\r\n\r\n    private update(deltaTimeInSec: number) {\r\n        this.updatePosition(deltaTimeInSec);\r\n        this.updateRotation(deltaTimeInSec);\r\n    }\r\n\r\n    private jumpToTarget(){\r\n        if(this._cameraConfiguration){\r\n            this._arcRotateCamera.target = this._cameraConfiguration.targetPosition;\r\n            this._arcRotateCamera.alpha = this._cameraConfiguration.wantedAlpha;\r\n            this._arcRotateCamera.beta = this._cameraConfiguration.wantedBeta;\r\n            this._arcRotateCamera.radius = this._cameraConfiguration.distanceFromTarget;\r\n        }\r\n    }\r\n\r\n    private updatePosition(deltaTimeInSec: number) {\r\n        if(this._cameraConfiguration) {\r\n            const target = this._cameraConfiguration.target;\r\n            if(target){\r\n                this._arcRotateCamera.target = Vector3.Lerp(this._arcRotateCamera.target, this._cameraConfiguration.targetPosition, deltaTimeInSec * this._positionLerpFactor);\r\n            }\r\n            this._arcRotateCamera.radius = Lerp(this._arcRotateCamera.radius, this._cameraConfiguration.distanceFromTarget, deltaTimeInSec * this._positionLerpFactor);\r\n            this._arcRotateCamera.lowerRadiusLimit = this._arcRotateCamera.radius;\r\n            this._arcRotateCamera.upperRadiusLimit = this._arcRotateCamera.radius;\r\n        }\r\n    }\r\n\r\n    private updateRotation(deltaTimeInSec: number) {\r\n        if(this._cameraConfiguration) {\r\n            const wantedAlpha = this._cameraConfiguration.wantedAlpha;\r\n            const wantedBeta = this._cameraConfiguration.wantedBeta;\r\n            this._arcRotateCamera.alpha =  Angle.FromDegrees( Scalar.LerpAngle(Angle.FromRadians(this._arcRotateCamera.alpha).degrees(), Angle.FromRadians(wantedAlpha).degrees(), deltaTimeInSec * this._rotationLerpFactor) ).radians();\r\n            this._arcRotateCamera.beta =  Angle.FromDegrees( Scalar.LerpAngle(Angle.FromRadians(this._arcRotateCamera.beta).degrees(), Angle.FromRadians(wantedBeta).degrees(), deltaTimeInSec * this._rotationLerpFactor) ).radians();\r\n        }\r\n    }\r\n\r\n}","import {Angle, Quaternion, TransformNode, Vector3} from \"@babylonjs/core\";\r\n\r\nexport class CameraConfiguration {\r\n\r\n    private _offset: Vector3 = Vector3.Zero();\r\n    private _wantedAlpha = 0;\r\n    private _wantedBeta = Angle.FromDegrees(80).radians();\r\n    private _distanceFromTarget = 10;\r\n    private _target?: TransformNode\r\n    private _currentLowerBetaLimit? : number;\r\n    private _currentUpperBetaLimit? : number;\r\n\r\n    public get targetPosition(): Vector3{\r\n        return ( this._target?.absolutePosition ?? Vector3.Zero() ).add( this._offset.rotateByQuaternionToRef(this._target?.absoluteRotationQuaternion ?? Quaternion.Identity(), Vector3.Zero() ) );\r\n    }\r\n\r\n    public get offset(): Vector3 {\r\n        return this._offset;\r\n    }\r\n\r\n    public set offset(offset: Vector3) {\r\n        this._offset = offset;\r\n    }\r\n\r\n    public get wantedAlpha(): number {\r\n        return this._wantedAlpha;\r\n    }\r\n\r\n    public set wantedAlpha(alpha: number) {\r\n        this._wantedAlpha = alpha;\r\n    }\r\n\r\n    public get wantedBeta(): number {\r\n        return this._wantedBeta;\r\n    }\r\n\r\n    public set wantedBeta(beta: number) {\r\n        this._wantedBeta = beta;\r\n        if(this._currentLowerBetaLimit){\r\n            this._wantedBeta = Math.max(this._wantedBeta, this._currentLowerBetaLimit);\r\n        }\r\n        if(this._currentUpperBetaLimit){\r\n            this._wantedBeta = Math.min(this._wantedBeta, this._currentUpperBetaLimit);\r\n        }\r\n    }\r\n\r\n    public get distanceFromTarget(): number {\r\n        return this._distanceFromTarget;\r\n    }\r\n\r\n    public set distanceFromTarget(distanceFromTarget: number) {\r\n        this._distanceFromTarget = distanceFromTarget;\r\n    }\r\n\r\n    public get target(): TransformNode | undefined {\r\n        return this._target;\r\n    }\r\n\r\n    public set target(target: TransformNode | undefined) {\r\n        this._target = target;\r\n    }\r\n\r\n    public get currentUpperBetaLimit(): number | undefined {\r\n        return this._currentUpperBetaLimit;\r\n    }\r\n\r\n    public set currentUpperBetaLimit(value: number | undefined) {\r\n        this._currentUpperBetaLimit = value;\r\n    }\r\n\r\n    public get currentLowerBetaLimit(): number | undefined {\r\n        return this._currentLowerBetaLimit;\r\n    }\r\n\r\n    public set currentLowerBetaLimit(value: number | undefined) {\r\n        this._currentLowerBetaLimit = value;\r\n    }\r\n\r\n}\r\n","import {AbstractInteraction} from \"@/YellowSubmarine/interaction system/interactions/AbstractInteraction\";\r\nimport {KeyboardEventTypes, Observable} from \"@babylonjs/core\";\r\nimport {Player} from \"@/YellowSubmarine/Player\";\r\n\r\nexport class InteractionManager{\r\n\r\n    private static _instance: InteractionManager;\r\n\r\n    public static get instance(): InteractionManager {\r\n        return this._instance;\r\n    }\r\n\r\n    // private _interactionArray: Array<AbstractInteraction> = new Array<AbstractInteraction>();\r\n    private _currentInteraction?: AbstractInteraction;\r\n\r\n    public onInteractionAvailable: Observable<AbstractInteraction>;\r\n    public onInteractionUnavailable: Observable<AbstractInteraction>;\r\n\r\n    constructor() {\r\n        InteractionManager._instance = this;\r\n        this.onInteractionAvailable = new Observable<AbstractInteraction>();\r\n        this.onInteractionUnavailable = new Observable<AbstractInteraction>();\r\n        Player.onPlayerPressedAKey.add( (eventData) => {\r\n\r\n            if(\r\n                eventData.type === KeyboardEventTypes.KEYDOWN &&\r\n                this._currentInteraction &&\r\n                eventData.event.code === this._currentInteraction.code\r\n            ) {\r\n                this.executeInteraction();\r\n            }\r\n        } )\r\n    }\r\n\r\n    public makeInteractionAvailable(interaction: AbstractInteraction){\r\n        if(this._currentInteraction) {\r\n            this.makeInteractionUnavailable(this._currentInteraction);\r\n        }\r\n        this._currentInteraction = interaction;\r\n        this.onInteractionAvailable.notifyObservers(interaction);\r\n    }\r\n\r\n    public makeInteractionUnavailable(interaction: AbstractInteraction){\r\n        this._currentInteraction = undefined;\r\n        this.onInteractionUnavailable.notifyObservers(interaction);\r\n    }\r\n\r\n    public executeInteraction(){\r\n        const interaction = this._currentInteraction;\r\n        if(interaction){\r\n            interaction.executeInteraction();\r\n        }\r\n    }\r\n\r\n}","import {InteractionManager} from \"@/YellowSubmarine/interaction system/InteractionManager\";\r\n\r\nexport abstract class AbstractInteraction {\r\n\r\n    protected _code:string;\r\n    protected  _simplifiedCode: string;\r\n\r\n    public get code(): string {\r\n        return this._code;\r\n    }\r\n\r\n    public get simplifiedCode(): string {\r\n        return this._simplifiedCode;\r\n    }\r\n\r\n    protected constructor(code: string, simplifiedCode: string) {\r\n        this._code = code;\r\n        this._simplifiedCode = simplifiedCode;\r\n    }\r\n\r\n    public makeAvailable(){\r\n        InteractionManager.instance.makeInteractionAvailable(this);\r\n    }\r\n\r\n    public makeUnavailable(){\r\n        InteractionManager.instance.makeInteractionUnavailable(this);\r\n    }\r\n\r\n    public abstract executeInteraction(): void;\r\n\r\n}","import {AbstractInteraction} from \"@/YellowSubmarine/interaction system/interactions/AbstractInteraction\";\r\nimport {AbstractMesh} from \"@babylonjs/core\";\r\n\r\nexport abstract class DialogueInteraction extends AbstractInteraction{\r\n    public abstract get mesh():AbstractMesh | undefined;\r\n}","import {Control} from \"@babylonjs/gui\";\r\n\r\nexport abstract class UI{\r\n\r\n    public abstract get controlNode(): Control;\r\n}","import {ImportMeshAsync, ImportMeshOptions, Scene} from \"@babylonjs/core\";\r\nimport {Game} from \"@/YellowSubmarine/Game\";\r\n\r\nexport class Utils {\r\n\r\n    public static loadMesh(path: string, scene?: Scene,  options?: ImportMeshOptions | undefined) {\r\n        return ImportMeshAsync(path, scene??Game.scene, options);\r\n    }\r\n\r\n    public static sleep(ms: number) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n}","import {BBStyle} from \"@/YellowSubmarine/ui system/BBCode/BBStyle\";\r\n\r\nexport abstract class BBTag {\r\n\r\n    constructor(public param?: string){}\r\n\r\n    public abstract onOpen(style: BBStyle): BBStyle;\r\n\r\n    public onClose(style: BBStyle): BBStyle{\r\n        return style;\r\n    }\r\n\r\n}","import {BBTag} from \"@/YellowSubmarine/ui system/BBCode/BBTag\";\r\nimport {BBStyle} from \"@/YellowSubmarine/ui system/BBCode/BBStyle\";\r\n\r\nexport class ItalicTag extends BBTag {\r\n    onOpen(style: BBStyle): BBStyle {\r\n        return {...style, italic: true};\r\n    }\r\n}","import {BBTag} from \"@/YellowSubmarine/ui system/BBCode/BBTag\";\r\nimport {BBStyle} from \"@/YellowSubmarine/ui system/BBCode/BBStyle\";\r\n\r\nexport class BoldTag extends BBTag {\r\n    onOpen(style: BBStyle): BBStyle {\r\n        return {...style, bold: true};\r\n    }\r\n\r\n}","import {BBTag} from \"@/YellowSubmarine/ui system/BBCode/BBTag\";\r\nimport {BBStyle} from \"@/YellowSubmarine/ui system/BBCode/BBStyle\";\r\n\r\nexport class ColorTag extends BBTag {\r\n    onOpen(style: BBStyle): BBStyle {\r\n        return {...style, color: this.param || style.color};\r\n    }\r\n\r\n}","import {BBTag} from \"@/YellowSubmarine/ui system/BBCode/BBTag\";\r\nimport {BBStyle} from \"@/YellowSubmarine/ui system/BBCode/BBStyle\";\r\n\r\nexport class SizeTag extends BBTag {\r\n\r\n    onOpen(style: BBStyle): BBStyle {\r\n        const newStyle = {...style};\r\n        const parsedSize = parseInt(this.param || \"\");\r\n\r\n        if(!isNaN(parsedSize)){\r\n            newStyle.size = parsedSize;\r\n        }\r\n        return newStyle;\r\n    }\r\n\r\n}","import {BBStyle} from \"@/YellowSubmarine/ui system/BBCode/BBStyle\";\r\nimport {BBTag} from \"@/YellowSubmarine/ui system/BBCode/BBTag\";\r\nimport {ItalicTag} from \"@/YellowSubmarine/ui system/BBCode/Tags/ItalicTag\";\r\nimport {BoldTag} from \"@/YellowSubmarine/ui system/BBCode/Tags/BoldTag\";\r\nimport {ColorTag} from \"@/YellowSubmarine/ui system/BBCode/Tags/ColorTag\";\r\nimport {SizeTag} from \"@/YellowSubmarine/ui system/BBCode/Tags/SizeTag\";\r\n\r\ninterface Segment { text: string; style: BBStyle; }\r\n\r\nexport class BBParser {\r\n\r\n    private _registry = new Map<string, new (param?: string) => BBTag>();\r\n\r\n    constructor() {\r\n        this.initRegistry();\r\n    }\r\n\r\n    private initRegistry(): void{\r\n        this._registry.set(\"i\", ItalicTag);\r\n        this._registry.set(\"g\", BoldTag);\r\n        this._registry.set(\"c\", ColorTag);\r\n        this._registry.set(\"s\", SizeTag);\r\n    }\r\n\r\n    public parseBBCode(input: string): Segment[] {\r\n        const segments: Segment[] = [];\r\n        const tagStack: BBTag[] = [];\r\n        const styleStack: BBStyle[] = [];\r\n\r\n        let cursor = 0;\r\n        let currentStyle: BBStyle = {};\r\n\r\n        const regex = /\\[\\/?([a-z]+)(?:=([^\\]]+))?\\]/ig;\r\n        let match: RegExpExecArray | null;\r\n\r\n        while ((match = regex.exec(input))) {\r\n            const [full, name, param] = match;\r\n            const isClosing = full.startsWith(\"[/\");\r\n            const idx = match.index;\r\n\r\n            // 1) Texte avant le tag\r\n            if (idx > cursor) {\r\n                segments.push({ text: input.slice(cursor, idx), style: { ...currentStyle } });\r\n            }\r\n            cursor = idx + full.length;\r\n\r\n            if (!isClosing) {\r\n                const TagClass = this._registry.get(name);\r\n                if (TagClass) {\r\n                    const tagInstance = new TagClass(param);\r\n                    tagStack.push(tagInstance);\r\n                    styleStack.push({ ...currentStyle }); // snapshot du style\r\n                    currentStyle = tagInstance.onOpen(currentStyle);\r\n                }\r\n            } else {\r\n                const last = tagStack.pop();\r\n                const previousStyle = styleStack.pop();\r\n                if (last && previousStyle) {\r\n                    currentStyle = previousStyle; // restore snapshot\r\n                }\r\n            }\r\n        }\r\n\r\n        if (cursor < input.length) {\r\n            segments.push({ text: input.slice(cursor), style: { ...currentStyle } });\r\n        }\r\n\r\n        return segments;\r\n    }\r\n\r\n\r\n}","import { BBParser } from \"@/YellowSubmarine/ui system/BBCode/BBParser\";\r\nimport { BBStyle } from \"@/YellowSubmarine/ui system/BBCode/BBStyle\";\r\nimport { Control, TextBlock, StackPanel } from \"@babylonjs/gui\";\r\n\r\nexport interface StyledSegment {\r\n    text: string;\r\n    style: BBStyle;\r\n}\r\n\r\nexport interface StyledTextBlock {\r\n    tb: TextBlock;\r\n    full: string;\r\n}\r\n\r\nexport class TextLayoutManager {\r\n    private parser: BBParser;\r\n    private ctx: CanvasRenderingContext2D;\r\n    private defaultFontSize: number;\r\n    private horizontalPadding: number;\r\n\r\n    constructor(\r\n        ctx: CanvasRenderingContext2D,\r\n        defaultFontSize = 24,\r\n        horizontalPadding = 4\r\n    ) {\r\n        this.parser = new BBParser();\r\n        this.ctx = ctx;\r\n        this.defaultFontSize = defaultFontSize;\r\n        this.horizontalPadding = horizontalPadding;\r\n    }\r\n\r\n    public layout(text: string, maxWidth: number): { lines: StyledSegment[][]; segments: StyledSegment[] } {\r\n        const segments = this.parser.parseBBCode(text).map(s => ({\r\n            text: s.text,\r\n            style: s.style\r\n        }));\r\n\r\n        const lines = this.splitLines(segments, maxWidth);\r\n\r\n        return { lines, segments };\r\n    }\r\n\r\n    private getTextWidth(text: string, fontSize: number): number {\r\n        this.ctx.font = `${fontSize}px sans-serif`;\r\n        return this.ctx.measureText(text).width;\r\n    }\r\n\r\n    private splitLines(segments: StyledSegment[], maxWidth: number): StyledSegment[][] {\r\n        const lines: StyledSegment[][] = [];\r\n        let currentLine: StyledSegment[] = [];\r\n        let currentWidth = 0;\r\n\r\n        for (const segment of segments) {\r\n            const fontSize = segment.style.size || this.defaultFontSize;\r\n            const segWidth = this.getTextWidth(segment.text, fontSize) + this.horizontalPadding * 2;\r\n\r\n            if (currentWidth + segWidth <= maxWidth) {\r\n                currentLine.push(segment);\r\n                currentWidth += segWidth;\r\n            } else {\r\n                const parts = segment.text.split(/(\\s+)/);\r\n\r\n                for (const part of parts) {\r\n                    if (part === '' || (part.trim() === '' && currentLine.length === 0)) continue;\r\n\r\n                    const partWidth = this.getTextWidth(part, fontSize) + this.horizontalPadding * 2;\r\n\r\n                    if (currentWidth + partWidth > maxWidth && currentLine.length) {\r\n                        lines.push(currentLine);\r\n                        currentLine = [];\r\n                        currentWidth = 0;\r\n                        if (part.trim() === '') continue;\r\n                    }\r\n\r\n                    currentLine.push({ text: part, style: segment.style });\r\n                    currentWidth += partWidth;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (currentLine.length) lines.push(currentLine);\r\n        return lines;\r\n    }\r\n\r\n    /**\r\n     * Crée les StackPanels (lignes) et TextBlocks (segments) formatés.\r\n     * Renvoie un tableau d'objets pour animer le texte.\r\n     */\r\n    public createTextBlocks(\r\n        lines: StyledSegment[][],\r\n        lineHeight: number,\r\n        textBlockHorizontalPadding: number,\r\n        defaultFontSize: number\r\n    ): { linesPanels: StackPanel[]; blocks: StyledTextBlock[] } {\r\n        const blocks: StyledTextBlock[] = [];\r\n        const linesPanels: StackPanel[] = [];\r\n\r\n        lines.forEach(lineSegments => {\r\n            const row = new StackPanel();\r\n            row.isVertical = false;\r\n            row.height = `${lineHeight}px`;\r\n            row.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_CENTER;\r\n            row.verticalAlignment = Control.VERTICAL_ALIGNMENT_BOTTOM;\r\n\r\n            lineSegments.forEach(segment => {\r\n                const tb = new TextBlock();\r\n                tb.text = \"\";\r\n                this.applyStyle(tb, segment.style, textBlockHorizontalPadding, defaultFontSize);\r\n                tb.textWrapping = false;\r\n                tb.resizeToFit = true;\r\n                tb.verticalAlignment = Control.VERTICAL_ALIGNMENT_BOTTOM;\r\n\r\n                row.addControl(tb);\r\n                blocks.push({ tb, full: segment.text });\r\n            });\r\n\r\n            linesPanels.push(row);\r\n        });\r\n\r\n        return { linesPanels, blocks };\r\n    }\r\n\r\n    private applyStyle(tb: TextBlock, style: BBStyle, padding: number, defaultFontSize: number) {\r\n        tb.fontWeight = style.bold ? \"bold\" : \"normal\";\r\n        tb.fontStyle = style.italic ? \"italic\" : \"normal\";\r\n        tb.color = style.color || \"black\";\r\n        tb.fontSize = style.size || defaultFontSize;\r\n        tb.paddingLeft = `${padding}px`;\r\n        tb.paddingRight = `${padding}px`;\r\n    }\r\n}\r\n","import { Utils } from \"@/YellowSubmarine/Utils\";\r\nimport {StyledTextBlock} from \"@/YellowSubmarine/ui system/TextLayoutManager\";\r\n\r\nexport class TextAnimator {\r\n    private _advanceRequested = false;\r\n\r\n    public get advanceRequested() {\r\n        return this._advanceRequested;\r\n    }\r\n\r\n\r\n    public requestAdvance() {\r\n        this._advanceRequested = true;\r\n    }\r\n\r\n    public resetAdvance() {\r\n        this._advanceRequested = false;\r\n    }\r\n\r\n    public async animateBlocks(blocks: StyledTextBlock[], speed: number) {\r\n        let skipped = false;\r\n        for (const { tb, full } of blocks) {\r\n            for (let i = 1; i <= full.length; i++) {\r\n                tb.text = full.slice(0, i);\r\n                if (this._advanceRequested) {\r\n                    skipped = true;\r\n                    break;\r\n                }\r\n                await Utils.sleep(speed);\r\n            }\r\n            if (skipped) break;\r\n        }\r\n    }\r\n}\r\n","import { UI } from \"@/YellowSubmarine/ui system/UI\";\r\nimport { Control, Rectangle, Image, StackPanel } from \"@babylonjs/gui\";\r\nimport { Conversation } from \"@/YellowSubmarine/dialogue system/Conversation\";\r\nimport { Utils } from \"@/YellowSubmarine/Utils\";\r\nimport { TextLayoutManager } from \"@/YellowSubmarine/ui system/TextLayoutManager\";\r\nimport {TextAnimator} from \"@/YellowSubmarine/ui system/TextAnimator\";\r\n\r\nexport class DialogueInteractionUI extends UI {\r\n\r\n    private readonly CONTAINER_WIDTH = 0.4;\r\n    private readonly CONTAINER_CORNER_RADIUS = 10;\r\n    private readonly CONTAINER_THICKNESS = 5;\r\n    private readonly CONTAINER_COLOR = \"rgb(168, 98, 68)\";\r\n    private readonly CONTAINER_BACKGROUND = \"rgb(255, 199, 130)\";\r\n    private readonly CONTAINER_OFFSET_Y = -200;\r\n\r\n    private readonly TEXT_PADDING = 8;\r\n    private readonly TEXT_BLOCK_HORIZONTAL_PADDING = 2;\r\n    private readonly TEXT_DEFAULT_FONT_SIZE = 24;\r\n    private readonly TEXT_LINE_SPACING = 8;\r\n    private readonly TEXT_EXTRA_CONTAINER_MARGIN = 20;\r\n    private readonly TEXT_SPEED = 20;\r\n\r\n    private readonly TRIANGLE_IMAGE_PATH = \"ui/triangle.png\";\r\n    private readonly TRIANGLE_SIZE = \"24px\";\r\n    private readonly TRIANGLE_BLINK_INTERVAL = 300;\r\n\r\n    private _container!: Rectangle;\r\n    private _verticalStack!: StackPanel;\r\n    private _triangle!: Image;\r\n\r\n    private static _isTextFullyDisplayed = false;\r\n\r\n\r\n    private _layoutManager: TextLayoutManager;\r\n    private _textAnimator: TextAnimator;\r\n\r\n    public get controlNode(): Control {\r\n        return this._container;\r\n    }\r\n\r\n    public static get isTextFullyDisplayed(): boolean {\r\n        return this._isTextFullyDisplayed;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.initContainer();\r\n        this.initStack();\r\n        this.initTriangle();\r\n\r\n        this._layoutManager = new TextLayoutManager(\r\n            (() => {\r\n                const canvas = document.createElement(\"canvas\");\r\n                return canvas.getContext(\"2d\")!;\r\n            })(),\r\n            this.TEXT_DEFAULT_FONT_SIZE,\r\n            this.TEXT_BLOCK_HORIZONTAL_PADDING\r\n        );\r\n\r\n        this._textAnimator = new TextAnimator();\r\n\r\n        Conversation.onAnyConversationStart.add((conv) => {\r\n            this._container.isVisible = true;\r\n            if (conv.conversationProvider?.mesh) {\r\n                this._container.linkWithMesh(conv.conversationProvider.mesh);\r\n                this._container.linkOffsetY = this.CONTAINER_OFFSET_Y;\r\n            }\r\n        });\r\n\r\n        Conversation.onAnyConversationEnd.add(() => {\r\n            this._stopBlink();\r\n            this._container.isVisible = false;\r\n        });\r\n\r\n        Conversation.onAnyDialogueStart.add((dialog) =>\r\n            this.showText(dialog.text, this.TEXT_SPEED)\r\n        );\r\n    }\r\n\r\n    private initContainer() {\r\n        this._container = new Rectangle();\r\n        this._container.width = `${this.CONTAINER_WIDTH * 100}%`;\r\n        this._container.cornerRadius = this.CONTAINER_CORNER_RADIUS;\r\n        this._container.thickness = this.CONTAINER_THICKNESS;\r\n        this._container.color = this.CONTAINER_COLOR;\r\n        this._container.background = this.CONTAINER_BACKGROUND;\r\n        this._container.verticalAlignment = Control.VERTICAL_ALIGNMENT_BOTTOM;\r\n        this._container.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_CENTER;\r\n        this._container.isVisible = false;\r\n        this._container.paddingLeft = `${this.TEXT_PADDING}px`;\r\n        this._container.paddingRight = `${this.TEXT_PADDING}px`;\r\n    }\r\n\r\n    private initStack() {\r\n        this._verticalStack = new StackPanel();\r\n        this._verticalStack.isVertical = true;\r\n        this._verticalStack.width = \"100%\";\r\n        this._verticalStack.paddingBottom = \"5px\";\r\n        this._container.addControl(this._verticalStack);\r\n    }\r\n\r\n    private initTriangle() {\r\n        this._triangle = new Image(\"nextTriangle\", this.TRIANGLE_IMAGE_PATH);\r\n        this._triangle.width = this.TRIANGLE_SIZE;\r\n        this._triangle.height = this.TRIANGLE_SIZE;\r\n        this._triangle.verticalAlignment = Control.VERTICAL_ALIGNMENT_BOTTOM;\r\n        this._triangle.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_RIGHT;\r\n        this._triangle.isVisible = false;\r\n        this._container.addControl(this._triangle);\r\n    }\r\n\r\n    private async showText(text: string, speed: number) {\r\n        DialogueInteractionUI._isTextFullyDisplayed = false;\r\n        this._stopBlink();\r\n        this._textAnimator.resetAdvance();\r\n        this._verticalStack.clearControls();\r\n\r\n        const advanceObserver = Conversation.onAdvanceDialogueRequested.add(() => {\r\n            this._textAnimator.requestAdvance();\r\n        });\r\n\r\n        const canvasWidth = document.querySelector(\"canvas\")!.clientWidth;\r\n        const containerPixelWidth = canvasWidth * this.CONTAINER_WIDTH;\r\n        const maxWidth =\r\n            containerPixelWidth -\r\n            this.TEXT_PADDING * 2 -\r\n            this.TEXT_BLOCK_HORIZONTAL_PADDING * 2;\r\n\r\n        const { lines, segments } = this._layoutManager.layout(text, maxWidth);\r\n\r\n        const maxFontSize = Math.max(\r\n            ...segments.map((s) => s.style.size || this.TEXT_DEFAULT_FONT_SIZE)\r\n        );\r\n        const lineHeight = maxFontSize * 1.2 + this.TEXT_LINE_SPACING;\r\n\r\n        const { linesPanels, blocks } = this._layoutManager.createTextBlocks(\r\n            lines,\r\n            lineHeight,\r\n            this.TEXT_BLOCK_HORIZONTAL_PADDING,\r\n            this.TEXT_DEFAULT_FONT_SIZE\r\n        );\r\n\r\n        linesPanels.forEach(linePanel => {\r\n            this._verticalStack.addControl(linePanel);\r\n        });\r\n\r\n        const contentHeight = lines.length * lineHeight;\r\n        const totalHeight =\r\n            contentHeight + this.TEXT_PADDING * 2 + this.TEXT_EXTRA_CONTAINER_MARGIN;\r\n        this._container.height = `${totalHeight}px`;\r\n\r\n        await this._textAnimator.animateBlocks(blocks, speed);\r\n\r\n        if (this._textAnimator.advanceRequested) {\r\n            blocks.forEach((b) => (b.tb.text = b.full));\r\n        }\r\n\r\n        DialogueInteractionUI._isTextFullyDisplayed = true;\r\n        Conversation.onAdvanceDialogueRequested.remove(advanceObserver);\r\n        await this._startBlink();\r\n    }\r\n\r\n    private async _startBlink() {\r\n        if(!DialogueInteractionUI._isTextFullyDisplayed) return;\r\n        this._triangle.isVisible = true;\r\n\r\n        while (DialogueInteractionUI.isTextFullyDisplayed) {\r\n            this._triangle.alpha = 1;\r\n            await Utils.sleep(this.TRIANGLE_BLINK_INTERVAL);\r\n            this._triangle.alpha = 0;\r\n            await Utils.sleep(this.TRIANGLE_BLINK_INTERVAL);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private _stopBlink() {\r\n        this._triangle.isVisible = false;\r\n    }\r\n}\r\n","import {Conversation} from \"@/YellowSubmarine/dialogue system/Conversation\";\r\nimport {DialogueInteraction} from \"@/YellowSubmarine/interaction system/interactions/DialogueInteraction\";\r\nimport {AbstractMesh} from \"@babylonjs/core\";\r\nimport {DialogueInteractionUI} from \"@/YellowSubmarine/interaction system/ui/DialogueInteractionUI\";\r\n\r\nexport class NextDialogueInteraction extends DialogueInteraction{\r\n\r\n    constructor(private _conversation:Conversation) {\r\n        super(\"Space\", \"_\");\r\n    }\r\n\r\n    executeInteraction(): void {\r\n        if(!DialogueInteractionUI.isTextFullyDisplayed){\r\n            Conversation.onAdvanceDialogueRequested.notifyObservers();\r\n            return;\r\n        }\r\n        this._conversation.next();\r\n    }\r\n\r\n    get mesh(): AbstractMesh | undefined {\r\n        return this._conversation.conversationProvider?.mesh;\r\n    }\r\n\r\n}","import {Observable} from \"@babylonjs/core\";\r\nimport {AbstractDialogueNode} from \"@/YellowSubmarine/dialogue system/nodes/AbstractDialogueNode\";\r\nimport {NextDialogueInteraction} from \"@/YellowSubmarine/dialogue system/interactions/NextDialogueInteraction\";\r\nimport {ConfigurableCamera} from \"@/YellowSubmarine/camera system/ConfigurableCamera\";\r\nimport {Player} from \"@/YellowSubmarine/Player\";\r\nimport {IConversationProvider} from \"@/YellowSubmarine/dialogue system/IConversationProvider\";\r\n\r\n\r\nexport class Conversation {\r\n\r\n    private _onEnding = (): void => {return};\r\n\r\n    private _conversationProvider?: IConversationProvider;\r\n\r\n    public static onAnyDialogueStart:Observable<AbstractDialogueNode> = new Observable();\r\n    public static onAnyConversationStart: Observable<Conversation> = new Observable();\r\n    public static onAnyConversationEnd: Observable<Conversation> = new Observable();\r\n    public static onAdvanceDialogueRequested: Observable<void> = new Observable();\r\n\r\n    public onDialogueStart: Observable<AbstractDialogueNode> = new Observable();\r\n    public onConversationStart: Observable<Conversation> = new Observable();\r\n    public onConversationEnd: Observable<Conversation> = new Observable();\r\n\r\n    private _nextInteraction: NextDialogueInteraction = new NextDialogueInteraction(this);\r\n    private _currentNode: AbstractDialogueNode | undefined = undefined;\r\n    private _rootNode: AbstractDialogueNode | undefined = undefined;\r\n\r\n    public get conversationProvider(): IConversationProvider | undefined{\r\n        return this._conversationProvider;\r\n    }\r\n\r\n    public set conversationProvider(conversationProvider: IConversationProvider | undefined) {\r\n        this._conversationProvider = conversationProvider;\r\n    }\r\n\r\n    public get root(){\r\n        return this._rootNode;\r\n    }\r\n    public set root(value: AbstractDialogueNode | undefined){\r\n        this._rootNode = value;\r\n    }\r\n\r\n    public get onEnding(): () => void {\r\n        return this._onEnding;\r\n    }\r\n\r\n    public set onEnding(value: () => void) {\r\n        this._onEnding = value;\r\n    }\r\n\r\n    private enterNode(node: AbstractDialogueNode){\r\n        this._currentNode = node;\r\n        this._currentNode.execute();\r\n        this.onDialogueStart.notifyObservers(node);\r\n        Conversation.onAnyDialogueStart.notifyObservers(node);\r\n    }\r\n\r\n    public startConversation(): void {\r\n        this._currentNode = this.root;\r\n        this.onConversationStart.notifyObservers(this);\r\n        Conversation.onAnyConversationStart.notifyObservers(this);\r\n        this.enterNode(<AbstractDialogueNode>this._currentNode);\r\n        this._nextInteraction.makeAvailable();\r\n        const cameraConfiguration = this._conversationProvider?.cameraConfiguration\r\n        if(cameraConfiguration) {\r\n            ConfigurableCamera.instance.cameraConfiguration = cameraConfiguration;\r\n        }\r\n    }\r\n\r\n    public next(): void {\r\n        const nextNode = this._currentNode?.nextNode;\r\n        if (nextNode) {\r\n            this.enterNode(nextNode);\r\n        } else {\r\n            this.endConversation();\r\n        }\r\n    }\r\n\r\n    private endConversation() {\r\n        this._currentNode = undefined;\r\n        this._nextInteraction.makeUnavailable();\r\n        this.onConversationEnd.notifyObservers(this);\r\n        Conversation.onAnyConversationEnd.notifyObservers(this);\r\n        ConfigurableCamera.instance.cameraConfiguration = Player.playerCameraConfiguration;\r\n        this._onEnding();\r\n    }\r\n\r\n    public isInProgress(): boolean {\r\n        return !!this._currentNode;\r\n    }\r\n}","import {Game} from \"@/YellowSubmarine/Game\";\r\nimport {Angle, KeyboardEventTypes, KeyboardInfo, Observable, Scalar} from \"@babylonjs/core\";\r\nimport {ConfigurableCamera} from \"@/YellowSubmarine/camera system/ConfigurableCamera\";\r\nimport {CameraConfiguration} from \"@/YellowSubmarine/camera system/CameraConfiguration\";\r\nimport {Submarine} from \"@/YellowSubmarine/Submarine\";\r\nimport {Conversation} from \"@/YellowSubmarine/dialogue system/Conversation\";\r\n\r\ntype CameraRotationInfo = {movementX: number, movementY: number};\r\n\r\nexport class Player {\r\n\r\n\r\n    private static _instance: Player;\r\n    private static _onCameraRotationObservable: Observable<CameraRotationInfo> = new Observable();\r\n    private static _onPlayerPressedAKey: Observable<KeyboardInfo> = new Observable();\r\n    private static _playerCameraConfiguration: CameraConfiguration = new CameraConfiguration();\r\n    private static _horizontalCameraSensitivity = 5;\r\n    private static _verticalCameraSensitivity = 5;\r\n    private static _isMovementEnabled = true;\r\n\r\n\r\n    public static get instance() {\r\n        return this._instance;\r\n    }\r\n\r\n    public static get onCameraRotationObservable(){\r\n        return this._onCameraRotationObservable;\r\n    }\r\n\r\n    public static get onPlayerPressedAKey(): Observable<KeyboardInfo> {\r\n        return this._onPlayerPressedAKey;\r\n    }\r\n\r\n    public static get playerCameraConfiguration(): CameraConfiguration {\r\n        return this._playerCameraConfiguration;\r\n    }\r\n\r\n    private static _isForwardPressed = false;\r\n    private static _isBackwardPressed = false;\r\n    private static _isLeftPressed = false;\r\n    private static _isRightPressed = false;\r\n\r\n    constructor() {\r\n        Player._instance = this;\r\n        Player.initializeCameraParameter();\r\n        Player.registerKeyboardInputs();\r\n        Player.registerMouseMovementInputs();\r\n        Conversation.onAnyConversationStart.add(() => Player.disableMovement());\r\n        Conversation.onAnyConversationEnd.add(() => Player.enableMovement());\r\n    }\r\n\r\n    public static isMoveForwardPressed(): boolean {\r\n        return this._isForwardPressed && this._isMovementEnabled;\r\n    }\r\n\r\n    public static isMoveBackwardPressed(): boolean {\r\n        return this._isBackwardPressed && this._isMovementEnabled;\r\n    }\r\n\r\n    public static isTurnLeftPressed(): boolean {\r\n        return this._isLeftPressed && this._isMovementEnabled;\r\n    }\r\n\r\n    public static isTurnRightPressed(): boolean {\r\n        return this._isRightPressed && this._isMovementEnabled;\r\n    }\r\n\r\n    private static registerKeyboardInputs(){\r\n        const scene = Game.scene;\r\n        scene.onKeyboardObservable.add( (eventData) => {\r\n            if(Game.isGameFocused){\r\n                const state = eventData.type === KeyboardEventTypes.KEYDOWN;\r\n                if(eventData.event.code === \"KeyW\"){\r\n                    this._isForwardPressed = state;\r\n                }\r\n                else if(eventData.event.code === \"KeyS\"){\r\n                    this._isBackwardPressed = state;\r\n                }\r\n                else if(eventData.event.code === \"KeyA\"){\r\n                    this._isLeftPressed = state;\r\n                }\r\n                else if(eventData.event.code === \"KeyD\"){\r\n                    this._isRightPressed = state;\r\n                }\r\n                this.onPlayerPressedAKey.notifyObservers(eventData);\r\n\r\n            }\r\n        } );\r\n    }\r\n\r\n    private static registerMouseMovementInputs() {\r\n        const scene = Game.scene;\r\n        scene.onPointerObservable.add((pointerInfo) => {\r\n            if(Game.isGameFocused){\r\n                const event = pointerInfo.event as PointerEvent;\r\n                const movementX = event.movementX/window.screen.width;\r\n                const movementY = event.movementY/window.screen.height;\r\n                this._onCameraRotationObservable.notifyObservers({movementX, movementY});\r\n                this.updateCameraParameter(movementX, movementY);\r\n            }\r\n        })\r\n    }\r\n\r\n    public static enableMovement(){\r\n        this._isMovementEnabled = true;\r\n    }\r\n\r\n    public static disableMovement(){\r\n        this._isMovementEnabled = false;\r\n    }\r\n\r\n    private static initializeCameraParameter() {\r\n        Submarine.instance.meshCreationPromise.then((mesh) => {\r\n            this._playerCameraConfiguration.target = mesh;\r\n            this._playerCameraConfiguration.distanceFromTarget = 25;\r\n            this._playerCameraConfiguration.currentLowerBetaLimit = Angle.FromDegrees(30).radians();\r\n            this._playerCameraConfiguration.currentUpperBetaLimit = Angle.FromDegrees(85).radians();\r\n            this._playerCameraConfiguration.wantedAlpha = Angle.FromDegrees(-90).radians();\r\n            this._playerCameraConfiguration.wantedBeta = Angle.FromDegrees(45).radians();\r\n            ConfigurableCamera.instance.cameraConfiguration = this._playerCameraConfiguration;\r\n        })\r\n    }\r\n\r\n    private static updateCameraParameter(movementX: number, movementY: number) {\r\n        this._playerCameraConfiguration.wantedAlpha = Scalar.LerpAngle(this._playerCameraConfiguration.wantedBeta, this._playerCameraConfiguration.wantedAlpha - movementX * this._horizontalCameraSensitivity, 1);\r\n        this._playerCameraConfiguration.wantedBeta = Scalar.LerpAngle(this._playerCameraConfiguration.wantedBeta, this._playerCameraConfiguration.wantedBeta - movementY * this._verticalCameraSensitivity, 1);\r\n\r\n    }\r\n\r\n    private static isCurrentCamera(){\r\n        return ConfigurableCamera.instance.cameraConfiguration == this._playerCameraConfiguration;\r\n    }\r\n}","import {\r\n    AbstractMesh,\r\n    Color3,\r\n    InputBlock,\r\n    NodeMaterial,\r\n    Nullable,\r\n    PBRMaterial,\r\n    Texture,\r\n    TextureBlock,\r\n} from \"@babylonjs/core\";\r\nimport {Game} from \"@/YellowSubmarine/Game\";\r\n\r\nexport class CartoonShaderMaterial {\r\n\r\n    private _nodeMaterialPromise;\r\n    private _nodeMaterial!: NodeMaterial;\r\n\r\n    public async assignMaterial(mesh: AbstractMesh){\r\n        await this._nodeMaterialPromise.then(() => {\r\n            mesh.material = this._nodeMaterial;\r\n        })\r\n\r\n    }\r\n\r\n    public constructor() {\r\n        this._nodeMaterialPromise = NodeMaterial.ParseFromFileAsync(\"ToonShader\", \"shaders/PBRToonMaterial.json\", Game.scene).then((nodeMaterial) => {\r\n            this._nodeMaterial = nodeMaterial;\r\n            this._nodeMaterial.maxSimultaneousLights = 6;\r\n            this.saturationMultiplier = 1.5;\r\n            this._nodeMaterial.build();\r\n        })\r\n    }\r\n\r\n    public set saturationMultiplier(saturationMultiplier: number) {\r\n        this._nodeMaterialPromise.then(() => {\r\n            (this._nodeMaterial.getBlockByName(\"SaturationMultiplier\") as InputBlock).value = saturationMultiplier;\r\n        })\r\n    }\r\n\r\n    public set numberOfSteps(numberOfSteps: number) {\r\n        this._nodeMaterialPromise.then(() => {\r\n            (this._nodeMaterial.getBlockByName(\"NumberOfSteps\") as InputBlock).value = numberOfSteps;\r\n        })\r\n    }\r\n\r\n    public set luminanceEasingFactor(luminanceEasingFactor: number) {\r\n        this._nodeMaterialPromise.then(() => {\r\n            (this._nodeMaterial.getBlockByName(\"LuminanceEasingFactor\") as InputBlock).value = luminanceEasingFactor;\r\n        })\r\n    }\r\n\r\n    public set indexOfRefraction(indexOfRefraction: number) {\r\n        this._nodeMaterialPromise.then(() => {\r\n            (this._nodeMaterial.getBlockByName(\"IoR\") as InputBlock).value = indexOfRefraction;\r\n        })\r\n    }\r\n\r\n    public set albedoColor(albedoColor: Color3){\r\n        this._nodeMaterialPromise.then(() => {\r\n            (this._nodeMaterial.getBlockByName(\"AlbedoColor\") as InputBlock).value = albedoColor;\r\n        })\r\n    }\r\n\r\n    public set albedoTexture(albedoTexture: Texture){\r\n        this._nodeMaterialPromise.then(() => {\r\n            (this._nodeMaterial.getBlockByName(\"AlbedoTexture\") as TextureBlock).texture = albedoTexture;\r\n        })\r\n    }\r\n\r\n    public set opacity(opacity: number){\r\n        this._nodeMaterialPromise.then(() => {\r\n            (this._nodeMaterial.getBlockByName(\"OpacityFactor\") as InputBlock).value = opacity;\r\n        })\r\n    }\r\n\r\n    public set metallic(metallic: number){\r\n        this._nodeMaterialPromise.then(() => {\r\n            (this._nodeMaterial.getBlockByName(\"MetallicFactor\") as InputBlock).value = metallic;\r\n        })\r\n    }\r\n\r\n    public set metallicTexture(metallicTexture: Texture){\r\n        this._nodeMaterialPromise.then(() => {\r\n            (this._nodeMaterial.getBlockByName(\"MetallicTexture\") as TextureBlock).texture = metallicTexture;\r\n        })\r\n    }\r\n\r\n    public set roughness(roughness: number){\r\n        this._nodeMaterialPromise.then(() => {\r\n            (this._nodeMaterial.getBlockByName(\"RoughnessFactor\") as InputBlock).value = roughness;\r\n        })\r\n    }\r\n\r\n    public set roughnessTexture(roughnessTexture: Texture){\r\n        this._nodeMaterialPromise.then(() => {\r\n            (this._nodeMaterial.getBlockByName(\"RoughnessTexture\") as TextureBlock).texture = roughnessTexture;\r\n        })\r\n    }\r\n\r\n    public set emission(emission: number){\r\n        this._nodeMaterialPromise.then(() => {\r\n            (this._nodeMaterial.getBlockByName(\"EmissiveFactor\") as InputBlock).value = emission;\r\n        })\r\n    }\r\n\r\n    public set emissionColor(emissionColor: Color3){\r\n        this._nodeMaterialPromise.then(() => {\r\n            (this._nodeMaterial.getBlockByName(\"EmissiveColor\") as InputBlock).value = emissionColor;\r\n        })\r\n    }\r\n\r\n    public set emissionTexture(emissionTexture: Texture){\r\n        this._nodeMaterialPromise.then(() => {\r\n            (this._nodeMaterial.getBlockByName(\"EmissiveTexture\") as TextureBlock).texture = emissionTexture;\r\n        })\r\n    }\r\n\r\n    public set transparencyMode(transparencyMode: Nullable<number>){\r\n        this._nodeMaterialPromise.then(() => {\r\n            this._nodeMaterial.transparencyMode = transparencyMode;\r\n        })\r\n    }\r\n\r\n    public configureFromPBRMaterial(pbrMaterial: PBRMaterial){\r\n        this.albedoColor = pbrMaterial.albedoColor;\r\n        const albedoTexture = pbrMaterial.albedoTexture;\r\n        if(albedoTexture !== null){\r\n            this.albedoTexture = albedoTexture as Texture;\r\n        }\r\n\r\n        this.emission = pbrMaterial.emissiveIntensity;\r\n        const emissionTexture = pbrMaterial.emissiveTexture;\r\n        if(emissionTexture !== null){\r\n            this.emissionTexture = emissionTexture as Texture;\r\n        }\r\n        this.emissionColor = pbrMaterial.emissiveColor;\r\n\r\n        const metallic = pbrMaterial.metallic;\r\n        if(metallic !== null){\r\n            this.metallic = metallic;\r\n        }\r\n        const metallicTexture = pbrMaterial.metallicTexture;\r\n        if(metallicTexture !== null){\r\n            this.metallicTexture = metallicTexture as Texture;\r\n        }\r\n\r\n        const roughness = pbrMaterial.roughness;\r\n        if(roughness !== null){\r\n            this.roughness = roughness;\r\n        }\r\n\r\n        this.transparencyMode = pbrMaterial.transparencyMode;\r\n        this.indexOfRefraction = pbrMaterial.indexOfRefraction;\r\n\r\n        this._nodeMaterialPromise.then(() => {\r\n            this._nodeMaterial.backFaceCulling = pbrMaterial.backFaceCulling;\r\n            this._nodeMaterial.needDepthPrePass = pbrMaterial.needDepthPrePass;\r\n            this._nodeMaterial.cullBackFaces = pbrMaterial.cullBackFaces;\r\n            this._nodeMaterial.alpha = pbrMaterial.alpha;\r\n            this._nodeMaterial.alphaMode = pbrMaterial.alphaMode;\r\n            this._nodeMaterial.disableDepthWrite = pbrMaterial.disableDepthWrite;\r\n            this._nodeMaterial.disableColorWrite = pbrMaterial.disableColorWrite;\r\n            this._nodeMaterial.forceDepthWrite = pbrMaterial.forceDepthWrite;\r\n            this._nodeMaterial.depthFunction = pbrMaterial.depthFunction;\r\n        })\r\n\r\n\r\n    }\r\n\r\n}","import {DistanceConstraint, Observable, PhysicsBody, PhysicsConstraint, TransformNode, Vector3} from \"@babylonjs/core\";\r\nimport {Game} from \"@/YellowSubmarine/Game\";\r\nimport {TempleBall} from \"@/YellowSubmarine/temple/TempleBall\";\r\n\r\nexport class Grappler {\r\n\r\n    private static _instance: Grappler;\r\n\r\n    private _owner?: PhysicsBody;\r\n    private _grapplerLength = 1.5;\r\n    private _currentGrappledObject?: TempleBall;\r\n    private _localOffsetWithSubmarine: Vector3 = new Vector3(0, 0, -5);\r\n    private _pullingForce = 5;\r\n\r\n    public static get instance(): Grappler {\r\n        return this._instance;\r\n    }\r\n\r\n    constructor() {\r\n        Grappler._instance = this;\r\n        Game.scene.onBeforeRenderObservable.add(() => {\r\n            this.updateGrappledObject();\r\n        })\r\n    }\r\n\r\n    public grappleObject(object: TempleBall) {\r\n        if(this._currentGrappledObject) return;\r\n\r\n        this._currentGrappledObject = object;\r\n\r\n    }\r\n\r\n    public letGoOfObject() {\r\n        if(!this._currentGrappledObject) return;\r\n\r\n        this._currentGrappledObject = undefined;\r\n    }\r\n\r\n    public get grappledObject(): TempleBall | undefined {\r\n        return this._currentGrappledObject;\r\n    }\r\n\r\n    public get hasAnObjectGrappled(): boolean {\r\n        return this._currentGrappledObject !== undefined;\r\n    }\r\n\r\n    public get grapplerLength(): number {\r\n        return this._grapplerLength;\r\n    }\r\n\r\n    public set grapplerLength(length: number) {\r\n        this._grapplerLength = length;\r\n    }\r\n\r\n    public get owner(): PhysicsBody | undefined {\r\n        return this._owner;\r\n    }\r\n\r\n    public set owner(submarine: PhysicsBody | undefined) {\r\n        this._owner = submarine;\r\n    }\r\n\r\n    public get offset(): Vector3 {\r\n        return this._localOffsetWithSubmarine;\r\n    }\r\n\r\n    public set offset(offset: Vector3) {\r\n        this._localOffsetWithSubmarine = offset;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------------------------------------------- //\r\n\r\n    private updateGrappledObject(){\r\n        if(this._currentGrappledObject !== undefined){\r\n            const parent = this._owner;\r\n            if(parent){\r\n                const positionWithOffset = parent.getObjectCenterWorld().add(this._localOffsetWithSubmarine.rotateByQuaternionToRef(parent.transformNode.absoluteRotationQuaternion, Vector3.Zero()));\r\n\r\n                const grappledObjectPosition = this._currentGrappledObject.physicsBody.getObjectCenterWorld();\r\n                const fromGrapplerToObject = grappledObjectPosition.subtract(positionWithOffset);\r\n                const distance = fromGrapplerToObject.length();\r\n                if(distance > this._grapplerLength){\r\n                    const pullingDirection = fromGrapplerToObject.normalizeToNew().scale(-1);\r\n                    this._currentGrappledObject.physicsBody.applyForce(pullingDirection.scale(this._pullingForce * (1 + (distance - this._grapplerLength)) ), grappledObjectPosition);\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n}","import {\r\n    AbstractMesh,\r\n    CreateAudioEngineAsync,\r\n    CreateSoundAsync, ISoundOptions, SoundState,\r\n    StaticSound\r\n} from \"@babylonjs/core\";\r\nimport {Game} from \"@/YellowSubmarine/Game\";\r\nexport class SoundManager {\r\n\r\n    public static instance: SoundManager;\r\n    private _audioEngine;\r\n    private _SFXsounds = new Map<string, StaticSound>();\r\n    private _UIsounds = new Map<string, StaticSound>();\r\n    private _MUSICsounds = new Map<string, StaticSound>();\r\n\r\n    private _SFXVolume : number;\r\n    private _UIVolume : number;\r\n    private _MUSICVolume : number;\r\n\r\n\r\n    constructor() {\r\n        SoundManager.instance = this;\r\n        this._SFXVolume = 0.8;\r\n        this._UIVolume = 1;\r\n        this._MUSICVolume = 0;\r\n        Game.scene.headphone = true;\r\n        this._audioEngine = CreateAudioEngineAsync();\r\n        this._audioEngine.then((engine) => {\r\n            engine.unlockAsync();\r\n            Game.scene.onBeforeRenderObservable.add(() => {\r\n                if(Game.scene.activeCamera !== null) {\r\n                    engine.listener.position = Game.scene.activeCamera?.position;\r\n                }\r\n            });\r\n        });\r\n        Game.scene.onReadyObservable.add(() => {\r\n            this.playSFX(\"wind\", {\r\n                loop: true,\r\n                autoplay: true,\r\n            });\r\n        })\r\n        Game.scene.onReadyObservable.add(() => {\r\n            this.playMUSIC(\"ambiant\", {\r\n                loop: true,\r\n                autoplay: true,\r\n            });\r\n        })\r\n    }\r\n\r\n    private async load(name: string, url: string, options?: Partial<ISoundOptions>) {\r\n        return CreateSoundAsync(name, `${url}/${name}.wav`, options);\r\n    }\r\n\r\n    protected async play(name: string, url: string, map: Map<string, StaticSound>, volume: number, options?: Partial<ISoundOptions>, mesh?: AbstractMesh) {\r\n        const sound = map.get(name);\r\n        if(sound) {\r\n            if(sound.state !== SoundState.Started) {\r\n                this.fadeIn(sound, volume, 100);\r\n                sound.play();\r\n            }\r\n        }\r\n        else{\r\n            const sound = await this.load(name, url, options);\r\n            map.set(name, sound)\r\n            if (options?.spatialSound && mesh) {\r\n                sound.spatial.attach(mesh);\r\n                sound.spatial.maxDistance = options.maxDistance ?? 100;\r\n                sound.spatial.distanceModel = \"linear\";\r\n                console.log(sound.spatial);\r\n            }\r\n            this.fadeIn(sound, volume, 1000);\r\n            sound.play();\r\n        }\r\n    }\r\n\r\n    public async playSFX(name: string, options?: Partial<ISoundOptions>, mesh?: AbstractMesh) {\r\n        await this.play(name, \"sounds/sfx\", this._SFXsounds, this.SFXVolume, options, mesh);\r\n    }\r\n\r\n    public async playUI(name: string, options?: Partial<ISoundOptions>, mesh?: AbstractMesh) {\r\n        await this.play(name, \"sounds/ui\", this._UIsounds, this.UIVolume, options, mesh);\r\n    }\r\n\r\n    public async playMUSIC(name: string, options?: Partial<ISoundOptions>, mesh?: AbstractMesh) {\r\n        await this.play(name, \"sounds/music\", this._MUSICsounds, this.MUSICVolume, options, mesh);\r\n    }\r\n\r\n    private fadeIn(sound: StaticSound, targetVolume: number, duration: number) {\r\n        sound.volume = 0;\r\n        const stepTime = 20;\r\n        const steps = duration / stepTime;\r\n        let currentStep = 0;\r\n\r\n        const interval = setInterval(() => {\r\n            currentStep++;\r\n            const volume = targetVolume * (currentStep / steps);\r\n            sound.volume = Math.min(volume, targetVolume);\r\n            if (currentStep >= steps) clearInterval(interval);\r\n        }, stepTime);\r\n    }\r\n\r\n    private fadeOutAndStop(sound: StaticSound, duration: number) {\r\n        const stepTime = 20;\r\n        const steps = duration / stepTime;\r\n        let currentStep = 0;\r\n        const initialVolume = sound.volume;\r\n\r\n        const interval = setInterval(() => {\r\n            currentStep++;\r\n            const volume = initialVolume * (1 - currentStep / steps);\r\n            sound.volume = Math.max(volume, 0);\r\n            if (currentStep >= steps) {\r\n                clearInterval(interval);\r\n                sound.stop();\r\n            }\r\n        }, stepTime);\r\n    }\r\n\r\n    public stopSFX(name: string) {\r\n        const sound = this._SFXsounds.get(name);\r\n        if (sound) this.fadeOutAndStop(sound, 100);\r\n    }\r\n\r\n    public stopUI(name: string) {\r\n        const sound = this._UIsounds.get(name);\r\n        if (sound) this.fadeOutAndStop(sound, 100);\r\n    }\r\n\r\n    public stopMUSIC(name: string) {\r\n        const sound = this._MUSICsounds.get(name);\r\n        if (sound) this.fadeOutAndStop(sound, 100);\r\n    }\r\n\r\n    public stopAll(map : Map<string, StaticSound>) {\r\n        map.forEach(sound => {sound.stop()});\r\n    }\r\n\r\n    public get SFXVolume(): number {\r\n        return this._SFXVolume;\r\n    }\r\n\r\n    public set SFXVolume(value: number) {\r\n        this._SFXVolume = value;\r\n        this._SFXsounds.forEach((sound) => {\r\n            sound.volume = this._SFXVolume;\r\n        })\r\n    }\r\n\r\n    public get UIVolume(): number {\r\n        return this._UIVolume;\r\n    }\r\n\r\n    public set UIVolume(value: number) {\r\n        this._UIVolume = value;\r\n        this._UIsounds.forEach((sound) => {\r\n            sound.volume = this._UIVolume;\r\n        })\r\n    }\r\n\r\n    public get MUSICVolume(): number {\r\n        return this._MUSICVolume;\r\n    }\r\n\r\n    public set MUSICVolume(value: number) {\r\n        this._MUSICVolume = value;\r\n        this._MUSICsounds.forEach((sound) => {\r\n            sound.volume = this._MUSICVolume;\r\n        })\r\n    }\r\n}","import {\r\n    AbstractMesh, Color3, KeyboardEventTypes,\r\n    Mesh, MeshBuilder, PBRMaterial, PhysicsAggregate, PhysicsMotionType, PhysicsShapeType,\r\n    Scene,\r\n    SceneLoader, SpotLight, StandardMaterial, Texture,\r\n    Vector3, VolumetricLightScatteringPostProcess,\r\n} from \"@babylonjs/core\";\r\nimport {Game} from \"@/YellowSubmarine/Game\";\r\nimport \"@babylonjs/loaders/glTF\"\r\nimport {Player} from \"@/YellowSubmarine/Player\";\r\nimport {CartoonShaderMaterial} from \"@/YellowSubmarine/shader material/CartoonShaderMaterial\";\r\nimport {Grappler} from \"@/YellowSubmarine/grappling system/Grappler\";\r\nimport {TempleBall} from \"@/YellowSubmarine/temple/TempleBall\";\r\nimport {SoundManager} from \"@/YellowSubmarine/sound system/SoundManager\";\r\n\r\nexport class Submarine {\r\n    private _physicsAggregate?: PhysicsAggregate;\r\n\r\n    public get mesh(): AbstractMesh{\r\n        return this._mesh;\r\n    }\r\n\r\n    public static get instance(): Submarine {\r\n        return this._instance;\r\n    }\r\n\r\n    private static _instance: Submarine;\r\n    private _mesh!: AbstractMesh;\r\n\r\n    private _movementForce = 3000000;\r\n\r\n    private _rotationForce = 500000;\r\n    private _grappler: Grappler;\r\n\r\n    public meshCreationPromise: Promise<AbstractMesh>;\r\n\r\n    private _spotLight?: SpotLight;\r\n\r\n    constructor() {\r\n        Submarine._instance = this;\r\n        this._grappler = new Grappler();\r\n        this.meshCreationPromise = this.createMesh(Game.scene);\r\n        this.meshCreationPromise.then((mesh) => {\r\n            this._grappler.owner = mesh.physicsBody ?? undefined;\r\n            this._spotLight = this.createSpotlight();\r\n            this.addVolumetricLight();\r\n\r\n\r\n            const mapLimit = 1024;\r\n            Game.scene.onBeforeRenderObservable.add(() => {\r\n                if (!this._physicsAggregate) return;\r\n\r\n                const body = this._physicsAggregate.body;\r\n                const pos = body.transformNode.position.clone();\r\n\r\n                if (pos.x > mapLimit || pos.x < -mapLimit || pos.z > mapLimit || pos.z < -mapLimit) {\r\n                    body.setLinearVelocity(body.getLinearVelocity().negate());\r\n                    body.transformNode.position.copyFrom(pos);\r\n                }\r\n            });\r\n        });\r\n        Game.scene.onBeforeRenderObservable.add(() => {\r\n            this.update(/*Game.engine.getDeltaTime() / 1000*/);\r\n\r\n        });\r\n\r\n        const keysDown = new Set<string>();\r\n        Game.scene.onKeyboardObservable.add((eventData) => {\r\n            const key = eventData.event.key;\r\n            if (key === \"k\") {\r\n                if (eventData.type === KeyboardEventTypes.KEYDOWN) {\r\n                    if (!keysDown.has(key)) {\r\n                        keysDown.add(key);\r\n                        SoundManager.instance.playSFX(\"submarine_horn\", {\r\n                            loop : true\r\n                        }, this.mesh);\r\n                    }\r\n                } else if (eventData.type === KeyboardEventTypes.KEYUP) {\r\n                    keysDown.delete(key);\r\n                    SoundManager.instance.stopSFX(\"submarine_horn\");\r\n                }\r\n            }\r\n        });\r\n\r\n        Game.scene.onKeyboardObservable.add((eventData) => {\r\n            const key = eventData.event.key;\r\n            if(key === \"z\" || key === \"s\"){\r\n                if (eventData.type === KeyboardEventTypes.KEYDOWN) {\r\n                    if (!keysDown.has(key)) {\r\n                        keysDown.add(key);\r\n                        SoundManager.instance.playSFX(\"submarine\", {\r\n                            loop : true\r\n                        });\r\n                    }\r\n                } else if (eventData.type === KeyboardEventTypes.KEYUP) {\r\n                    keysDown.delete(key);\r\n                    SoundManager.instance.stopSFX(\"submarine\");\r\n                }\r\n            }\r\n        });\r\n\r\n        Game.scene.onKeyboardObservable.add( (eventData) => {\r\n            const state = eventData.type === KeyboardEventTypes.KEYDOWN;\r\n            if(eventData.event.key === \"l\" && state){\r\n                this._spotLight?.setEnabled(!this._spotLight?.isEnabled())\r\n            }\r\n        });\r\n    }\r\n\r\n    public get templeBall(): TempleBall | undefined {\r\n        return this._grappler.grappledObject;\r\n    }\r\n\r\n    public grabBall(ball: TempleBall): void {\r\n        this._grappler.grappleObject(ball);\r\n    }\r\n\r\n    public letGoOfBall(){\r\n        this._grappler.letGoOfObject();\r\n    }\r\n\r\n    private async createMesh(scene: Scene) {\r\n        const result = await SceneLoader.ImportMeshAsync(\"\", \"models/objects/\", \"submarine.glb\", scene);\r\n        const rootMesh = result.meshes[0] as Mesh;\r\n        const childMeshes = rootMesh.getChildMeshes<Mesh>();\r\n        for (const mesh of result.meshes) {\r\n            const mat = mesh.material as PBRMaterial;\r\n            if(mat){\r\n                const toonMat = new CartoonShaderMaterial();\r\n                await toonMat.assignMaterial(mesh).then(() => {\r\n                    toonMat.configureFromPBRMaterial(mat);\r\n                });\r\n            }\r\n        }\r\n        const mergedMesh = Mesh.MergeMeshes(childMeshes,true, undefined, undefined, undefined, true);\r\n        if(mergedMesh){\r\n            this._mesh = mergedMesh;\r\n            this._physicsAggregate = new PhysicsAggregate(this._mesh, PhysicsShapeType.BOX,{\r\n                mass: 1,\r\n                friction: 0,\r\n                restitution: 0,\r\n                mesh: mergedMesh,\r\n            }, Game.scene);\r\n            this._physicsAggregate.body.setMotionType(PhysicsMotionType.DYNAMIC);\r\n            this._physicsAggregate.body.setMassProperties({\r\n                inertia: new Vector3(0, 1, 0),\r\n                centerOfMass: this._mesh.absolutePosition,\r\n            });\r\n            this._physicsAggregate.body.setLinearDamping(1);\r\n            this._physicsAggregate.body.setAngularDamping(1);\r\n            this._physicsAggregate.body.getCollisionObservable();\r\n\r\n            this._mesh.name = \"submarine\";\r\n            this._mesh.position = new Vector3(0, 0, 0);\r\n        }\r\n        this.mesh.receiveShadows = true;\r\n        return this._mesh;\r\n    }\r\n\r\n\r\n    private createSpotlight() {\r\n        const spotLight = new SpotLight(\"spotLight\",\r\n            new Vector3(0, 0, 0),\r\n            new Vector3(0, 0, 1),\r\n            Math.PI / 3,\r\n            2,\r\n            Game.scene\r\n        );\r\n        spotLight.diffuse = new Color3(1, 1, 1);\r\n        spotLight.specular = new Color3(1, 1, 1);\r\n        spotLight.intensity = 5000;\r\n        spotLight.parent = this._mesh;\r\n        spotLight.setEnabled(false);\r\n\r\n        this._spotLight = spotLight;\r\n        Game.scene.onKeyboardObservable.add((eventData) => {\r\n            const state = eventData.type === KeyboardEventTypes.KEYDOWN;\r\n            if (eventData.event.key === \"l\" && state) {\r\n                const enabled = !this._spotLight?.isEnabled();\r\n                this._spotLight?.setEnabled(enabled);\r\n            }\r\n        });\r\n\r\n        return spotLight;\r\n    }\r\n\r\n    private addVolumetricLight() {\r\n        const camera = Game.scene.activeCamera!;\r\n\r\n        const lightEmitter = MeshBuilder.CreateSphere(\"lightEmitter\", {diameter: 0.8}, Game.scene);\r\n        const vl = new VolumetricLightScatteringPostProcess(\"vls\", 1.0, camera, lightEmitter);\r\n        lightEmitter.position = new Vector3(0, 0, 2.3);\r\n        lightEmitter.parent = this._mesh;\r\n\r\n        const mat = new StandardMaterial(\"lightMat\", Game.scene);\r\n        mat.emissiveTexture = new Texture(\"textures/lensflare/lens5.png\", Game.scene);\r\n        mat.diffuseColor = new Color3(0, 0, 0);\r\n        mat.specularColor = new Color3(0, 0, 0);\r\n        mat.emissiveColor = new Color3(1, 1, 1);\r\n        mat.alpha = 0.8;\r\n        lightEmitter.material = mat;\r\n\r\n        vl.mesh = lightEmitter;\r\n\r\n        vl.exposure = 1;\r\n        vl.decay = 0.96815;\r\n        vl.weight = 0.4;\r\n        vl.density = 0.99;\r\n\r\n        lightEmitter.setEnabled(false);\r\n\r\n        Game.scene.onKeyboardObservable.add((eventData) => {\r\n            const state = eventData.type === KeyboardEventTypes.KEYDOWN;\r\n            if (eventData.event.key === \"l\" && state) {\r\n                lightEmitter.setEnabled(!lightEmitter.isEnabled());\r\n            }\r\n        });\r\n    }\r\n\r\n    private update() {\r\n        this.updateRotationSpeed();\r\n        this.updateMovementSpeed();\r\n    }\r\n\r\n    private updateMovementSpeed() {\r\n            if (!this._physicsAggregate) return;\r\n\r\n            const body = this._physicsAggregate.body;\r\n\r\n            let direction = 0;\r\n            if (this.isForwardPressed()) direction += 1;\r\n            if (this.isBackwardPressed()) direction -= 1;\r\n\r\n            if (direction === 0) return;\r\n\r\n            body.applyForce(this._mesh.forward.scale(direction * this._movementForce), body.getObjectCenterWorld() );\r\n\r\n        }\r\n\r\n    private updateRotationSpeed() {\r\n            if (!this._physicsAggregate) return;\r\n\r\n            const body = this._physicsAggregate.body;\r\n\r\n            let direction = 0;\r\n            if (this.isRightPressed()) direction += 1;\r\n            if (this.isLeftPressed()) direction -= 1;\r\n\r\n            if(direction == 0) return;\r\n\r\n            body.applyForce(this._mesh.right.scale(direction * this._rotationForce), body.getObjectCenterWorld().add(this._mesh.forward));\r\n\r\n        }\r\n\r\n\r\n    private isForwardPressed() {\r\n        return Player.isMoveForwardPressed();\r\n    }\r\n\r\n    private isBackwardPressed() {\r\n        return Player.isMoveBackwardPressed();\r\n    }\r\n\r\n    private isRightPressed() {\r\n        return Player.isTurnRightPressed();\r\n    }\r\n\r\n    private isLeftPressed() {\r\n        return Player.isTurnLeftPressed();\r\n    }\r\n\r\n\r\n}","import {MeshDetectionZone} from \"@/YellowSubmarine/detection system/MeshDetectionZone\";\r\nimport {AbstractMesh, Observable, PhysicsAggregate} from \"@babylonjs/core\";\r\nimport {World} from \"@/YellowSubmarine/World\";\r\n\r\nexport class KeyZone {\r\n\r\n    private  _name!: string;\r\n    private _detectionZone!: MeshDetectionZone;\r\n    private  _discovered = false;\r\n    private  _disabled = false;\r\n    private _mesh!:AbstractMesh;\r\n    private _physicsAggregate?: PhysicsAggregate;\r\n\r\n    public static onAnyKeyZoneEntered: Observable<KeyZone> = new Observable();\r\n\r\n\r\n    public set name(value: string) {\r\n        this._name = value;\r\n    }\r\n    public get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n\r\n    public set discovered(value: boolean) {\r\n        this._discovered = value;\r\n    }\r\n    public get discovered(): boolean {\r\n        return this._discovered;\r\n    }\r\n\r\n\r\n    public set detectionZone(value: MeshDetectionZone) {\r\n        this._detectionZone = value;\r\n        this.detectionZone.onMeshEnter.add( () => {\r\n            KeyZone.onAnyKeyZoneEntered.notifyObservers(this);\r\n            this.discovered = true;\r\n        });\r\n    }\r\n    public get detectionZone(): MeshDetectionZone {\r\n        return this._detectionZone;\r\n    }\r\n\r\n\r\n    public set disabled(value: boolean) {\r\n        this._disabled = value;\r\n    }\r\n    public get disabled():boolean {\r\n        return this._disabled;\r\n    }\r\n\r\n    public set mesh(value: AbstractMesh) {\r\n        this._mesh = value;\r\n        this._detectionZone.zone.parent = this._mesh;\r\n        World.submarine.meshCreationPromise.then((mesh: AbstractMesh) => {\r\n            this.detectionZone.addMeshToDetect(mesh);\r\n        });\r\n    }\r\n    public get mesh() {\r\n        return this._mesh;\r\n    }\r\n\r\n    public get physicsAggregate(): PhysicsAggregate | undefined {\r\n        return this._physicsAggregate;\r\n    }\r\n\r\n    public set physicsAggregate(physicsAggregate: PhysicsAggregate | undefined){\r\n        this._physicsAggregate = physicsAggregate;\r\n    }\r\n\r\n}","import {AbstractMesh, Observable} from \"@babylonjs/core\";\r\nimport {Game} from \"@/YellowSubmarine/Game\";\r\n\r\nexport class MeshDetectionZone {\r\n\r\n    private _zone : AbstractMesh\r\n    public onMeshEnter : Observable<AbstractMesh>;\r\n    public onMeshExit : Observable<AbstractMesh>;\r\n    private _meshToDetect : Map<AbstractMesh, boolean>;\r\n\r\n    public get zone(): AbstractMesh {\r\n        return this._zone;\r\n    }\r\n\r\n    constructor(zone : AbstractMesh, debug ?: boolean) {\r\n        this._zone = zone;\r\n        this._zone.visibility = debug ? 0.5 : 0;\r\n        this._meshToDetect = new Map<AbstractMesh, boolean>();\r\n        this.onMeshEnter = new Observable<AbstractMesh>();\r\n        this.onMeshExit = new Observable<AbstractMesh>();\r\n        Game.scene.onBeforeRenderObservable.add(() => this.checkAll());\r\n    }\r\n\r\n    public addMeshToDetect(mesh : AbstractMesh) : void {\r\n        this._meshToDetect.set(mesh, false);\r\n        this.checkAll();\r\n    }\r\n\r\n    public isInZone(mesh: AbstractMesh): boolean {\r\n        return this._zone.intersectsMesh(mesh, true);\r\n    }\r\n\r\n    private checkDetection(mesh : AbstractMesh) : boolean {\r\n        const state = this._zone.intersectsMesh(mesh, true);\r\n        if (state !== this._meshToDetect.get(mesh)) {\r\n            if(state) this.onMeshEnter.notifyObservers(mesh);\r\n            else this.onMeshExit.notifyObservers(mesh);\r\n            this._meshToDetect.set(mesh, state);\r\n        }\r\n        return state;\r\n    }\r\n\r\n    private checkAll(){\r\n        this._meshToDetect.forEach((state, mesh) => {this.checkDetection(mesh)})\r\n    }\r\n\r\n}","import {MeshDetectionZone} from \"@/YellowSubmarine/detection system/MeshDetectionZone\";\r\nimport {MeshBuilder, Vector4} from \"@babylonjs/core\";\r\n\r\nexport class SphericalDetectionZone extends MeshDetectionZone {\r\n\r\n    constructor(options ?: {segments?: number, diameter?: number,\r\n        diameterX?: number, diameterY?: number, diameterZ?: number, arc?: number,\r\n        slice?: number, sideOrientation?: number, frontUVs?: Vector4,\r\n        backUVs?: Vector4, updatable?: boolean}, debug ?: boolean) {\r\n\r\n        const mesh = MeshBuilder.CreateSphere(\"\", options);\r\n        super(mesh, debug);\r\n    }\r\n}","import {AbstractInteraction} from \"@/YellowSubmarine/interaction system/interactions/AbstractInteraction\";\r\nimport {AbstractMesh} from \"@babylonjs/core\";\r\n\r\nexport abstract class WorldInteraction extends AbstractInteraction{\r\n\r\n    public abstract get description(): string\r\n\r\n    public abstract get mesh():AbstractMesh | undefined;\r\n\r\n}","import {Conversation} from \"@/YellowSubmarine/dialogue system/Conversation\";\r\nimport {WorldInteraction} from \"@/YellowSubmarine/interaction system/interactions/WorldInteraction\";\r\nimport {AbstractMesh} from \"@babylonjs/core\";\r\n\r\nexport class StartConversationInteraction extends WorldInteraction{\r\n\r\n    public get description(): string {\r\n        return `Parler`;\r\n    }\r\n\r\n    constructor(private _conversation: Conversation) {\r\n        super(\"KeyE\", \"E\");\r\n    }\r\n\r\n    executeInteraction(): void {\r\n        this._conversation.startConversation();\r\n    }\r\n\r\n    get mesh(): AbstractMesh | undefined {\r\n        return this._conversation.conversationProvider?.mesh;\r\n    }\r\n\r\n}","import {AbstractMesh, TransformNode} from \"@babylonjs/core\";\r\nimport {Conversation} from \"@/YellowSubmarine/dialogue system/Conversation\";\r\nimport {MeshDetectionZone} from \"@/YellowSubmarine/detection system/MeshDetectionZone\";\r\nimport {\r\n    StartConversationInteraction\r\n} from \"@/YellowSubmarine/dialogue system/interactions/StartConversationInteraction\";\r\nimport {World} from \"@/YellowSubmarine/World\";\r\nimport {CameraConfiguration} from \"@/YellowSubmarine/camera system/CameraConfiguration\";\r\nimport {IConversationProvider} from \"@/YellowSubmarine/dialogue system/IConversationProvider\";\r\n\r\nexport class NPC implements IConversationProvider {\r\n\r\n    private _name = \"undefined\";\r\n    private _mesh?: AbstractMesh;\r\n    private _conversation?: Conversation;\r\n    private _startConversationInteraction?: StartConversationInteraction;\r\n    private _playerDetectionZone?: MeshDetectionZone;\r\n    private _cameraConfiguration?: CameraConfiguration;\r\n\r\n    private _transformNode: TransformNode = new TransformNode(\"npcTransform\");\r\n\r\n    public get name(): string {\r\n        return this._name;\r\n    }\r\n    public set name(value: string) {\r\n        this._name = value;\r\n    }\r\n\r\n    public set mesh(value: AbstractMesh | undefined) {\r\n        this._mesh = value;\r\n        if(this._mesh) {\r\n            this._mesh.parent = this._transformNode;\r\n        }\r\n    }\r\n    public get mesh(): AbstractMesh | undefined {\r\n        return this._mesh;\r\n    }\r\n\r\n\r\n    public get cameraConfiguration(): CameraConfiguration | undefined{\r\n        return this._cameraConfiguration;\r\n    }\r\n    public set cameraConfiguration(value: CameraConfiguration | undefined) {\r\n        this._cameraConfiguration = value;\r\n    }\r\n\r\n    public set transformNode(value: TransformNode) {\r\n        this._transformNode = value;\r\n    }\r\n\r\n    public get transformNode(): TransformNode {\r\n        return this._transformNode;\r\n    }\r\n\r\n\r\n    public set detectionZone(value: MeshDetectionZone | undefined ) {\r\n        this._playerDetectionZone = value;\r\n        if(this._playerDetectionZone) {\r\n            this._playerDetectionZone.zone.parent = this._transformNode;\r\n            this.setSignals();\r\n        }\r\n    }\r\n    public get detectionZone(): MeshDetectionZone | undefined {\r\n        return this._playerDetectionZone;\r\n    }\r\n\r\n    public get conversation(): Conversation | undefined {\r\n        return this._conversation;\r\n    }\r\n\r\n    public set conversation(conversation: Conversation | undefined) {\r\n        if(conversation !== undefined) {\r\n            this._startConversationInteraction = new StartConversationInteraction(conversation);\r\n            this._conversation = conversation;\r\n            this._conversation.conversationProvider = this;\r\n\r\n            this._conversation?.onConversationEnd.add( () =>  {\r\n                if(this._playerDetectionZone?.isInZone(World.submarine.mesh)){\r\n                    this._startConversationInteraction?.makeAvailable();\r\n                }\r\n            });\r\n\r\n        }\r\n        else{\r\n            this._startConversationInteraction = undefined;\r\n            if(this._conversation){\r\n                this._conversation.conversationProvider = undefined;\r\n            }\r\n            this._conversation = undefined;\r\n        }\r\n    }\r\n\r\n    private setSignals(): void {\r\n        if(this._playerDetectionZone){\r\n            this._playerDetectionZone.onMeshEnter.add( () => {\r\n                if(this._startConversationInteraction && !this._conversation?.isInProgress()){\r\n                    this._startConversationInteraction.makeAvailable();\r\n                }\r\n            } );\r\n\r\n            this._playerDetectionZone.onMeshExit.add( () => {\r\n                if(this._startConversationInteraction){\r\n                    this._startConversationInteraction.makeUnavailable();\r\n                }\r\n            } );\r\n\r\n            World.submarine.meshCreationPromise.then((mesh: AbstractMesh) => {\r\n                if(this._playerDetectionZone){\r\n                    this._playerDetectionZone.addMeshToDetect(mesh);\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n}","import {MeshDetectionZone} from \"@/YellowSubmarine/detection system/MeshDetectionZone\";\r\nimport {Color4, MeshBuilder, Vector4} from \"@babylonjs/core\";\r\n\r\nexport class CylindricalDetectionZone extends MeshDetectionZone {\r\n\r\n    constructor(options ?: {height?: number, diameterTop?: number, diameterBottom?: number, diameter?: number,\r\n        tessellation?: number, subdivisions?: number, arc?: number,\r\n        faceColors?: Color4[], faceUV?: Vector4[], updatable?: boolean,\r\n        hasRings?: boolean, enclose?: boolean, cap?: number, sideOrientation?: number,\r\n        frontUVs?: Vector4, backUVs?: Vector4}, debug ?: boolean) {\r\n\r\n        const mesh = MeshBuilder.CreateCylinder(\"\", options);\r\n        super(mesh, debug);\r\n    }\r\n}","export abstract class AbstractDialogueNode {\r\n\r\n    private _text = \"\";\r\n    private _nextNode: AbstractDialogueNode | undefined = undefined;\r\n\r\n    public get text() : string {\r\n        return this._text;\r\n    }\r\n\r\n    public set text(text: string) {\r\n        this._text = text;\r\n    }\r\n\r\n    public set nextNode(value: AbstractDialogueNode | undefined) {\r\n        this._nextNode = value;\r\n    }\r\n\r\n    public get nextNode(): AbstractDialogueNode | undefined {\r\n        return this._nextNode;\r\n    }\r\n\r\n    public abstract execute(): void;\r\n\r\n}","import {AbstractDialogueNode} from \"@/YellowSubmarine/dialogue system/nodes/AbstractDialogueNode\";\r\n\r\nexport class SimpleDialogueNode extends AbstractDialogueNode{\r\n\r\n    execute(): void {return;}\r\n\r\n}","import {Conversation} from \"@/YellowSubmarine/dialogue system/Conversation\";\r\nimport {SimpleDialogueNode} from \"@/YellowSubmarine/dialogue system/nodes/SimpleDialogueNode\";\r\n\r\nexport class ConversationBuilder {\r\n    private root?: SimpleDialogueNode;\r\n    private current?: SimpleDialogueNode;\r\n    private _onEnding?: () => void;\r\n\r\n    public say(text: string): ConversationBuilder {\r\n        const node = new SimpleDialogueNode();\r\n        node.text = text;\r\n\r\n        if (!this.root) {\r\n            this.root = node;\r\n        } else if (this.current) {\r\n            this.current.nextNode = node;\r\n        }\r\n\r\n        this.current = node;\r\n        return this;\r\n    }\r\n\r\n    public then(text: string): ConversationBuilder {\r\n        return this.say(text);\r\n    }\r\n\r\n    public build(): Conversation {\r\n        const conversation = new Conversation();\r\n        if(this._onEnding) conversation.onEnding = this._onEnding;\r\n        if (this.root) {\r\n            conversation.root = this.root;\r\n        }\r\n        return conversation;\r\n    }\r\n\r\n    public setOnEnding(value: () => void): ConversationBuilder {\r\n        this._onEnding = value;\r\n        return this;\r\n    }\r\n}\r\n","import { UI } from \"@/YellowSubmarine/ui system/UI\";\r\nimport { Control, Rectangle, StackPanel, TextBlock } from \"@babylonjs/gui\";\r\nimport { QuestManager } from \"@/YellowSubmarine/quest system/QuestManager\";\r\nimport { Quest } from \"@/YellowSubmarine/quest system/Quest\";\r\n\r\nexport class QuestUI extends UI {\r\n\r\n    private _panel: StackPanel;\r\n    private static _instance: QuestUI;\r\n\r\n\r\n    get controlNode(): Control {\r\n        return this._panel;\r\n    }\r\n\r\n    public static get instance(): QuestUI {\r\n        return this._instance;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        QuestUI._instance = this;\r\n        this._panel = new StackPanel();\r\n        this._panel.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_RIGHT;\r\n        this._panel.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\r\n        this._panel.width = \"25%\";\r\n        this._panel.height = \"100%\";\r\n        this._panel.paddingRight = \"10px\";\r\n        this._panel.paddingTop = \"20px\";\r\n        this._panel.isVertical = true;\r\n        this._panel.spacing = 10;\r\n\r\n    }\r\n\r\n    public refresh() {\r\n        this._panel.clearControls();\r\n        const activeQuests = QuestManager.instance.getAllActiveQuests();\r\n\r\n        if (activeQuests.length === 0) {\r\n            this._panel.addControl(this.createSeparator());\r\n            return;\r\n        }\r\n\r\n        activeQuests.forEach((quest: Quest) => {\r\n            const container = new StackPanel();\r\n            container.isVertical = true;\r\n            container.width = \"100%\";\r\n\r\n            const titleText = new TextBlock();\r\n            titleText.text = `⛋ ${quest.name}`;\r\n            titleText.color = \"white\";\r\n            titleText.fontSize = 20;\r\n            titleText.fontWeight = \"bold\";\r\n            titleText.textHorizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n            titleText.height = \"28px\";\r\n            titleText.paddingBottom = \"6px\";\r\n\r\n            const stepText = new TextBlock();\r\n            stepText.text = quest.steps[quest.currentStepIndex].description;\r\n            stepText.color = \"#FFFFFF\";\r\n            stepText.fontSize = 17;\r\n            stepText.textHorizontalAlignment = Control.HORIZONTAL_ALIGNMENT_CENTER;\r\n            stepText.height = \"28px\";\r\n            stepText.textWrapping = true;\r\n            stepText.paddingLeft = \"16px\"; // Décalage à droite\r\n            stepText.paddingBottom = \"10px\";\r\n\r\n            container.addControl(titleText);\r\n            container.addControl(stepText);\r\n            container.addControl(this.createSeparator());\r\n\r\n            this._panel.addControl(container);\r\n        });\r\n    }\r\n\r\n    private createSeparator(): Rectangle {\r\n        const separator = new Rectangle();\r\n        separator.height = \"5px\";\r\n        separator.width = \"100%\";\r\n        separator.background = \"white\";\r\n        separator.thickness = 0;\r\n        separator.paddingTop = \"4px\";\r\n        return separator;\r\n    }\r\n\r\n}\r\n","import {QuestStep} from \"@/YellowSubmarine/quest system/QuestStep\";\r\nimport {QuestUI} from \"@/YellowSubmarine/quest system/ui/QuestUI\";\r\n\r\nexport type QuestState = 'inactive' | 'active' | 'completed';\r\n\r\nexport class Quest{\r\n\r\n    private _id: string;\r\n    private _name: string;\r\n    private _state: QuestState;\r\n    private _currentStepIndex: number;\r\n    private _steps: QuestStep[];\r\n\r\n    public get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    public set id(value: string) {\r\n        this._id = value;\r\n    }\r\n\r\n    public get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    public set name(value: string) {\r\n        this._name = value;\r\n    }\r\n\r\n    public get state(): QuestState {\r\n        return this._state;\r\n    }\r\n\r\n    public set state(value: QuestState) {\r\n        this._state = value;\r\n    }\r\n\r\n    public get currentStepIndex(): number {\r\n        return this._currentStepIndex;\r\n    }\r\n\r\n    public set currentStepIndex(value: number) {\r\n        this._currentStepIndex = value;\r\n    }\r\n\r\n    public get steps(): QuestStep[] {\r\n        return this._steps;\r\n    }\r\n\r\n    public set steps(value: QuestStep[]) {\r\n        this._steps = value;\r\n    }\r\n\r\n    constructor(id: string, name: string, state: QuestState, currentStepIndex: number) {\r\n        this._id = id;\r\n        this._name = name;\r\n        this._state = state;\r\n        this._currentStepIndex = currentStepIndex;\r\n        this._steps = []\r\n    }\r\n\r\n    public startQuest() {\r\n        this._state = \"active\";\r\n        QuestUI.instance.refresh();\r\n    }\r\n\r\n    public stopQuest() {\r\n        this._state = \"completed\";\r\n        QuestUI.instance.refresh();\r\n    }\r\n\r\n    public nextStep() {\r\n        if(this._currentStepIndex === this._steps.length - 1){\r\n            this.stopQuest();\r\n        }\r\n        else {\r\n            this._currentStepIndex++;\r\n        }\r\n        QuestUI.instance.refresh();\r\n\r\n    }\r\n\r\n    public updateCurrentStepStatus() {\r\n        this._steps[this._currentStepIndex].validate();\r\n    }\r\n}\r\n","export class QuestStep {\r\n\r\n    public description: string;\r\n    public condition: boolean;\r\n\r\n    constructor(description: string) {\r\n        this.description = description;\r\n        this.condition = false;\r\n    }\r\n\r\n    public validate(){\r\n        this.condition = true;\r\n    }\r\n}","import {WorldInteraction} from \"@/YellowSubmarine/interaction system/interactions/WorldInteraction\";\r\nimport {Socle} from \"@/YellowSubmarine/temple/Socle\";\r\nimport {AbstractMesh} from \"@babylonjs/core\";\r\nimport {Submarine} from \"@/YellowSubmarine/Submarine\";\r\n\r\nexport class RemoveTempleBallInteraction extends WorldInteraction{\r\n\r\n    public constructor(private _socle: Socle) {\r\n        super(\"KeyF\", \"F\");\r\n    }\r\n\r\n    public get description(): string {\r\n        return \"Retirer\";\r\n    }\r\n\r\n    executeInteraction(): void {\r\n        const templeBall = this._socle.currentBall;\r\n        if(templeBall && !Submarine.instance.templeBall){\r\n            this._socle.letGoOfBall();\r\n            Submarine.instance.grabBall(templeBall);\r\n            console.log(\"REMOVING THE BALL !!!\")\r\n        }\r\n    }\r\n\r\n    public get mesh(): AbstractMesh | undefined {\r\n        return this._socle.mesh;\r\n    }\r\n\r\n\r\n\r\n}","import {WorldInteraction} from \"@/YellowSubmarine/interaction system/interactions/WorldInteraction\";\r\nimport {Socle} from \"@/YellowSubmarine/temple/Socle\";\r\nimport {AbstractMesh} from \"@babylonjs/core\";\r\nimport {Submarine} from \"@/YellowSubmarine/Submarine\";\r\n\r\nexport class PlaceTempleBallInteraction extends WorldInteraction{\r\n\r\n    public constructor(private _socle: Socle) {\r\n        super(\"KeyF\", \"F\");\r\n    }\r\n\r\n    public get description(): string {\r\n        return \"Poser\";\r\n    }\r\n\r\n    executeInteraction(): void {\r\n        const templeBall = Submarine.instance.templeBall;\r\n        if(templeBall) {\r\n            console.log(\"PLACING THE BALL !!!\", templeBall);\r\n            this._socle.placeBall(templeBall);\r\n            Submarine.instance.letGoOfBall();\r\n        }\r\n    }\r\n\r\n    public get mesh(): AbstractMesh | undefined {\r\n        return this._socle.mesh;\r\n    }\r\n\r\n}","import {\r\n    AbstractMesh,\r\n    Color3,\r\n    ImportMeshAsync, ISceneLoaderAsyncResult, LockConstraint,\r\n    Mesh,\r\n    PhysicsBody,\r\n    PhysicsMotionType,\r\n    PhysicsShape,\r\n    PhysicsShapeType, TransformNode, Vector3\r\n} from \"@babylonjs/core\";\r\nimport {MeshDetectionZone} from \"@/YellowSubmarine/detection system/MeshDetectionZone\";\r\nimport {Game} from \"@/YellowSubmarine/Game\";\r\nimport {SphericalDetectionZone} from \"@/YellowSubmarine/detection system/SphericalDetectionZone\";\r\nimport {Submarine} from \"@/YellowSubmarine/Submarine\";\r\nimport {TempleBall} from \"@/YellowSubmarine/temple/TempleBall\";\r\nimport {RemoveTempleBallInteraction} from \"@/YellowSubmarine/temple/interaction/RemoveTempleBallInteraction\";\r\nimport {PlaceTempleBallInteraction} from \"@/YellowSubmarine/temple/interaction/PlaceTempleBallInteraction\";\r\nimport {CellMaterial} from \"@babylonjs/materials\";\r\n\r\nexport class Socle{\r\n    public get currentBall(): TempleBall | undefined{\r\n        return this._currentBall;\r\n    }\r\n    public get mesh(): AbstractMesh {\r\n        return this._mesh;\r\n    }\r\n\r\n    private _transformNode: TransformNode = new TransformNode(\"socle\");\r\n    private _ballTransformNode: TransformNode = new TransformNode(\"ballPosition\");\r\n    private _mesh!: AbstractMesh;\r\n    private _material: CellMaterial;\r\n    private _socleDetectionZone: MeshDetectionZone;\r\n    private _validColor?: Color3;\r\n    private _currentBall?: TempleBall;\r\n    private _lockConstraint?: LockConstraint;\r\n    private _placeTempleBallInteraction: PlaceTempleBallInteraction;\r\n    private _removeTempleBallInteraction: RemoveTempleBallInteraction;\r\n\r\n    public readonly meshImportedPromise: Promise<void | ISceneLoaderAsyncResult>;\r\n\r\n    public constructor(parent: TransformNode, position: Vector3) {\r\n\r\n        this._material = new CellMaterial(\"socleMat\");\r\n        this._material.diffuseColor = new Color3(0.3,0.3,0.3);\r\n        this._transformNode.parent = parent;\r\n        this._transformNode.position = position;\r\n        this._ballTransformNode.parent = this._transformNode;\r\n        this._ballTransformNode.position = Vector3.Up().scale(5);\r\n        this._placeTempleBallInteraction = new PlaceTempleBallInteraction(this);\r\n        this._removeTempleBallInteraction = new RemoveTempleBallInteraction(this);\r\n\r\n\r\n        this._socleDetectionZone = new SphericalDetectionZone({\r\n            diameter: 8,\r\n        }, false);\r\n\r\n        Submarine.instance.meshCreationPromise.then((mesh) => {\r\n            this._socleDetectionZone?.addMeshToDetect(mesh);\r\n        });\r\n\r\n        this._socleDetectionZone.onMeshEnter.add(() => {\r\n            this.makeInteractionAvailable();\r\n        });\r\n\r\n        this._socleDetectionZone.onMeshExit.add(() => {\r\n            this.makeInteractionUnavailable();\r\n        });\r\n\r\n        this.meshImportedPromise = ImportMeshAsync(\"models/objects/socle.glb\", Game.scene).then((result) => {\r\n            this._mesh = result.meshes[1];\r\n            this._mesh.parent = this._transformNode;\r\n            this._mesh.material = this._material;\r\n            const physicsBody = new PhysicsBody(this._mesh, PhysicsMotionType.STATIC, false, Game.scene);\r\n            const physicsShape = new PhysicsShape({\r\n                type: PhysicsShapeType.MESH,\r\n                parameters:{\r\n                    mesh: this._mesh as Mesh\r\n                },\r\n            }, Game.scene);\r\n            physicsBody.shape = physicsShape;\r\n\r\n            this._socleDetectionZone.zone.parent = this._mesh;\r\n        });\r\n\r\n    }\r\n\r\n    public placeBall(ball: TempleBall) {\r\n        this._currentBall = ball;\r\n        this._lockConstraint = new LockConstraint(Vector3.Zero(), Vector3.Up().scale(4), Vector3.Up(), Vector3.Down(), Game.scene);\r\n        this._mesh.physicsBody?.addConstraint(ball.physicsBody, this._lockConstraint);\r\n        this._currentBall.socle = this;\r\n        this._material.diffuseColor = new Color3(5,5,5);\r\n    }\r\n\r\n    public letGoOfBall(){\r\n        if(this._currentBall){\r\n            this._currentBall = undefined;\r\n            this._lockConstraint?.dispose();\r\n            this._material.diffuseColor = new Color3(0.3,0.3,0.3);\r\n        }\r\n    }\r\n\r\n    public get validColor(): Color3 | undefined {\r\n        return this._validColor;\r\n    }\r\n\r\n    public set validColor(value: Color3 | undefined) {\r\n        this._validColor = value;\r\n    }\r\n\r\n    public get transformNode(): TransformNode {\r\n        return this._transformNode;\r\n    }\r\n\r\n    private makeInteractionAvailable(){\r\n        this._placeTempleBallInteraction.makeUnavailable();\r\n        this._removeTempleBallInteraction.makeUnavailable();\r\n        if(this._currentBall && !Submarine.instance.templeBall){\r\n            this._removeTempleBallInteraction.makeAvailable();\r\n        }\r\n        else if(!this._currentBall && Submarine.instance.templeBall){\r\n            this._placeTempleBallInteraction.makeAvailable();\r\n        }\r\n    }\r\n\r\n    private makeInteractionUnavailable(){\r\n        this._placeTempleBallInteraction.makeUnavailable();\r\n        this._removeTempleBallInteraction.makeUnavailable();\r\n    }\r\n\r\n}","import {WorldInteraction} from \"@/YellowSubmarine/interaction system/interactions/WorldInteraction\";\r\nimport {TempleBall} from \"@/YellowSubmarine/temple/TempleBall\";\r\nimport {AbstractMesh} from \"@babylonjs/core\";\r\nimport {Grappler} from \"@/YellowSubmarine/grappling system/Grappler\";\r\n\r\nexport class GrappleInteraction extends WorldInteraction{\r\n\r\n    public constructor(private _grabbableObject: TempleBall) {\r\n        super(\"KeyF\", \"F\");\r\n    }\r\n\r\n    public get grabbableObject(): TempleBall {\r\n        return this._grabbableObject;\r\n    }\r\n\r\n    public set grabbableObject(value: TempleBall) {\r\n        this._grabbableObject = value;\r\n    }\r\n\r\n    public get description(): string {\r\n        return \"Grapple\";\r\n    }\r\n\r\n    public executeInteraction(): void {\r\n        Grappler.instance.grappleObject(this._grabbableObject);\r\n        this.makeUnavailable();\r\n    }\r\n\r\n    public get mesh(): AbstractMesh | undefined {\r\n        return this._grabbableObject.mesh;\r\n    }\r\n\r\n\r\n}","import {SphericalDetectionZone} from \"@/YellowSubmarine/detection system/SphericalDetectionZone\";\r\nimport {GrappleInteraction} from \"@/YellowSubmarine/grappling system/interaction/GrappleInteraction\";\r\nimport {\r\n    AbstractMesh, Color3,\r\n    MeshBuilder, Observable,\r\n    PhysicsBody,\r\n    PhysicsMotionType,\r\n    PhysicsShape,\r\n    PhysicsShapeType, Vector3\r\n} from \"@babylonjs/core\";\r\nimport {Submarine} from \"@/YellowSubmarine/Submarine\";\r\nimport {Game} from \"@/YellowSubmarine/Game\";\r\nimport {Grappler} from \"@/YellowSubmarine/grappling system/Grappler\";\r\nimport {Socle} from \"@/YellowSubmarine/temple/Socle\";\r\nimport {CellMaterial} from \"@babylonjs/materials\";\r\nimport {TemplePuzzle} from \"@/YellowSubmarine/temple/TemplePuzzle\";\r\n\r\nexport class TempleBall {\r\n    private _detectionZone: SphericalDetectionZone;\r\n    private _grappleInteraction: GrappleInteraction;\r\n    private _mesh: AbstractMesh;\r\n    private _physicsBody: PhysicsBody;\r\n    private _physicsShape: PhysicsShape;\r\n    private _socle?: Socle;\r\n\r\n    public static onAnyBallPlacedOnAnySocle = new Observable<{ball: TempleBall, socle: Socle}>();\r\n    public onPlacedOnSocle = new Observable<Socle>();\r\n\r\n    public get mesh(): AbstractMesh {\r\n        return this._mesh;\r\n    }\r\n\r\n    public get physicsBody(): PhysicsBody {\r\n        return this._physicsBody;\r\n    }\r\n\r\n    public get socle(): Socle | undefined {\r\n        return this._socle;\r\n    }\r\n\r\n    public set socle(socle: Socle | undefined) {\r\n        this._socle = socle;\r\n        if(socle){\r\n            this.onPlacedOnSocle.notifyObservers(socle);\r\n        }\r\n    }\r\n\r\n    public constructor(position: Vector3, public readonly color: Color3) {\r\n        TemplePuzzle.registerBall(this);\r\n        this.onPlacedOnSocle.add((s) => TempleBall.onAnyBallPlacedOnAnySocle.notifyObservers({ball: this, socle: s}));\r\n        this._mesh = MeshBuilder.CreateSphere(\"templeBall\", {\r\n            diameter: 2,\r\n        });\r\n        this._mesh.position = position;\r\n        this._physicsShape = new PhysicsShape({\r\n            type: PhysicsShapeType.SPHERE,\r\n            parameters: {\r\n                radius: 1,\r\n            }\r\n        }, Game.scene);\r\n        const cellMaterial = new CellMaterial(\"templeBallMaterial\");\r\n        cellMaterial.diffuseColor = color;\r\n        this._mesh.material = cellMaterial;\r\n        this._physicsBody = new PhysicsBody(this._mesh, PhysicsMotionType.DYNAMIC, false, Game.scene);\r\n        this._physicsBody.shape = this._physicsShape;\r\n        this._physicsBody.setLinearDamping(1);\r\n        this._physicsBody.setMassProperties({\r\n            mass: 0.5,\r\n        });\r\n\r\n        this._grappleInteraction = new GrappleInteraction(this);\r\n        this._detectionZone = new SphericalDetectionZone({\r\n            diameter: 4,\r\n        },false);\r\n        this._detectionZone.zone.parent = this._mesh;\r\n        Submarine.instance.meshCreationPromise.then((mesh) => {\r\n           this._detectionZone.addMeshToDetect(mesh);\r\n        });\r\n        this._detectionZone.onMeshEnter.add(() => {\r\n            if(Grappler.instance.hasAnObjectGrappled || this._socle) return\r\n\r\n            this._grappleInteraction.makeAvailable();\r\n        })\r\n        this._detectionZone.onMeshExit.add(() => {\r\n            this._grappleInteraction.makeUnavailable();\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n}","import {Angle, Color3, Observable, TransformNode, Vector3} from \"@babylonjs/core\";\r\nimport {Socle} from \"@/YellowSubmarine/temple/Socle\";\r\nimport {TempleBall} from \"@/YellowSubmarine/temple/TempleBall\";\r\nimport {CameraConfiguration} from \"@/YellowSubmarine/camera system/CameraConfiguration\";\r\nimport {MeshDetectionZone} from \"@/YellowSubmarine/detection system/MeshDetectionZone\";\r\nimport {SphericalDetectionZone} from \"@/YellowSubmarine/detection system/SphericalDetectionZone\";\r\nimport {ConfigurableCamera} from \"@/YellowSubmarine/camera system/ConfigurableCamera\";\r\nimport {Submarine} from \"@/YellowSubmarine/Submarine\";\r\nimport {Player} from \"@/YellowSubmarine/Player\";\r\n\r\nexport class TemplePuzzle {\r\n    private _upperRightSocle: Socle;\r\n    private _middleRightSocle: Socle;\r\n    private _lowerRightSocle: Socle;\r\n    private _lowerMiddleSocle: Socle;\r\n    private _lowerLeftSocle: Socle;\r\n    private _middleLeftSocle: Socle;\r\n    private _upperLeftSocle: Socle;\r\n    private _upperMiddleSocle: Socle;\r\n    private _centerSocle: Socle;\r\n\r\n    public static get instance(): TemplePuzzle{\r\n        return this._instance;\r\n    }\r\n\r\n    public get transformNode(): TransformNode {\r\n        return this._transformNode;\r\n    }\r\n\r\n    public static onPuzzleResolved = new Observable<void>();\r\n    public static onPuzzleRejected = new Observable<void>();\r\n\r\n    private static _instance: TemplePuzzle;\r\n\r\n    private static _ball: TempleBall[] = new Array<TempleBall>();\r\n\r\n    public static registerBall(ball: TempleBall): void {\r\n        this._ball.push(ball);\r\n        ball.onPlacedOnSocle.add(() => {\r\n            this._instance.onBallPlacedOnSocle();\r\n        });\r\n    }\r\n\r\n    private _transformNode: TransformNode = new TransformNode(\"templePuzzle\");\r\n    private _cameraConfiguration: CameraConfiguration;\r\n    private _detectionZone: MeshDetectionZone;\r\n\r\n    public constructor(parent: TransformNode, position: Vector3) {\r\n        TemplePuzzle._instance = this;\r\n        this._transformNode.parent = parent;\r\n        this._transformNode.rotation = Vector3.Zero();\r\n        this._transformNode.position = position;\r\n        this._detectionZone = new SphericalDetectionZone({\r\n            diameter: 70,\r\n        }, false);\r\n        this._detectionZone.zone.parent = this._transformNode;\r\n        this._cameraConfiguration = new CameraConfiguration();\r\n        this._cameraConfiguration.target = this._transformNode;\r\n        this._cameraConfiguration.wantedBeta = Angle.FromDegrees(0).radians();\r\n        this._cameraConfiguration.wantedAlpha = Angle.FromDegrees(-90).radians();\r\n        this._cameraConfiguration.distanceFromTarget = 100;\r\n        this._detectionZone.onMeshEnter.add(() => {\r\n            ConfigurableCamera.instance.cameraConfiguration = this._cameraConfiguration;\r\n        });\r\n        this._detectionZone.onMeshExit.add(() => {\r\n            ConfigurableCamera.instance.cameraConfiguration = Player.playerCameraConfiguration;\r\n        })\r\n        Submarine.instance.meshCreationPromise.then((mesh) => {\r\n            this._detectionZone.addMeshToDetect(mesh);\r\n        })\r\n        this._upperRightSocle = this.createSocle(new Vector3(-1,0,-1).scale(20));\r\n        this._middleRightSocle = this.createSocle(new Vector3(-1,0,0).scale(20), Color3.Purple());\r\n        this._lowerRightSocle = this.createSocle(new Vector3(-1,0,1).scale(20), Color3.Blue());\r\n        this._lowerMiddleSocle = this.createSocle(new Vector3(0,0,1).scale(20), Color3.Green());\r\n        this._lowerLeftSocle = this.createSocle(new Vector3(1,0,1).scale(20), Color3.Red());\r\n        this._middleLeftSocle = this.createSocle(new Vector3(1,0,0).scale(20));\r\n        this._upperLeftSocle = this.createSocle(new Vector3(1,0,-1).scale(20), Color3.Gray());\r\n        this._upperMiddleSocle = this.createSocle(new Vector3(0,0,-1).scale(20), Color3.Yellow());\r\n        this._centerSocle = this.createSocle(Vector3.Zero());\r\n\r\n        // TODO: Test only, remove after\r\n        const grayBall = new TempleBall(new Vector3(40,0,20), Color3.Gray());\r\n        const yellowBall = new TempleBall(new Vector3(50,0,20), Color3.Yellow());\r\n\r\n        this._lowerLeftSocle.meshImportedPromise.then(() => {\r\n            this._lowerLeftSocle.placeBall(yellowBall);\r\n        });\r\n        this._lowerRightSocle.meshImportedPromise.then(() => {\r\n            this._lowerRightSocle.placeBall(grayBall);\r\n        })\r\n\r\n    }\r\n\r\n    private createSocle(position: Vector3, validColor?: Color3){\r\n        const socle = new Socle(this._transformNode, position);\r\n        socle.validColor = validColor;\r\n        return socle;\r\n    }\r\n\r\n    private onBallPlacedOnSocle(){\r\n        if(this.isAllBallPlacedOnASocle()){\r\n            if(this.checkConfiguration()){\r\n                TemplePuzzle.onPuzzleResolved.notifyObservers();\r\n            }\r\n            else{\r\n                TemplePuzzle.onPuzzleRejected.notifyObservers();\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private isAllBallPlacedOnASocle(){\r\n        let numberOfPlaced = 0;\r\n        TemplePuzzle._ball.forEach( (ball) => {\r\n            if(ball.socle){\r\n                numberOfPlaced++;\r\n            }\r\n        });\r\n        return numberOfPlaced == 6;\r\n    }\r\n\r\n    private checkConfiguration() {\r\n        for(let i = 0; i < TemplePuzzle._ball.length; i++) {\r\n            const ball = TemplePuzzle._ball[i];\r\n            const socle = ball.socle;\r\n            if (socle) {\r\n                const socleValidColor = socle.validColor;\r\n                if (socleValidColor === undefined || !ball.color.equals(socleValidColor) ) {\r\n                    return false;\r\n                }\r\n            } else {\r\n                console.log(\"Some ball are not placed\");\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n}","import {Quest} from \"@/YellowSubmarine/quest system/Quest\";\r\nimport {QuestStep} from \"@/YellowSubmarine/quest system/QuestStep\";\r\nimport {TemplePuzzle} from \"@/YellowSubmarine/temple/TemplePuzzle\";\r\n\r\nexport class QuestFactory {\r\n\r\n    public static createAll(){\r\n        const quests: Quest[] = [];\r\n        quests.push(QuestFactory.createTalkToPedro());\r\n        quests.push(QuestFactory.createTempleQuest());\r\n        return quests;\r\n    }\r\n\r\n    private static createTalkToPedro(): Quest{\r\n        const quest = new Quest(\"dreamland\", \"Le monde des rêves\", \"active\", 0);\r\n        const steps: QuestStep[] = [];\r\n        steps.push(new QuestStep(\"Parlez à l'habitant de l'ile du Dophin\"));\r\n        steps.push(new QuestStep(\"Aller voir le temple\"));\r\n        steps.push(new QuestStep(\"Parler aux différents habitants de chaque île\"));\r\n        quest.steps = steps;\r\n        TemplePuzzle.onPuzzleResolved.add(() => {\r\n            quest.state = \"completed\";\r\n        });\r\n        return quest;\r\n    }\r\n\r\n    private static createTempleQuest(): Quest{\r\n        const quest = new Quest(\"temple_quest\", \"Le Temple\", \"inactive\", 0);\r\n        const steps: QuestStep[] = [];\r\n        steps.push(new QuestStep(\"Résoudre l'énigme du temple\"));\r\n        quest.steps = steps;\r\n        TemplePuzzle.onPuzzleResolved.add(() => {\r\n            quest.state = \"completed\";\r\n        });\r\n        return quest;\r\n    }\r\n}","import {Quest} from \"@/YellowSubmarine/quest system/Quest\";\r\nimport {Game} from \"@/YellowSubmarine/Game\";\r\nimport {QuestFactory} from \"@/YellowSubmarine/quest system/QuestFactory\";\r\n\r\nexport class QuestManager {\r\n\r\n    private quests: Quest[] = [];\r\n\r\n    private static _instance: QuestManager;\r\n\r\n    public static get instance(): QuestManager {\r\n        return this._instance;\r\n    }\r\n\r\n    constructor() {\r\n        this.quests = QuestFactory.createAll();\r\n        QuestManager._instance = this;\r\n        Game.scene.onBeforeRenderObservable.add(() => {\r\n            this.quests.forEach(quest => {\r\n                if(quest.steps[quest.currentStepIndex].condition && quest.state === \"active\") {\r\n                    quest.nextStep();\r\n                }\r\n            })\r\n        });\r\n\r\n        this.getQuest(\"dreamland\")?.startQuest();\r\n\r\n    }\r\n\r\n    public getQuest(id: string): Quest | undefined {\r\n        return this.quests.find(quest => quest.id === id);\r\n    }\r\n\r\n    public getAllActiveQuests(): Quest[] {\r\n        const quests: Quest[] = [];\r\n        this.quests.forEach(quest => {\r\n            if(quest.state === \"active\") {\r\n                quests.push(quest);\r\n            }\r\n        });\r\n        return quests;\r\n    }\r\n}","import { UI } from \"@/YellowSubmarine/ui system/UI\";\r\nimport {Control, StackPanel, TextBlock, Rectangle, Grid} from \"@babylonjs/gui\";\r\nimport { Quest } from \"@/YellowSubmarine/quest system/Quest\";\r\nimport { Game } from \"@/YellowSubmarine/Game\";\r\nimport { QuestManager } from \"@/YellowSubmarine/quest system/QuestManager\";\r\nimport { KeyboardEventTypes } from \"@babylonjs/core\";\r\n\r\nexport class JournalUI extends UI {\r\n\r\n    private _panel: StackPanel;\r\n    private _container: Rectangle;\r\n    private _journalEntry: Map<Quest, Array<string>> = new Map();\r\n    private static _instance: JournalUI;\r\n\r\n    public static get instance(): JournalUI {\r\n        return this._instance;\r\n    }\r\n\r\n    get controlNode(): Control {\r\n        return this._panel;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._panel = new StackPanel();\r\n        this._panel.width = \"60%\";\r\n        this._panel.height = \"90%\";\r\n        this._panel.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_CENTER;\r\n        this._panel.verticalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\r\n        this._panel.spacing = 20;\r\n        this._panel.isVisible = false;\r\n\r\n        const container = new Rectangle();\r\n        container.background = \"rgba(0, 0, 0, 0.4)\";\r\n        container.thickness = 0;\r\n        container.cornerRadius = 10;\r\n        container.height = \"100%\";\r\n        container.paddingBottom = \"5px\";\r\n        container.width = \"100%\";\r\n        container.paddingLeft = \"10px\";\r\n        container.paddingRight = \"10px\";\r\n        container.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\r\n        this._container = container;\r\n        this._panel.addControl(this._container);\r\n\r\n\r\n        Game.scene.onKeyboardObservable.add((eventData) => {\r\n            const state = eventData.type === KeyboardEventTypes.KEYDOWN;\r\n            if (eventData.event.key === \"j\" && state) {\r\n                this._panel.isVisible ? this.hide() : this.show();\r\n            }\r\n        });\r\n\r\n        JournalUI._instance = this;\r\n    }\r\n\r\n    private refresh() {\r\n        if (QuestManager.instance) {\r\n            this._panel.clearControls();\r\n\r\n            this._journalEntry.forEach((lines, quest) => {\r\n\r\n                const questGrid = new Grid();\r\n                questGrid.height = \"100%\";\r\n                questGrid.addColumnDefinition(0.4);\r\n                questGrid.addColumnDefinition(0.6);\r\n                questGrid.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_RIGHT;\r\n                questGrid.verticalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\r\n                questGrid.paddingBottom = \"5px\";\r\n                questGrid.width = \"100%\";\r\n\r\n                const titleText = new TextBlock();\r\n                titleText.text = \"\\n\" + `⛋ ${quest.name}`;\r\n                titleText.color = \"white\";\r\n                titleText.fontSize = 20;\r\n                titleText.fontWeight = \"bold\";\r\n                titleText.paddingLeft = \"10px\";\r\n                titleText.paddingRight = \"10px\";\r\n                titleText.paddingTop = \"10px\"\r\n                titleText.paddingBottom = \"10px\";\r\n                titleText.textHorizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n                titleText.textVerticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\r\n\r\n                const stepText = new TextBlock();\r\n                lines.forEach((line) => {\r\n                    stepText.text += \"\\n\" + line + \"\\n\";\r\n                })\r\n                stepText.color = \"lightgray\";\r\n                stepText.fontSize = 20;\r\n                stepText.textHorizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n                stepText.textVerticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\r\n                stepText.textWrapping = true;\r\n                stepText.paddingLeft = \"10px\";\r\n                stepText.paddingRight = \"10px\";\r\n                stepText.paddingTop = \"10px\";\r\n                stepText.paddingBottom = \"10px\";\r\n                questGrid.addControl(titleText, 0, 0);\r\n                questGrid.addControl(stepText, 0, 1);\r\n\r\n                this._container.addControl(questGrid);\r\n                this._panel.addControl(this._container);\r\n            });\r\n        }\r\n    }\r\n\r\n    public show() {\r\n        this._panel.isVisible = true;\r\n    }\r\n\r\n    public hide() {\r\n        this._panel.isVisible = false;\r\n    }\r\n\r\n    public addEntryToQuest(quest: Quest | undefined, entry: string) {\r\n        if (quest) {\r\n            if (!this._journalEntry.has(quest)) {\r\n                this._journalEntry.set(quest, []);\r\n            }\r\n            if(!this._journalEntry.get(quest)?.includes(entry)) this._journalEntry.get(quest)?.push(entry);\r\n        }\r\n        this.refresh();\r\n    }\r\n}\r\n","import {NPC} from \"@/YellowSubmarine/npcs/NPC\";\r\nimport {Utils} from \"@/YellowSubmarine/Utils\";\r\nimport {CylindricalDetectionZone} from \"@/YellowSubmarine/detection system/CylindricalDetectionZone\";\r\nimport {CameraConfiguration} from \"@/YellowSubmarine/camera system/CameraConfiguration\";\r\nimport {Angle, PBRMaterial, Vector3} from \"@babylonjs/core\";\r\nimport {CartoonShaderMaterial} from \"@/YellowSubmarine/shader material/CartoonShaderMaterial\";\r\nimport {SoundManager} from \"@/YellowSubmarine/sound system/SoundManager\";\r\nimport {ConversationBuilder} from \"@/YellowSubmarine/dialogue system/ConversationBuilder\";\r\nimport {JournalUI} from \"@/YellowSubmarine/quest system/ui/JournalUI\";\r\nimport {QuestManager} from \"@/YellowSubmarine/quest system/QuestManager\";\r\n\r\nexport class NPCFactory {\r\n\r\n    public static async createPedro(): Promise<NPC>{\r\n        const pedro = new NPC();\r\n        pedro.name = \"Pedro\";\r\n        Utils.loadMesh(\"models/characters/pedro.glb\").then((result) => {\r\n            pedro.mesh = result.meshes[0];\r\n            result.meshes.forEach((mesh) => {\r\n                const mat = mesh.material as PBRMaterial;\r\n                if(mat){\r\n                    const toonMat = new CartoonShaderMaterial();\r\n                    toonMat.assignMaterial(mesh).then(() => {\r\n                        toonMat.configureFromPBRMaterial(mat);\r\n                    });\r\n                }\r\n            })\r\n        });\r\n        pedro.detectionZone = new CylindricalDetectionZone( {\r\n            height: 8,\r\n            diameterTop: 45,\r\n            diameterBottom: 45,\r\n        }, true);\r\n\r\n        pedro.detectionZone.zone.position.set(0, -11, 0);\r\n\r\n        pedro.conversation = new ConversationBuilder()\r\n            .say(\"OH CA VA PAS DE ME REVEILLER COMME CA ! MAIS QUI ES TU !!!!!\")\r\n            .then(\"Ca fais bien longtemps que j'ai pas vu quelqu'un comme toi ici ! Je me présente, je suis Pedro. Je pêche ici depuis bel lurette mon n'veu.\")\r\n            .then(\"Ici, eh beh ici je sais pas trop comment te le décrire. C'est assez vide et ça mord pas trop au bout de ma canne... \")\r\n            .then(\"Mais ! Y'a un p'tit endroit au nord d'ici un peu particulier.\")\r\n            .then(\"Y'avait deux boules et plein de poteaux, j'ai pas tout compris et j'étais fatigué Ducoup j'suis parti..\")\r\n            .then(\"Normalement tu devrais l'apercevoir d'ici ! Fais attention ! \")\r\n            .then(\"Hésite pas à aller voir les habitants des autres, ils devraient pouvoir t'aider !\")\r\n            .then(\"Bon aller moi je retourne pêcher (et dormir au passage... ça fais bieeeen ..... loongt....................... zzZZZzzzzzZZzzzzzzzz)\")\r\n            .setOnEnding(() => {\r\n                JournalUI.instance.addEntryToQuest(QuestManager.instance.getQuest(\"dreamland\"), \"Pedro s'est endormie\");\r\n                QuestManager.instance.getQuest(\"dreamland\")?.updateCurrentStepStatus();\r\n            })\r\n            .build();\r\n\r\n        pedro.cameraConfiguration = new CameraConfiguration();\r\n        pedro.cameraConfiguration.target = pedro.transformNode;\r\n        pedro.cameraConfiguration.distanceFromTarget = 10;\r\n        pedro.cameraConfiguration.offset = Vector3.Up().scale(2);\r\n        pedro.cameraConfiguration.wantedAlpha = Angle.FromDegrees(-90).radians();\r\n\r\n        return pedro;\r\n    }\r\n\r\n    public static async createFox(): Promise<NPC>{\r\n        const fox = new NPC();\r\n        fox.name = \"Crimson\";\r\n        Utils.loadMesh(\"models/characters/fox.glb\").then((result) => {\r\n            fox.mesh = result.meshes[0];\r\n            result.meshes.forEach((mesh) => {\r\n                const mat = mesh.material as PBRMaterial;\r\n                if(mat){\r\n                    const toonMat = new CartoonShaderMaterial();\r\n                    toonMat.assignMaterial(mesh).then(() => {\r\n                        toonMat.configureFromPBRMaterial(mat);\r\n                    });\r\n                }\r\n            })\r\n        });\r\n        fox.detectionZone = new CylindricalDetectionZone( {\r\n            height: 8,\r\n            diameterTop: 45,\r\n            diameterBottom: 45,\r\n        }, true);\r\n\r\n        fox.conversation = new ConversationBuilder()\r\n            .say(\"Je sais pas si tu vois la même chose que moi (peut-être que c'est un mirage). Y'a une piste de bowling là-bas où y'a les quilles qui sortent de l'eau.\")\r\n            .then(\"Y'a une sorte de boule de bowling qui était sur l'île. J'ai essayé de jouer avec des quilles en glace mais ça a pas trop marché.\")\r\n            .then(\"Parmi les quilles j'ai mis une bouteille que j'ai trouvée dans le coin et bizarrement, quand j'ai fait un STRIKE ! Y'a une note qui est sortie.\")\r\n            .then(\"Y'avait marqué ça : « Redina, la plus forte, restait en retrait afin de couvrir leurs arrières »\")\r\n            .then(\"Bizarre l'ambiance... J'en ai marre de jouer au bowling donc j'te donne la boule ! Mais prends-en soin !\")\r\n            .then(\"Allez, je vais jouer à la pétanque moi...\")\r\n            .setOnEnding(() => {\r\n                JournalUI.instance.addEntryToQuest(QuestManager.instance.getQuest(\"dreamland\"), \"D'après Crimson : Redina, la plus forte, restait en retrait afin de couvrir leurs arrières\");\r\n            })\r\n            .build();\r\n\r\n        fox.cameraConfiguration = new CameraConfiguration();\r\n        fox.cameraConfiguration.target = fox.transformNode;\r\n        fox.cameraConfiguration.distanceFromTarget = 10;\r\n        fox.cameraConfiguration.wantedAlpha = Angle.FromDegrees(-90).radians();\r\n\r\n        return fox;\r\n    }\r\n\r\n    public static async createGirl(): Promise<NPC>{\r\n        const scientific = new NPC();\r\n        scientific.name = \"Rosa\";\r\n        Utils.loadMesh(\"models/characters/phare_girl.glb\").then((result) => {\r\n            scientific.mesh = result.meshes[0];\r\n            result.meshes.forEach((mesh) => {\r\n                const mat = mesh.material as PBRMaterial;\r\n                if(mat){\r\n                    const toonMat = new CartoonShaderMaterial();\r\n                    toonMat.assignMaterial(mesh).then(() => {\r\n                        toonMat.configureFromPBRMaterial(mat);\r\n                    });\r\n                }\r\n            })\r\n        });\r\n        scientific.detectionZone = new CylindricalDetectionZone( {\r\n            height: 8,\r\n            diameterTop: 45,\r\n            diameterBottom: 45,\r\n        }, true);\r\n\r\n\r\n        scientific.conversation = new ConversationBuilder()\r\n            .say(\"Si je suis la trajectoire de cette étoile, alors je peux peut-être réussir à démontrer que e = m6 !\")\r\n            .then(\"Oh salut toi ! T'as un sacré sous-marin ! J'adore les sous-marins tu tombes à pic !\")\r\n            .then(\"Pour la peine, je vais te présenter les conclusions de mon expérience AHAH prépare toi à en prendre plein la vue !\")\r\n            .then(\"J'ai trouvé une boule de couleurs avec deux parchemins. Commençons par les FAITS !\")\r\n            .then(\"Fait numéro 1 : la boule est d'une couleur spécifique... Hmmmm...... Ok soit.\")\r\n            .then(\"Fait numéro 2 : les textes parlent de je ne sais pas trop quoi à vrai dire. Mais ! J'ai l'impression que les couleurs sont importantes !\")\r\n            .then(\"Fait numéro 3 : les deux parchemins racontes la chose suivante : \\n\" +\r\n                \" - Greina, la plus sage, veillait sur ses soeurs sans faillire à sa tâche \\n\" +\r\n                \" - Bluella, la plus téméraire, ouvrait la marche, portant un chapeau violet \")\r\n            .then(\"Maintenant, passons à la THEORIE !\")\r\n            .then(\"Théorie numéro 1 : une boule de couleur a une position unique. Mais où ??? AHHH Je ne comprends pas....\")\r\n            .then(\"Théorie numéro 2 : il existe d'autres boules de couleur car mes deux indices parlent de couleurs différentes de celle de ma boule !\")\r\n            .then(\"Et voilà c'est un peu tout ce que j'ai, je suis dans une sacrée impasse. Je vais sûrement rater le prix Nobel cette année.....\")\r\n            .then(\"Allez j'te laisse la boule, je suis passé à autre chose ! Tu me diras une prochaine fois si ça t'a été utile !\")\r\n            .then(\"À la revoyure !\")\r\n            .setOnEnding(() => {\r\n                JournalUI.instance.addEntryToQuest(QuestManager.instance.getQuest(\"dreamland\"), (\"Rosa a trouvée ces deux phrases :\" +\r\n                    \"\\n - Bluella, la plus téméraire, ouvrait la marche, portant un chapeau violet\" +\r\n                    \"\\n - Greina, la plus sage, veillait sur ses soeurs sans faillire à sa tâche\"));\r\n            })\r\n            .build();\r\n\r\n\r\n\r\n        scientific.cameraConfiguration = new CameraConfiguration();\r\n        scientific.cameraConfiguration.target = scientific.transformNode;\r\n        scientific.cameraConfiguration.distanceFromTarget = 40;\r\n        scientific.cameraConfiguration.wantedAlpha = Angle.FromDegrees(-120).radians();\r\n        scientific.cameraConfiguration.wantedBeta = Angle.FromDegrees(50).radians();\r\n\r\n        return scientific;\r\n    }\r\n\r\n    public static async createScribe(): Promise<NPC>{\r\n        const scribe = new NPC();\r\n        scribe.name = \"Marcel\";\r\n        Utils.loadMesh(\"models/characters/scribe.glb\").then((result) => {\r\n            scribe.mesh = result.meshes[0];\r\n            result.meshes.forEach((mesh) => {\r\n                const mat = mesh.material as PBRMaterial;\r\n                if(mat){\r\n                    const toonMat = new CartoonShaderMaterial();\r\n                    toonMat.assignMaterial(mesh).then(() => {\r\n                        toonMat.configureFromPBRMaterial(mat);\r\n                    });\r\n                }\r\n            })\r\n        });\r\n        scribe.detectionZone = new CylindricalDetectionZone( {\r\n            height: 8,\r\n            diameterTop: 45,\r\n            diameterBottom: 45,\r\n        }, true);\r\n\r\n        scribe.conversation = new ConversationBuilder()\r\n            .say(\"Que penses-tu de mon prochain poème jeune étranger ?\")\r\n            .then(\"[g]Ballade d’un Génie Naufragé[/g]\")\r\n            .then(\"[i]Je suis ce grand Marcel, qu’aucun vent ne dérange, Poète illustre et fier, perdu sur cet étrange Territoire obscur, bordé par l’inconnu, Où des piliers sans fin soutiennent l’absolu.[/i]\")\r\n            .then(\"[i]Je ne sais point comment j’ai pu atterrir ici, Mais l’endroit me salue d’un silence exquis. Tantôt le ciel s’emplit de choses voltigeantes, Tantôt le vide plane, en formes déchirantes.[/i]\")\r\n            .then(\"[i]Sur le rivage nu, comme un don du destin, J’aperçus une orbe, d’un éclat si divin Que mon esprit, troublé par tant de magnificence, Faillit se noyer dans sa propre éloquence.[/i]\")\r\n            .then(\"[i]Juste à côté dormait, message dans bouteille, Un parchemin d’échos, d’une main non pareille. Il était écrit, sans honte ni limite : [/i] [c=blue]« Pendant que le soleil était au zénith, Un nuage grisâtre s’approchait depuis l’ouest ». Ah ! Que cette phrase est d’un raffinement leste ![/c]\")\r\n            .then(\"[i]Moi seul, Marcel, pouvais en saisir l’essence, Car mon verbe est plus fort que toute connaissance.[/i]\")\r\n            .then(\"[i]Je retourne à présent vers la fontaine noire, Dont l’encre tachera les vers de ma mémoire.[/i]\")\r\n            .then(\"Voila ! J'espère que ce ne fut pas un peu trop long. Maintenant file je dois me concentrer !\")\r\n            .setOnEnding(() => {\r\n                JournalUI.instance.addEntryToQuest(QuestManager.instance.getQuest(\"dreamland\"), \"Marcel nous indique dans son poeme interminable : \\n \" +\r\n                    \" - Pendant que le soleil était au zénith, Un nuage grisâtre s’approchait depuis l’ouest\")\r\n            })\r\n            .build();\r\n\r\n\r\n        scribe.cameraConfiguration = new CameraConfiguration();\r\n        scribe.cameraConfiguration.target = scribe.transformNode;\r\n        scribe.cameraConfiguration.distanceFromTarget = 10;\r\n        scribe.cameraConfiguration.wantedAlpha = Angle.FromDegrees(150).radians();\r\n\r\n        return scribe;\r\n    }\r\n\r\n    public static async createRabbit(): Promise<NPC>{\r\n        const rabbit = new NPC();\r\n        rabbit.name = \"Matthew\";\r\n\r\n        Utils.loadMesh(\"models/characters/lapin.glb\").then((result) => {\r\n            rabbit.mesh = result.meshes[0];\r\n\r\n            result.meshes.forEach((mesh) => {\r\n\r\n                const mat = mesh.material as PBRMaterial;\r\n                if(mat){\r\n                    const toonMat = new CartoonShaderMaterial();\r\n                    toonMat.assignMaterial(mesh).then(() => {\r\n                        toonMat.configureFromPBRMaterial(mat);\r\n                    });\r\n                }\r\n            })\r\n        });\r\n\r\n        rabbit.detectionZone = new CylindricalDetectionZone( {\r\n            height: 8,\r\n            diameterTop: 45,\r\n            diameterBottom: 45,\r\n        }, true);\r\n\r\n        rabbit.detectionZone.zone.position.set(0, -2, 0);\r\n\r\n        rabbit.conversation = new ConversationBuilder()\r\n            .say(\"[i][c=blue]Trois sœurs, Redina, Greina, Bluella, voyant le nuage s'approcher, se dirigeaient à l'opposée....[/i][/c]\")\r\n            .then(\"Hmmmm... Qu'est-ce que ça peut vouloir dire....\")\r\n            .then(\"AAAAAAAAAAAAAAAAAAAAHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH\")\r\n            .then(\"TU M'AS FAIS PEUR !!!!\")\r\n            .then(\"TIENS PREND ÇA ! ET PARS LOIN D'ICI SANS REVENIR !!!!!!!!!!!!!!!!\")\r\n            .setOnEnding(() => {\r\n                JournalUI.instance.addEntryToQuest(QuestManager.instance.getQuest(\"dreamland\"), \"Marcel nous indique dans son poeme interminable : \\n \" +\r\n                    \" - Trois sœurs, Redina, Greina, Bluella, voyant le nuage s'approcher, se dirigeaient à l'opposée...\")\r\n            })\r\n            .build();\r\n\r\n\r\n\r\n        rabbit.cameraConfiguration = new CameraConfiguration();\r\n        rabbit.cameraConfiguration.target = rabbit.transformNode;\r\n        rabbit.cameraConfiguration.distanceFromTarget = 10;\r\n        rabbit.cameraConfiguration.wantedAlpha = Angle.FromDegrees(-90).radians();\r\n\r\n        return rabbit;\r\n    }\r\n}","import {MeshDetectionZone} from \"@/YellowSubmarine/detection system/MeshDetectionZone\";\r\nimport {Conversation} from \"@/YellowSubmarine/dialogue system/Conversation\";\r\nimport {\r\n    StartConversationInteraction\r\n} from \"@/YellowSubmarine/dialogue system/interactions/StartConversationInteraction\";\r\nimport {ConversationBuilder} from \"@/YellowSubmarine/dialogue system/ConversationBuilder\";\r\nimport {SphericalDetectionZone} from \"@/YellowSubmarine/detection system/SphericalDetectionZone\";\r\nimport {Submarine} from \"@/YellowSubmarine/Submarine\";\r\nimport {QuestManager} from \"@/YellowSubmarine/quest system/QuestManager\";\r\nimport {IConversationProvider} from \"@/YellowSubmarine/dialogue system/IConversationProvider\";\r\nimport {AbstractMesh, Angle} from \"@babylonjs/core\";\r\nimport {CameraConfiguration} from \"@/YellowSubmarine/camera system/CameraConfiguration\";\r\n\r\nexport class Stele implements IConversationProvider {\r\n    private _steleInteractionZone!: MeshDetectionZone;\r\n    private _conversation!: Conversation;\r\n    private _startConversationInteraction?: StartConversationInteraction\r\n    private _cameraConfiguration!: CameraConfiguration;\r\n\r\n    public constructor() {\r\n        this.steleInteractionZone = new SphericalDetectionZone({\r\n            diameter: 20\r\n        }, true);\r\n        this._cameraConfiguration = new CameraConfiguration();\r\n        this._cameraConfiguration.target = this._steleInteractionZone.zone;\r\n        this._cameraConfiguration.distanceFromTarget = 20;\r\n        this._cameraConfiguration.wantedAlpha = Angle.FromDegrees(-90).radians();\r\n\r\n        const conversationBuilder = new ConversationBuilder();\r\n        conversationBuilder.say(\"La ligne du haut regarde les cieux\")\r\n            .then(\"La ligne du milieu respire l’air\")\r\n            .then(\"La ligne du bas touche la terre\")\r\n            .setOnEnding(() => {\r\n                let quest = QuestManager.instance.getQuest(\"temple_quest\");\r\n                if(quest) quest.startQuest();\r\n                quest = QuestManager.instance.getQuest(\"dreamland\");\r\n                if(quest) quest.updateCurrentStepStatus();\r\n            })\r\n        this.conversation = conversationBuilder.build();\r\n        this.conversation.conversationProvider = this;\r\n    }\r\n\r\n    public get steleInteractionZone(): MeshDetectionZone {\r\n        return this._steleInteractionZone;\r\n    }\r\n\r\n    private set steleInteractionZone(value: MeshDetectionZone) {\r\n        this._steleInteractionZone = value;\r\n        if(this._steleInteractionZone) {\r\n            this._steleInteractionZone.onMeshEnter.add(() => {\r\n                if (this._startConversationInteraction) {\r\n                    this._startConversationInteraction.makeAvailable();\r\n                }\r\n            })\r\n            this._steleInteractionZone.onMeshExit.add(() => {\r\n                if(this._startConversationInteraction) {\r\n                    this._startConversationInteraction.makeUnavailable();\r\n                }\r\n            })\r\n            Submarine.instance.meshCreationPromise.then((mesh) => {\r\n                this._steleInteractionZone?.addMeshToDetect(mesh);\r\n            })\r\n        }\r\n    }\r\n\r\n    public get conversation(): Conversation {\r\n        return this._conversation;\r\n    }\r\n\r\n    private set conversation(value: Conversation) {\r\n        this._conversation = value;\r\n        if(this._conversation) {\r\n            this._startConversationInteraction = new StartConversationInteraction(this._conversation);\r\n        }\r\n    }\r\n\r\n    get mesh(): AbstractMesh | undefined {\r\n        return this._steleInteractionZone.zone;\r\n    }\r\n\r\n    get name(): string {\r\n        return \"Stele\";\r\n    }\r\n\r\n    get cameraConfiguration(): CameraConfiguration | undefined {\r\n        return this._cameraConfiguration;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import {KeyZone} from \"@/YellowSubmarine/keyzone system/KeyZone\";\r\nimport {SphericalDetectionZone} from \"@/YellowSubmarine/detection system/SphericalDetectionZone\";\r\nimport {\r\n    Angle,\r\n    Color3,\r\n    Mesh,\r\n    PBRMaterial,\r\n    PhysicsAggregate,\r\n    PhysicsBody,\r\n    PhysicsMotionType,\r\n    PhysicsShape,\r\n    PhysicsShapeType,\r\n    Space, StandardMaterial,\r\n    TransformNode,\r\n    Vector3\r\n} from \"@babylonjs/core\";\r\nimport {Utils} from \"@/YellowSubmarine/Utils\";\r\nimport {NPCFactory} from \"@/YellowSubmarine/npcs/NPCFactory\";\r\nimport {CartoonShaderMaterial} from \"@/YellowSubmarine/shader material/CartoonShaderMaterial\";\r\nimport {Game} from \"@/YellowSubmarine/Game\";\r\nimport {Stele} from \"@/YellowSubmarine/temple/Stele\";\r\nimport {TemplePuzzle} from \"@/YellowSubmarine/temple/TemplePuzzle\";\r\nimport {CellMaterial} from \"@babylonjs/materials\";\r\nimport {TempleBall} from \"@/YellowSubmarine/temple/TempleBall\";\r\nimport {Submarine} from \"@/YellowSubmarine/Submarine\";\r\n\r\nexport class KeyZoneFactory {\r\n\r\n    private static readonly _dolphinPosition: Vector3 = new Vector3(0,0,160);\r\n    private static readonly _templePosition: Vector3 = new Vector3(0, 0, 500);\r\n    private static readonly _banquisePosition: Vector3 = new Vector3(-200, 0, 680);\r\n    private static readonly _archipelPosition: Vector3 = new Vector3(200, 0, 680);\r\n    private static readonly _pharePosition: Vector3 = new Vector3(-250, 0, 420);\r\n    private static readonly _poulpePosition: Vector3 = new Vector3(250, 0, 420);\r\n\r\n    public static async createDolphinIsland(): Promise<KeyZone> {\r\n        const _transformIsland: TransformNode = new TransformNode(\"island transform\");\r\n        const island = new KeyZone();\r\n\r\n        island.name = \"Dolphin island\";\r\n        island.detectionZone = new SphericalDetectionZone({\r\n            diameter : 200\r\n        }, true);\r\n\r\n        const result = await Utils.loadMesh(\"models/scenes/dolphinIsland.glb\");\r\n        const rootMesh = result.meshes[0];\r\n        rootMesh.position = Vector3.Zero();\r\n        rootMesh.parent = _transformIsland;\r\n        const childMeshes = rootMesh.getChildMeshes<Mesh>();\r\n        for (const mesh of result.meshes) {\r\n            const mat = mesh.material as PBRMaterial;\r\n            if(mat){\r\n                const toonMat = new CartoonShaderMaterial();\r\n                await toonMat.assignMaterial(mesh).then(() => {\r\n                    toonMat.configureFromPBRMaterial(mat);\r\n                });\r\n            }\r\n        }\r\n        const mergedMesh = Mesh.MergeMeshes(childMeshes,true, undefined, undefined, undefined, true);\r\n        if(mergedMesh){\r\n            mergedMesh.parent = _transformIsland;\r\n            island.mesh = mergedMesh;\r\n            _transformIsland.position = this._dolphinPosition;\r\n\r\n            const physicsBody = new PhysicsBody(mergedMesh, PhysicsMotionType.STATIC, false, Game.scene);\r\n            const physicsShape = new PhysicsShape({\r\n                type: PhysicsShapeType.MESH,\r\n                parameters: {\r\n                    mesh: mergedMesh,\r\n                }\r\n            }, Game.scene);\r\n\r\n            physicsBody.shape = physicsShape;\r\n            physicsBody.disablePreStep = false;\r\n            Game.scene.onBeforeRenderObservable.addOnce(() => physicsBody.disablePreStep = true);\r\n\r\n\r\n            NPCFactory.createPedro().then( (pedro) => {\r\n                pedro.transformNode.position = new Vector3(-30, 15, -14);\r\n                pedro.transformNode.parent = _transformIsland;\r\n            });\r\n        }\r\n\r\n\r\n        /*island.physicsAggregate = new PhysicsAggregate(island.mesh, PhysicsShapeType.SPHERE, {\r\n            mass: 0,\r\n            radius: 30,\r\n        }, Game.scene);*/\r\n\r\n\r\n        return island;\r\n    }\r\n\r\n    public static async createTemple(){\r\n\r\n        const templeTransform: TransformNode = new TransformNode(\"temple transform\");\r\n        const temple = new KeyZone();\r\n\r\n        temple.name = \"Temple\";\r\n        temple.detectionZone = new SphericalDetectionZone({\r\n            diameter : 260,\r\n        }, true);\r\n\r\n        const result = await Utils.loadMesh(\"models/scenes/temple.glb\");\r\n        const rootMesh = result.meshes[0];\r\n        rootMesh.position = Vector3.Zero();\r\n        rootMesh.parent = templeTransform;\r\n        const childMeshes = rootMesh.getChildMeshes<Mesh>();\r\n        for (const mesh of result.meshes) {\r\n            const mat = mesh.material as PBRMaterial;\r\n            if(mat){\r\n                const toonMat = new CartoonShaderMaterial();\r\n                await toonMat.assignMaterial(mesh).then(() => {\r\n                    toonMat.configureFromPBRMaterial(mat);\r\n                });\r\n                toonMat.emissionColor = Color3.FromHexString(\"#4bf49f\")\r\n            }\r\n        }\r\n        const mergedMesh = Mesh.MergeMeshes(childMeshes,true, undefined, undefined, undefined, true);\r\n        if(mergedMesh){\r\n            mergedMesh.parent = templeTransform;\r\n            temple.mesh = mergedMesh;\r\n            templeTransform.position = this._templePosition;\r\n            templeTransform.rotate(Vector3.Up(), Angle.FromDegrees(180).radians(), Space.WORLD);\r\n\r\n            const physicsBody = new PhysicsBody(mergedMesh, PhysicsMotionType.STATIC, false, Game.scene);\r\n            const physicsShape = new PhysicsShape({\r\n                type: PhysicsShapeType.MESH,\r\n                parameters: {\r\n                    mesh: mergedMesh,\r\n                }\r\n            }, Game.scene);\r\n            physicsBody.shape = physicsShape;\r\n\r\n            physicsBody.disablePreStep = false;\r\n            Game.scene.onBeforeRenderObservable.addOnce(() => physicsBody.disablePreStep = true);\r\n        }\r\n\r\n\r\n\r\n\r\n        const stele = new Stele();\r\n        const steleInteractionZone = stele.steleInteractionZone;\r\n        steleInteractionZone.zone.parent = templeTransform;\r\n        steleInteractionZone.zone.position = new Vector3(0,0,50);\r\n\r\n        const templePuzzle = new TemplePuzzle(templeTransform, new Vector3(0,0,0));\r\n\r\n    }\r\n\r\n    private static createStaticPhysicsAggregate(\r\n        transformNode: TransformNode,\r\n        type: PhysicsShapeType | PhysicsShape,\r\n    ){\r\n        const aggregate = new PhysicsAggregate(transformNode, type, {\r\n            mass: 0,\r\n        }, Game.scene);\r\n\r\n        return aggregate;\r\n    }\r\n\r\n    public static async createBanquise(){\r\n        const banquiseTransform: TransformNode = new TransformNode(\"banquise transform\");\r\n        const banquise = new KeyZone();\r\n\r\n        banquise.name = \"Fractisberg\";\r\n        banquise.detectionZone = new SphericalDetectionZone({\r\n            diameter : 200,\r\n        }, true);\r\n\r\n        const result = await Utils.loadMesh(\"models/scenes/banquise.glb\");\r\n        const rootMesh = result.meshes[0];\r\n        rootMesh.position = Vector3.Zero();\r\n        rootMesh.parent = banquiseTransform;\r\n        const childMeshes = rootMesh.getChildMeshes<Mesh>();\r\n        for (const mesh of result.meshes) {\r\n            const pbrMaterial = mesh.material as PBRMaterial;\r\n            const standardMat = mesh.material as StandardMaterial;\r\n            if(pbrMaterial){\r\n                const cellMaterial = new CellMaterial(\"banquiseMat\");\r\n                cellMaterial.needDepthPrePass = true;\r\n                cellMaterial.diffuseColor = pbrMaterial.albedoColor;\r\n                if(pbrMaterial.albedoTexture){\r\n                    cellMaterial.diffuseTexture = pbrMaterial.albedoTexture;\r\n                }\r\n                mesh.material = cellMaterial;\r\n                cellMaterial.cullBackFaces = false;\r\n\r\n            }\r\n            else if(standardMat){\r\n                const cellMaterial = new CellMaterial(\"banquiseMat\");\r\n                cellMaterial.needDepthPrePass = true;\r\n                cellMaterial.diffuseColor = standardMat.diffuseColor;\r\n                if(standardMat.diffuseTexture){\r\n                    cellMaterial.diffuseTexture = standardMat.diffuseTexture;\r\n                }\r\n                mesh.material = cellMaterial;\r\n                cellMaterial.cullBackFaces = false;\r\n            }\r\n\r\n        }\r\n        const mergedMesh = Mesh.MergeMeshes(childMeshes,true, undefined, undefined, undefined, true);\r\n        if(mergedMesh){\r\n            mergedMesh.parent = banquiseTransform;\r\n            banquise.mesh = mergedMesh;\r\n            banquiseTransform.position = this._banquisePosition;\r\n            banquiseTransform.rotate(Vector3.Up(), Angle.FromDegrees(-90).radians(), Space.WORLD);\r\n\r\n            const physicsBody = new PhysicsBody(mergedMesh, PhysicsMotionType.STATIC, false, Game.scene);\r\n            const physicsShape = new PhysicsShape({\r\n                type: PhysicsShapeType.MESH,\r\n                parameters: {\r\n                    mesh: mergedMesh,\r\n                }\r\n            }, Game.scene);\r\n            physicsBody.shape = physicsShape;\r\n\r\n            physicsBody.disablePreStep = false;\r\n            Game.scene.onBeforeRenderObservable.addOnce(() => physicsBody.disablePreStep = true);\r\n\r\n            NPCFactory.createFox().then( (fox) => {\r\n                fox.transformNode.position = new Vector3(-8, 1.4, 0);\r\n                fox.transformNode.parent = banquiseTransform;\r\n                const ball = new TempleBall(fox.transformNode.absolutePosition.add(new Vector3(0,20,0)), Color3.Green());\r\n                const callBack = fox.conversation?.onConversationEnd.add(() => {\r\n                    if(!Submarine.instance.templeBall){\r\n                        Submarine.instance.grabBall(ball);\r\n                        fox.conversation?.onConversationEnd.remove(callBack ?? null);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public static async createArchipel(){\r\n        const archipelTransform: TransformNode = new TransformNode(\"archipel transform\");\r\n        const archipel = new KeyZone();\r\n\r\n        archipel.name = \"L'Archipel Carotte\";\r\n        archipel.detectionZone = new SphericalDetectionZone({\r\n            diameter : 200,\r\n        }, true);\r\n\r\n        const result = await Utils.loadMesh(\"models/scenes/archipel.glb\");\r\n        const rootMesh = result.meshes[0];\r\n        rootMesh.position = Vector3.Zero();\r\n        rootMesh.parent = archipelTransform;\r\n        const childMeshes = rootMesh.getChildMeshes<Mesh>();\r\n        for (const mesh of result.meshes) {\r\n            const pbrMaterial = mesh.material as PBRMaterial;\r\n            const standardMat = mesh.material as StandardMaterial;\r\n            if(pbrMaterial){\r\n                const cellMaterial = new CellMaterial(\"archipelMat\");\r\n                cellMaterial.needDepthPrePass = true;\r\n                cellMaterial.diffuseColor = pbrMaterial.albedoColor;\r\n                if(pbrMaterial.albedoTexture){\r\n                    cellMaterial.diffuseTexture = pbrMaterial.albedoTexture;\r\n                }\r\n                mesh.material = cellMaterial;\r\n            }\r\n            else if(standardMat){\r\n                const cellMaterial = new CellMaterial(\"archipelMat\");\r\n                cellMaterial.needDepthPrePass = true;\r\n                cellMaterial.diffuseColor = standardMat.diffuseColor;\r\n                if(standardMat.diffuseTexture){\r\n                    cellMaterial.diffuseTexture = standardMat.diffuseTexture;\r\n                }\r\n                mesh.material = cellMaterial;\r\n            }\r\n        }\r\n        const mergedMesh = Mesh.MergeMeshes(childMeshes,true, undefined, undefined, undefined, true);\r\n        if(mergedMesh){\r\n            mergedMesh.parent = archipelTransform;\r\n            archipel.mesh = mergedMesh;\r\n            archipelTransform.position = this._archipelPosition;\r\n            archipelTransform.rotate(Vector3.Up(), Angle.FromDegrees(-90).radians(), Space.WORLD);\r\n\r\n            const physicsBody = new PhysicsBody(mergedMesh, PhysicsMotionType.STATIC, false, Game.scene);\r\n            const physicsShape = new PhysicsShape({\r\n                type: PhysicsShapeType.MESH,\r\n                parameters: {\r\n                    mesh: mergedMesh,\r\n                }\r\n            }, Game.scene);\r\n            physicsBody.shape = physicsShape;\r\n\r\n            physicsBody.disablePreStep = false;\r\n            Game.scene.onBeforeRenderObservable.addOnce(() => physicsBody.disablePreStep = true);\r\n\r\n            NPCFactory.createRabbit().then( (rabbit) => {\r\n                rabbit.transformNode.position = new Vector3(-0.8, 5.2, -0.7);\r\n                rabbit.transformNode.parent = archipelTransform;\r\n                const ball = new TempleBall(rabbit.transformNode.absolutePosition.add(new Vector3(0,20,0)), Color3.Red());\r\n                const callBack = rabbit.conversation?.onConversationEnd.add(() => {\r\n                    if(!Submarine.instance.templeBall){\r\n                        Submarine.instance.grabBall(ball);\r\n                        rabbit.conversation?.onConversationEnd.remove(callBack ?? null);\r\n                    }\r\n                });\r\n            });\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public static async createPoulpe(){\r\n        const poulpeTransform: TransformNode = new TransformNode(\"poulpe transform\");\r\n        const poulpe = new KeyZone();\r\n\r\n        poulpe.name = \"Le Poulpensant\";\r\n        poulpe.detectionZone = new SphericalDetectionZone({\r\n            diameter : 200,\r\n        }, true);\r\n\r\n        const result = await Utils.loadMesh(\"models/scenes/poulpe.glb\");\r\n        const rootMesh = result.meshes[0];\r\n        rootMesh.position = Vector3.Zero();\r\n        rootMesh.parent = poulpeTransform;\r\n        const childMeshes = rootMesh.getChildMeshes<Mesh>();\r\n        for (const mesh of result.meshes) {\r\n            const pbrMaterial = mesh.material as PBRMaterial;\r\n            const standardMat = mesh.material as StandardMaterial;\r\n            if(pbrMaterial){\r\n                const cellMaterial = new CellMaterial(\"poulpeMat\");\r\n                cellMaterial.needDepthPrePass = true;\r\n                cellMaterial.diffuseColor = pbrMaterial.albedoColor;\r\n                if(pbrMaterial.albedoTexture){\r\n                    cellMaterial.diffuseTexture = pbrMaterial.albedoTexture;\r\n                }\r\n                mesh.material = cellMaterial;\r\n            }\r\n            else if(standardMat){\r\n                const cellMaterial = new CellMaterial(\"poulpeMat\");\r\n                cellMaterial.needDepthPrePass = true;\r\n                cellMaterial.diffuseColor = standardMat.diffuseColor;\r\n                if(standardMat.diffuseTexture){\r\n                    cellMaterial.diffuseTexture = standardMat.diffuseTexture;\r\n                }\r\n                mesh.material = cellMaterial;\r\n            }\r\n\r\n        }\r\n        const mergedMesh = Mesh.MergeMeshes(childMeshes,true, undefined, undefined, undefined, true);\r\n        if(mergedMesh){\r\n            mergedMesh.parent = poulpeTransform;\r\n            poulpe.mesh = mergedMesh;\r\n            poulpeTransform.position = this._poulpePosition;\r\n\r\n            const physicsBody = new PhysicsBody(mergedMesh, PhysicsMotionType.STATIC, false, Game.scene);\r\n            const physicsShape = new PhysicsShape({\r\n                type: PhysicsShapeType.MESH,\r\n                parameters: {\r\n                    mesh: mergedMesh,\r\n                }\r\n            }, Game.scene);\r\n            physicsBody.shape = physicsShape;\r\n\r\n            physicsBody.disablePreStep = false;\r\n            Game.scene.onBeforeRenderObservable.addOnce(() => physicsBody.disablePreStep = true);\r\n\r\n            NPCFactory.createScribe().then( (scribe) => {\r\n                scribe.transformNode.position = new Vector3(-1.57, 0.8, 5.8);\r\n                scribe.transformNode.parent = poulpeTransform;\r\n                const ball = new TempleBall(scribe.transformNode.absolutePosition.add(new Vector3(0,20,0)), Color3.Purple());\r\n                const callBack = scribe.conversation?.onConversationEnd.add(() => {\r\n                    if(!Submarine.instance.templeBall){\r\n                        Submarine.instance.grabBall(ball);\r\n                        scribe.conversation?.onConversationEnd.remove(callBack ?? null);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public static async createPhare(){\r\n        const phareTransform: TransformNode = new TransformNode(\"phare transform\");\r\n        const phare = new KeyZone();\r\n\r\n        phare.name = \"Le Phare Flashouille\";\r\n        phare.detectionZone = new SphericalDetectionZone({\r\n            diameter : 200,\r\n        }, true);\r\n\r\n        const result = await Utils.loadMesh(\"models/scenes/phare.glb\");\r\n        const rootMesh = result.meshes[0];\r\n        rootMesh.position = Vector3.Zero();\r\n        rootMesh.parent = phareTransform;\r\n        const childMeshes = rootMesh.getChildMeshes<Mesh>();\r\n        for (const mesh of result.meshes) {\r\n            const pbrMaterial = mesh.material as PBRMaterial;\r\n            const standardMat = mesh.material as StandardMaterial;\r\n            if(pbrMaterial){\r\n                const cellMaterial = new CellMaterial(\"phareMat\");\r\n                cellMaterial.needDepthPrePass = true;\r\n                cellMaterial.diffuseColor = pbrMaterial.albedoColor;\r\n                if(pbrMaterial.albedoTexture){\r\n                    cellMaterial.diffuseTexture = pbrMaterial.albedoTexture;\r\n                }\r\n                mesh.material = cellMaterial;\r\n            }\r\n            else if(standardMat){\r\n                const cellMaterial = new CellMaterial(\"phareMat\");\r\n                cellMaterial.needDepthPrePass = true;\r\n                cellMaterial.diffuseColor = standardMat.diffuseColor;\r\n                if(standardMat.diffuseTexture){\r\n                    cellMaterial.diffuseTexture = standardMat.diffuseTexture;\r\n                }\r\n                mesh.material = cellMaterial;\r\n            }\r\n        }\r\n        const mergedMesh = Mesh.MergeMeshes(childMeshes,true, undefined, undefined, undefined, true);\r\n        if(mergedMesh){\r\n            mergedMesh.parent = phareTransform;\r\n            phare.mesh = mergedMesh;\r\n            phareTransform.position = this._pharePosition;\r\n            //phareTransform.rotate(Vector3.Up(), Angle.FromDegrees(180).radians(), Space.WORLD);\r\n\r\n            const physicsBody = new PhysicsBody(mergedMesh, PhysicsMotionType.STATIC, false, Game.scene);\r\n            const physicsShape = new PhysicsShape({\r\n                type: PhysicsShapeType.MESH,\r\n                parameters: {\r\n                    mesh: mergedMesh,\r\n                }\r\n            }, Game.scene);\r\n            physicsBody.shape = physicsShape;\r\n\r\n            physicsBody.disablePreStep = false;\r\n            Game.scene.onBeforeRenderObservable.addOnce(() => physicsBody.disablePreStep = true);\r\n\r\n            NPCFactory.createGirl().then( (girl) => {\r\n                girl.transformNode.position = new Vector3(1.2, 1.26, -16.90);\r\n                girl.transformNode.parent = phareTransform;\r\n                const ball = new TempleBall(girl.transformNode.absolutePosition.add(new Vector3(0,20,0)), Color3.Blue());\r\n                const callBack = girl.conversation?.onConversationEnd.add(() => {\r\n                    if(!Submarine.instance.templeBall){\r\n                        Submarine.instance.grabBall(ball);\r\n                        girl.conversation?.onConversationEnd.remove(callBack ?? null);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n}","import {Sea} from \"@/YellowSubmarine/Sea\";\r\nimport {Submarine} from \"@/YellowSubmarine/Submarine\";\r\nimport {Sky} from \"@/YellowSubmarine/sky system/Sky\";\r\nimport {KeyZoneFactory} from \"@/YellowSubmarine/keyzone system/KeyZoneFactory\";\r\nexport class World {\r\n    private _sky: Sky;\r\n\r\n    public get submarine(): Submarine{\r\n        return this._submarine;\r\n    }\r\n\r\n    public static get submarine(): Submarine {\r\n        return this.instance.submarine;\r\n    }\r\n\r\n    private static get instance(): World {\r\n        return this._instance;\r\n    }\r\n\r\n    private static _instance: World;\r\n\r\n    private _sea: Sea;\r\n    private _submarine: Submarine;\r\n\r\n    constructor() {\r\n        World._instance = this;\r\n        this._sea = new Sea();\r\n        this._submarine = new Submarine();\r\n        this._sky = new Sky();\r\n\r\n    }\r\n\r\n    public async init(): Promise<void> {\r\n\r\n        await Promise.all([\r\n            KeyZoneFactory.createDolphinIsland(),\r\n            KeyZoneFactory.createTemple(),\r\n            KeyZoneFactory.createBanquise(),\r\n            KeyZoneFactory.createPhare(),\r\n            KeyZoneFactory.createPoulpe(),\r\n            KeyZoneFactory.createArchipel()\r\n        ]);\r\n    }\r\n\r\n\r\n}","import {WorldInteraction} from \"@/YellowSubmarine/interaction system/interactions/WorldInteraction\";\r\nimport {UI} from \"@/YellowSubmarine/ui system/UI\";\r\nimport {Control, Rectangle, TextBlock} from \"@babylonjs/gui\";\r\nimport {InteractionManager} from \"@/YellowSubmarine/interaction system/InteractionManager\";\r\n\r\nexport class WorldInteractionUI extends UI{\r\n\r\n    private _container: Rectangle;\r\n\r\n    constructor() {\r\n        super();\r\n        this._container = new Rectangle();\r\n        this._container.width = \"300px\";\r\n        this._container.height = \"200px\";\r\n        this._container.thickness = 0;\r\n        this._container.scaleY = 0.5;\r\n        this._container.scaleX = 0.5;\r\n\r\n        InteractionManager.instance.onInteractionAvailable.add((interaction) => {\r\n            if(interaction instanceof WorldInteraction) {\r\n                this.show(interaction);\r\n            }\r\n        });\r\n        InteractionManager.instance.onInteractionUnavailable.add((interaction) => {\r\n            if(interaction instanceof WorldInteraction) {\r\n                this.hide();\r\n            }\r\n        });\r\n    }\r\n\r\n    public get controlNode(): Control {\r\n        return this._container;\r\n    }\r\n\r\n    private show(interaction: WorldInteraction): void {\r\n        this._container.isVisible = true;\r\n\r\n        const rec1 = new Rectangle();\r\n        rec1.width = \"280px\";\r\n        rec1.height = \"100px\";\r\n        rec1.cornerRadius = 60;\r\n        rec1.color = \"rgb(168, 98, 68)\";\r\n        rec1.thickness = 4;\r\n        rec1.background = \"rgb(255, 199, 130)\";\r\n        this._container.addControl(rec1);\r\n\r\n        const label1 = new TextBlock();\r\n        label1.fontSize = 45;\r\n        label1.text = `${interaction.description}`;\r\n        rec1.addControl(label1);\r\n\r\n        // Deuxième rectangle avec son label\r\n        const rec2 = new Rectangle();\r\n        rec2.width = \"100px\";\r\n        rec2.height = \"85px\";\r\n        rec2.cornerRadius = 60;\r\n        rec2.color = \"rgb(168, 98, 68)\";\r\n        rec2.thickness = 4;\r\n        rec2.background = \"rgb(255, 255, 255)\";\r\n        rec2.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_RIGHT;\r\n        rec2.verticalAlignment = Control.VERTICAL_ALIGNMENT_BOTTOM;\r\n        this._container.addControl(rec2);\r\n\r\n        const label2 = new TextBlock();\r\n        label2.fontSize = 60;\r\n        label2.text = `${interaction.simplifiedCode}`;\r\n        label2.fontWeight = \"bold\";\r\n        label2.paddingTop = \"6px\";\r\n        rec2.addControl(label2);\r\n\r\n\r\n        this._container.linkWithMesh(interaction.mesh ?? null);\r\n        this._container.linkOffsetY = \"-140px\";\r\n\r\n    }\r\n\r\n    private hide() {\r\n        this._container.isVisible = false;\r\n        this._container.linkWithMesh(null);\r\n    }\r\n}","import {UI} from \"@/YellowSubmarine/ui system/UI\";\r\nimport {Control, TextBlock} from \"@babylonjs/gui\";\r\nimport {KeyZone} from \"@/YellowSubmarine/keyzone system/KeyZone\";\r\n\r\nexport class IslandsUI extends UI{\r\n\r\n    private _textBlock: TextBlock;\r\n\r\n    get controlNode(): Control {\r\n        return this._textBlock;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this._textBlock = new TextBlock();\r\n        KeyZone.onAnyKeyZoneEntered.add((keyzone) => this.show(keyzone))\r\n    }\r\n\r\n    public show(keyzone: KeyZone) {\r\n\r\n        this._textBlock.isVisible = true;\r\n        this._textBlock.text = keyzone.name;\r\n\r\n        if(keyzone.discovered) {\r\n            this._textBlock.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n            this._textBlock.verticalAlignment = Control.VERTICAL_ALIGNMENT_BOTTOM;\r\n            this._textBlock.paddingLeft = \"20px\";\r\n            this._textBlock.paddingBottom = \"20px\";\r\n            this._textBlock.color = \"white\";\r\n            this._textBlock.fontSize = \"24px\";\r\n            this._textBlock.textHorizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n\r\n        } else {\r\n            this._textBlock.color = \"white\";\r\n            this._textBlock.fontSize = \"48px\";\r\n            this._textBlock.fontStyle = \"bold\";\r\n            this._textBlock.textHorizontalAlignment = Control.HORIZONTAL_ALIGNMENT_CENTER;\r\n            this._textBlock.textVerticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\r\n            this._textBlock.paddingTop = \"30px\";\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this._textBlock.isVisible = false;\r\n        }, 3000);\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { UI } from \"@/YellowSubmarine/ui system/UI\";\r\nimport { Button, Control, Slider, StackPanel, TextBlock, Rectangle, Grid } from \"@babylonjs/gui\";\r\nimport { MainMenuUI } from \"@/YellowSubmarine/ui system/MainMenuUI\";\r\nimport { Game } from \"@/YellowSubmarine/Game\";\r\nimport { KeyboardEventTypes } from \"@babylonjs/core\";\r\nimport { SoundManager } from \"@/YellowSubmarine/sound system/SoundManager\";\r\n\r\nexport class OptionsMenuUI extends UI {\r\n\r\n    private _panel: StackPanel;\r\n\r\n    get controlNode(): Control {\r\n        return this._panel;\r\n    }\r\n\r\n    constructor(private _mainMenu: MainMenuUI) {\r\n        super();\r\n        this._panel = new StackPanel();\r\n        this._panel.width = \"600px\";\r\n        this._panel.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n        this._panel.verticalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\r\n        this._panel.spacing = 15;\r\n        this._panel.paddingLeft = \"60px\";\r\n        this.createSliderWithLabel(\"Volume SFX\", SoundManager.instance.SFXVolume, (value) => {\r\n            SoundManager.instance.SFXVolume = value;\r\n        });\r\n\r\n        this.createSliderWithLabel(\"Volume Musique\", SoundManager.instance.MUSICVolume, (value) => {\r\n            SoundManager.instance.MUSICVolume = value;\r\n        });\r\n\r\n        this.createSliderWithLabel(\"Volume UI\", SoundManager.instance.UIVolume, (value) => {\r\n            SoundManager.instance.UIVolume = value;\r\n        });\r\n\r\n        const backButton = MainMenuUI.createButton(\"Retour\", () => {\r\n            this.hide();\r\n        });\r\n        backButton.width = \"300px\";\r\n        backButton.height = \"40px\";\r\n        backButton.color = \"white\";\r\n        backButton.background = \"rgba(255, 255, 255, 0.05)\";\r\n        this._panel.addControl(backButton);\r\n\r\n        this._panel.isVisible = false;\r\n\r\n        Game.scene.onKeyboardObservable.add((eventData) => {\r\n            const state = eventData.type === KeyboardEventTypes.KEYDOWN;\r\n            if (eventData.event.key === \"Escape\" && state && this.controlNode.isVisible) {\r\n                this.hide();\r\n            }\r\n        });\r\n    }\r\n\r\n    private createSliderWithLabel(labelText: string, initialValue: number, onChange: (value: number) => void) {\r\n        const container = new StackPanel();\r\n        container.isVertical = false;\r\n        container.height = \"40px\";\r\n        container.paddingBottom = \"10px\";\r\n        container.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_CENTER;\r\n        container.verticalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\r\n\r\n        const label = new TextBlock();\r\n        label.text = labelText;\r\n        label.color = \"white\";\r\n        label.width = \"120px\";\r\n        label.fontSize = 14;\r\n        label.fontStyle = \"bold\";\r\n        label.textHorizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n        label.paddingRight = \"10px\";\r\n\r\n        const slider = new Slider();\r\n        slider.minimum = 0;\r\n        slider.maximum = 1;\r\n        slider.value = initialValue;\r\n        slider.width = \"150px\";\r\n        slider.height = \"14px\";\r\n        slider.color = \"#FFF\";\r\n        slider.background = \"#333\";\r\n        slider.thumbWidth = \"18px\";\r\n        slider.thumbColor = \"#AAA\";\r\n        slider.borderColor = \"#888\";\r\n\r\n        const valueLabel = new TextBlock();\r\n        valueLabel.text = Math.round(initialValue * 100).toString() + \" %\";\r\n        valueLabel.width = \"50px\";\r\n        valueLabel.color = \"white\";\r\n        valueLabel.fontSize = 14;\r\n        valueLabel.textHorizontalAlignment = Control.HORIZONTAL_ALIGNMENT_RIGHT;\r\n        valueLabel.paddingLeft = \"10px\";\r\n\r\n        slider.onValueChangedObservable.add((value) => {\r\n            valueLabel.text = Math.round(value * 100).toString() + \" %\";\r\n            onChange(value);\r\n        });\r\n\r\n        container.addControl(label);\r\n        container.addControl(slider);\r\n        container.addControl(valueLabel);\r\n\r\n        this._panel.addControl(container);\r\n    }\r\n\r\n    public show() {\r\n        this._panel.isVisible = true;\r\n    }\r\n\r\n    public hide() {\r\n        this._panel.isVisible = false;\r\n        this._mainMenu.show();\r\n    }\r\n}","import {UI} from \"@/YellowSubmarine/ui system/UI\";\r\nimport {\r\n    Button,\r\n    Control,\r\n    StackPanel,\r\n    TextBlock\r\n} from \"@babylonjs/gui\";\r\nimport {Game} from \"@/YellowSubmarine/Game\";\r\nimport {KeyboardEventTypes} from \"@babylonjs/core\";\r\nimport {OptionsMenuUI} from \"@/YellowSubmarine/ui system/OptionsMenuUI\";\r\n\r\nexport class MainMenuUI extends UI {\r\n\r\n    private _panel: StackPanel;\r\n    private _optionMenuUI : OptionsMenuUI;\r\n    private _canvas?: HTMLCanvasElement;\r\n\r\n    public set canvas(canvas : HTMLCanvasElement) {\r\n        this._canvas = canvas;\r\n    }\r\n\r\n    public get controlNode(): Control {\r\n        return this._panel;\r\n    }\r\n\r\n    public get optionsMenuUI(): OptionsMenuUI {\r\n        return this._optionMenuUI;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this._optionMenuUI = new OptionsMenuUI(this);\r\n        this._panel = new StackPanel();\r\n        this._panel.width = \"300px\";\r\n        this._panel.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n        this._panel.verticalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\r\n        this._panel.paddingLeft = \"60px\";\r\n        this._panel.spacing = 20;\r\n\r\n        const playButton = MainMenuUI.createButton(\"Jouer\", () => this.onPlayPressed());\r\n        const optionsButton = MainMenuUI.createButton(\"Options\", () => this.onOptionsPressed());\r\n        const quitButton = MainMenuUI.createButton(\"Quitter\", () => this.onQuitPressed());\r\n\r\n        this._panel.addControl(playButton);\r\n        this._panel.addControl(optionsButton);\r\n        //this._panel.addControl(quitButton);\r\n\r\n        this.show();\r\n\r\n        Game.scene.onKeyboardObservable.add((eventData) => {\r\n            const state = eventData.type === KeyboardEventTypes.KEYDOWN;\r\n            if(eventData.event.key === \"Escape\" && state && !this.optionsMenuUI.controlNode.isVisible){\r\n                if(this._canvas)\r\n                    this._panel.isVisible ? this.onPlayPressed() : this.show();\r\n            }\r\n        });\r\n    }\r\n\r\n    public static createButton(text: string, callback: () => void): Button {\r\n        const button = Button.CreateSimpleButton(text.toLowerCase(), text);\r\n        button.width = \"100%\";\r\n        button.height = \"60px\";\r\n        button.color = \"white\";\r\n        button.background = \"rgba(255, 255, 255, 0.05)\";\r\n        button.fontSize = \"28px\";\r\n        button.fontStyle = \"bold\";\r\n        button.textBlock!.textHorizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n        button.textBlock!.paddingLeft = \"20px\";\r\n        button.cornerRadius = 10;\r\n        button.thickness = 1;\r\n        button.paddingBottom = \"10px\";\r\n\r\n        button.onPointerEnterObservable.add(() => {\r\n            button.background = \"rgba(255, 255, 255, 0.2)\";\r\n        });\r\n        button.onPointerOutObservable.add(() => {\r\n            button.background = \"rgba(255, 255, 255, 0.05)\";\r\n        });\r\n\r\n        button.onPointerUpObservable.add(callback);\r\n        return button;\r\n    }\r\n\r\n    public show() {\r\n        this._panel.isVisible = true;\r\n    }\r\n\r\n    public hide() {\r\n        this._panel.isVisible = false;\r\n    }\r\n\r\n    private onPlayPressed() {\r\n        if(this._canvas) {\r\n            this._canvas.requestPointerLock();\r\n            this.hide();\r\n        }\r\n    }\r\n\r\n    private onOptionsPressed() {\r\n        this._optionMenuUI.show();\r\n        this.hide();\r\n    }\r\n\r\n    private onQuitPressed() {\r\n        console.log(\"Quitter !\");\r\n    }\r\n}","import {AdvancedDynamicTexture} from \"@babylonjs/gui\";\r\nimport {Game} from \"@/YellowSubmarine/Game\";\r\nimport {DialogueInteractionUI} from \"@/YellowSubmarine/interaction system/ui/DialogueInteractionUI\";\r\nimport {WorldInteractionUI} from \"@/YellowSubmarine/interaction system/ui/WorldInteractionUI\";\r\nimport {IslandsUI} from \"@/YellowSubmarine/interaction system/ui/IslandsUI\";\r\nimport {MainMenuUI} from \"@/YellowSubmarine/ui system/MainMenuUI\";\r\nimport {OptionsMenuUI} from \"@/YellowSubmarine/ui system/OptionsMenuUI\";\r\nimport {QuestUI} from \"@/YellowSubmarine/quest system/ui/QuestUI\";\r\nimport {JournalUI} from \"@/YellowSubmarine/quest system/ui/JournalUI\";\r\n\r\n\r\nexport class UIManager {\r\n\r\n    private _ui = AdvancedDynamicTexture.CreateFullscreenUI(\"_ui\", undefined, Game.scene);\r\n\r\n    private _worldInteractionUI: WorldInteractionUI = new WorldInteractionUI();\r\n    private _dialogueInteractionUI: DialogueInteractionUI = new DialogueInteractionUI();\r\n    private _islandsUI: IslandsUI = new IslandsUI();\r\n    private _mainMenuUI: MainMenuUI;\r\n    private _optionsMenuUI;\r\n    private _questUI: QuestUI = new QuestUI();\r\n    private _journalUI: JournalUI = new JournalUI();\r\n\r\n\r\n    constructor(private _canvas: HTMLCanvasElement) {\r\n        this._ui.addControl(this._worldInteractionUI.controlNode);\r\n        this._ui.addControl(this._dialogueInteractionUI.controlNode);\r\n        this._ui.addControl(this._islandsUI.controlNode);\r\n        this._mainMenuUI = new MainMenuUI();\r\n        this._optionsMenuUI = this._mainMenuUI.optionsMenuUI;\r\n        this._ui.addControl(this._optionsMenuUI.controlNode);\r\n        this._ui.addControl(this._mainMenuUI.controlNode);\r\n        this._mainMenuUI.canvas = _canvas;\r\n        this._ui.addControl(this._questUI.controlNode);\r\n        this._ui.addControl(this._journalUI.controlNode);\r\n    }\r\n\r\n    public showMainMenu(): void {\r\n        if(this._mainMenuUI)\r\n            this._mainMenuUI.show();\r\n    }\r\n}","import {World} from \"@/YellowSubmarine/World\";\r\nimport {Engine, HavokPlugin, Observable, Scene, Vector3} from \"@babylonjs/core\";\r\nimport {Player} from \"@/YellowSubmarine/Player\";\r\nimport {ConfigurableCamera} from \"@/YellowSubmarine/camera system/ConfigurableCamera\";\r\nimport {InteractionManager} from \"@/YellowSubmarine/interaction system/InteractionManager\";\r\nimport {UIManager} from \"@/YellowSubmarine/ui system/UIManager\";\r\nimport {SoundManager} from \"@/YellowSubmarine/sound system/SoundManager\";\r\nimport {QuestManager} from \"@/YellowSubmarine/quest system/QuestManager\";\r\n\r\nexport class Game{\r\n\r\n    private static _instance: Game;\r\n\r\n    public static onGameFocusChange: Observable<boolean> = new Observable<boolean>();\r\n\r\n    private _scene: Scene;\r\n    private _engine: Engine;\r\n    private _world: World;\r\n    private _player!: Player;\r\n    private _isGameFocused = false;\r\n    private _camera: ConfigurableCamera;\r\n    private _interactionManager: InteractionManager;\r\n    private _uiManager!: UIManager;\r\n    private _soundManager!: SoundManager;\r\n    private _questManager!: QuestManager;\r\n\r\n    public static get canvas(){\r\n        return this._instance._canvas;\r\n    }\r\n\r\n    public static get engine(): Engine {\r\n        return Game._instance._engine;\r\n    }\r\n\r\n    public static get scene(): Scene {\r\n        return Game._instance._scene;\r\n    }\r\n\r\n    public static get uiManager(): UIManager {\r\n        return Game._instance._uiManager;\r\n    }\r\n\r\n    public static get isGameFocused(): boolean {\r\n        return Game._instance._isGameFocused;\r\n    }\r\n\r\n    public async init(): Promise<void> {\r\n        await this._world.init();\r\n        this._player = new Player();\r\n        this._soundManager = new SoundManager();\r\n        this._uiManager = new UIManager(this._canvas);\r\n        this._questManager = new QuestManager();\r\n    }\r\n\r\n\r\n    constructor(private _canvas: HTMLCanvasElement, private _havok: HavokPlugin) {\r\n        Game._instance = this;\r\n\r\n        this._engine = new Engine(this._canvas);\r\n        this._scene = new Scene(this._engine);\r\n        this._scene.enablePhysics(new Vector3(0,-9.81,0), _havok);\r\n        this._interactionManager = new InteractionManager();\r\n        this._camera = new ConfigurableCamera();\r\n        this._world = new World();\r\n\r\n\r\n        document.addEventListener(\"pointerlockchange\", () => {\r\n            this.updateFocusState(document.pointerLockElement === _canvas);\r\n        });\r\n\r\n        this._engine.runRenderLoop(() => {\r\n            this._scene.render();\r\n        })\r\n        window.addEventListener(\"resize\", () => this._engine.resize());\r\n    }\r\n\r\n    private updateFocusState(state: boolean) {\r\n        if(state != this._isGameFocused){\r\n            this._isGameFocused = state;\r\n            Game.onGameFocusChange.notifyObservers(this._isGameFocused);\r\n            if (!this._isGameFocused) {\r\n                Game.uiManager.showMainMenu();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { render } from \"./YellowSubmarine.vue?vue&type=template&id=0b58695c&scoped=true&ts=true\"\nimport script from \"./YellowSubmarine.vue?vue&type=script&lang=ts\"\nexport * from \"./YellowSubmarine.vue?vue&type=script&lang=ts\"\n\nimport \"./YellowSubmarine.vue?vue&type=style&index=0&id=0b58695c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0b58695c\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=091a8ae3&ts=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=091a8ae3&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/YellowSubmarine/\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkyellow_submarine\"] = self[\"webpackChunkyellow_submarine\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(57144); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_YellowSubmarine","_hoisted_1","_hoisted_2","class","id","isFadingOut","src","getLogoSrc","alt","loadingText","letter","index","key","style","isLoading","this","_bodyMesh","createBody","Game","scene","_haloMesh","createHalo","_light","createLight","configMaterials","body","CreateSphere","diameter","_diameter","segments","infiniteDistance","isPickable","position","_defaultPosition","halo","direction","activeCamera","subtract","normalize","light","negate","intensity","_intensity","shadowEnabled","parent","diffuse","_diffuse","specular","_specular","glowLayer","bodyMaterial","emissiveColor","_emissiveColor","diffuseColor","specularColor","material","haloMaterial","alpha","bodyMesh","_hemiLight","createHemiLight","Up","isEnabled","shadowGenerator","useBlurExponentialShadowMap","blurKernel","onBeforeRenderObservable","add","dir","absolutePosition","Zero","CelestialBody","HemisphericCelestialBody","SkyBox","_instance","_mesh","CreateBox","size","_shaderMaterial","vertex","fragment","attributes","uniforms","samplers","setFloat","Sky","instance","dayNightCycle","timeOfTheDay","_daySkyboxTexture","CreateFromImages","coordinatesMode","SKYBOX_MODE","_nightSkyboxTexture","setTexture","backFaceCulling","setColor3","sky","_sun","sun","_moon","moon","_time","engine","getDeltaTime","updateBody","updateLight","updateMoonLight","time","sunAngle","Math","PI","moonAngle","sunRadius","length","moonRadius","inclination","sunX","cos","sunY","sin","sunZ","moonInclination","moonX","moonY","moonZ","sunPos","sunHeight","y","normalized","max","min","smooth","pow","setEnabled","sunsetColor","FromHexString","Lerp","White","hemi","hemiLight","dayColor","nightColor","ambientColor","moonPos","moonHeight","deepNightColor","Sun","Moon","_skybox","_dayNightCycle","DayNightCycle","value","ReflectiveToonWaterMaterial","_scene","_material","shaderMaterialName","needAlphaTesting","_depthRenderer","enableDepthRenderer","undefined","_depthMap","getDepthMap","_renderListPredicate","m","renderListPredicate","setVector4","setVector2","window","innerWidth","innerHeight","addEventListener","mirrorTexture","mirrorPlane","FromPositionAndNormal","Down","customRenderTargets","push","_geometryBufferRenderer","enableGeometryBufferRenderer","enableNormal","_gBuffer","getGBuffer","cameraNormalTexture","textures","NORMAL_TEXTURE_TYPE","Sea","_seaMesh","CreateGround","width","height","subdivisions","_invisiblePlane","_invisiblePlaneBody","STATIC","_invisiblePlaneShape","type","BOX","parameters","mesh","extents","shape","setMassProperties","mass","ConfigurableCamera","_arcRotateCamera","deltaTimeInSeconds","update","_cameraConfiguration","cameraParameter","oldCameraParameter","jumpToTarget","deltaTimeInSec","updatePosition","updateRotation","target","targetPosition","wantedAlpha","beta","wantedBeta","radius","distanceFromTarget","_positionLerpFactor","lowerRadiusLimit","upperRadiusLimit","FromDegrees","LerpAngle","FromRadians","degrees","_rotationLerpFactor","radians","_target","_offset","rotateByQuaternionToRef","absoluteRotationQuaternion","Identity","offset","_wantedAlpha","_wantedBeta","_currentLowerBetaLimit","_currentUpperBetaLimit","_distanceFromTarget","InteractionManager","onInteractionAvailable","onInteractionUnavailable","Player","onPlayerPressedAKey","eventData","KEYDOWN","_currentInteraction","event","code","executeInteraction","interaction","makeInteractionUnavailable","notifyObservers","simplifiedCode","_code","_simplifiedCode","makeInteractionAvailable","AbstractInteraction","path","options","ms","Promise","resolve","setTimeout","param","italic","BBTag","bold","color","newStyle","parsedSize","parseInt","isNaN","Map","initRegistry","_registry","set","ItalicTag","BoldTag","ColorTag","SizeTag","input","match","tagStack","styleStack","cursor","currentStyle","regex","exec","full","name","isClosing","startsWith","idx","text","slice","last","pop","previousStyle","TagClass","get","tagInstance","onOpen","ctx","defaultFontSize","horizontalPadding","parser","BBParser","maxWidth","parseBBCode","map","s","lines","splitLines","fontSize","font","measureText","currentLine","currentWidth","segment","segWidth","getTextWidth","parts","split","part","trim","partWidth","lineHeight","textBlockHorizontalPadding","blocks","linesPanels","forEach","lineSegments","row","isVertical","horizontalAlignment","HORIZONTAL_ALIGNMENT_CENTER","verticalAlignment","VERTICAL_ALIGNMENT_BOTTOM","tb","applyStyle","textWrapping","resizeToFit","addControl","padding","fontWeight","fontStyle","paddingLeft","paddingRight","_advanceRequested","speed","skipped","i","Utils","sleep","initContainer","initStack","initTriangle","_layoutManager","TextLayoutManager","canvas","document","createElement","getContext","TEXT_DEFAULT_FONT_SIZE","TEXT_BLOCK_HORIZONTAL_PADDING","_textAnimator","TextAnimator","Conversation","onAnyConversationStart","conv","_container","isVisible","conversationProvider","linkWithMesh","linkOffsetY","CONTAINER_OFFSET_Y","onAnyConversationEnd","_stopBlink","onAnyDialogueStart","dialog","showText","TEXT_SPEED","_isTextFullyDisplayed","CONTAINER_WIDTH","cornerRadius","CONTAINER_CORNER_RADIUS","thickness","CONTAINER_THICKNESS","CONTAINER_COLOR","background","CONTAINER_BACKGROUND","TEXT_PADDING","_verticalStack","paddingBottom","_triangle","TRIANGLE_IMAGE_PATH","TRIANGLE_SIZE","HORIZONTAL_ALIGNMENT_RIGHT","DialogueInteractionUI","resetAdvance","clearControls","advanceObserver","onAdvanceDialogueRequested","requestAdvance","canvasWidth","querySelector","clientWidth","containerPixelWidth","layout","maxFontSize","TEXT_LINE_SPACING","createTextBlocks","linePanel","contentHeight","totalHeight","TEXT_EXTRA_CONTAINER_MARGIN","animateBlocks","advanceRequested","b","remove","_startBlink","isTextFullyDisplayed","TRIANGLE_BLINK_INTERVAL","UI","_conversation","next","DialogueInteraction","NextDialogueInteraction","_conversationProvider","_rootNode","_onEnding","node","_currentNode","execute","onDialogueStart","root","onConversationStart","enterNode","_nextInteraction","makeAvailable","cameraConfiguration","nextNode","endConversation","makeUnavailable","onConversationEnd","playerCameraConfiguration","initializeCameraParameter","registerKeyboardInputs","registerMouseMovementInputs","disableMovement","enableMovement","_onCameraRotationObservable","_onPlayerPressedAKey","_playerCameraConfiguration","_isForwardPressed","_isMovementEnabled","_isBackwardPressed","_isLeftPressed","_isRightPressed","onKeyboardObservable","isGameFocused","state","onPointerObservable","pointerInfo","movementX","screen","movementY","updateCameraParameter","Submarine","meshCreationPromise","then","currentLowerBetaLimit","currentUpperBetaLimit","_horizontalCameraSensitivity","_verticalCameraSensitivity","CameraConfiguration","_nodeMaterialPromise","ParseFromFileAsync","nodeMaterial","_nodeMaterial","maxSimultaneousLights","saturationMultiplier","build","getBlockByName","numberOfSteps","luminanceEasingFactor","indexOfRefraction","albedoColor","albedoTexture","texture","opacity","metallic","metallicTexture","roughness","roughnessTexture","emission","emissionColor","emissionTexture","transparencyMode","pbrMaterial","emissiveIntensity","emissiveTexture","needDepthPrePass","cullBackFaces","alphaMode","disableDepthWrite","disableColorWrite","forceDepthWrite","depthFunction","Grappler","updateGrappledObject","object","_currentGrappledObject","_grapplerLength","_owner","submarine","_localOffsetWithSubmarine","positionWithOffset","getObjectCenterWorld","transformNode","grappledObjectPosition","physicsBody","fromGrapplerToObject","distance","pullingDirection","normalizeToNew","scale","applyForce","_pullingForce","SoundManager","_SFXVolume","_UIVolume","_MUSICVolume","headphone","_audioEngine","unlockAsync","listener","onReadyObservable","playSFX","loop","autoplay","playMUSIC","url","volume","sound","Started","fadeIn","play","load","spatialSound","spatial","attach","maxDistance","distanceModel","console","log","_SFXsounds","SFXVolume","_UIsounds","UIVolume","_MUSICsounds","MUSICVolume","targetVolume","duration","stepTime","steps","currentStep","interval","setInterval","clearInterval","initialVolume","stop","fadeOutAndStop","_grappler","createMesh","owner","_spotLight","createSpotlight","addVolumetricLight","mapLimit","_physicsAggregate","pos","clone","x","z","setLinearVelocity","getLinearVelocity","copyFrom","keysDown","Set","has","KEYUP","delete","stopSFX","grappledObject","ball","grappleObject","letGoOfObject","ImportMeshAsync","result","rootMesh","meshes","childMeshes","getChildMeshes","mat","CartoonShaderMaterial","assignMaterial","configureFromPBRMaterial","mergedMesh","MergeMeshes","friction","restitution","setMotionType","DYNAMIC","inertia","centerOfMass","setLinearDamping","setAngularDamping","getCollisionObservable","receiveShadows","spotLight","enabled","camera","lightEmitter","vl","exposure","decay","weight","density","updateRotationSpeed","updateMovementSpeed","isForwardPressed","isBackwardPressed","forward","_movementForce","isRightPressed","isLeftPressed","right","_rotationForce","isMoveForwardPressed","isMoveBackwardPressed","isTurnRightPressed","isTurnLeftPressed","_name","_discovered","_detectionZone","detectionZone","onMeshEnter","KeyZone","onAnyKeyZoneEntered","discovered","_disabled","zone","World","addMeshToDetect","physicsAggregate","debug","_zone","visibility","_meshToDetect","onMeshExit","checkAll","intersectsMesh","checkDetection","MeshDetectionZone","startConversation","WorldInteraction","_transformNode","_playerDetectionZone","setSignals","conversation","_startConversationInteraction","StartConversationInteraction","isInZone","isInProgress","CreateCylinder","_text","_nextNode","AbstractDialogueNode","SimpleDialogueNode","current","say","onEnding","QuestUI","_panel","VERTICAL_ALIGNMENT_TOP","paddingTop","spacing","activeQuests","QuestManager","getAllActiveQuests","quest","container","titleText","textHorizontalAlignment","HORIZONTAL_ALIGNMENT_LEFT","stepText","currentStepIndex","description","createSeparator","separator","_id","_state","_currentStepIndex","_steps","refresh","stopQuest","validate","condition","_socle","templeBall","currentBall","letGoOfBall","grabBall","placeBall","_ballTransformNode","_placeTempleBallInteraction","PlaceTempleBallInteraction","_removeTempleBallInteraction","RemoveTempleBallInteraction","_socleDetectionZone","SphericalDetectionZone","meshImportedPromise","physicsShape","MESH","_currentBall","_lockConstraint","addConstraint","socle","dispose","_validColor","_grabbableObject","TemplePuzzle","registerBall","onPlacedOnSocle","TempleBall","onAnyBallPlacedOnAnySocle","_physicsShape","SPHERE","cellMaterial","_physicsBody","_grappleInteraction","GrappleInteraction","hasAnObjectGrappled","rotation","_upperRightSocle","createSocle","_middleRightSocle","Purple","_lowerRightSocle","Blue","_lowerMiddleSocle","Green","_lowerLeftSocle","Red","_middleLeftSocle","_upperLeftSocle","Gray","_upperMiddleSocle","Yellow","_centerSocle","grayBall","yellowBall","_ball","onBallPlacedOnSocle","validColor","Socle","isAllBallPlacedOnASocle","checkConfiguration","onPuzzleResolved","onPuzzleRejected","numberOfPlaced","socleValidColor","equals","Array","quests","QuestFactory","createTalkToPedro","createTempleQuest","Quest","QuestStep","createAll","nextStep","getQuest","startQuest","find","VERTICAL_ALIGNMENT_CENTER","hide","show","JournalUI","_journalEntry","questGrid","addColumnDefinition","textVerticalAlignment","line","entry","includes","pedro","NPC","loadMesh","CylindricalDetectionZone","diameterTop","diameterBottom","ConversationBuilder","setOnEnding","addEntryToQuest","updateCurrentStepStatus","fox","scientific","scribe","rabbit","steleInteractionZone","_steleInteractionZone","conversationBuilder","_transformIsland","island","_dolphinPosition","disablePreStep","addOnce","NPCFactory","createPedro","templeTransform","temple","_templePosition","rotate","WORLD","stele","Stele","aggregate","banquiseTransform","banquise","standardMat","diffuseTexture","_banquisePosition","createFox","callBack","archipelTransform","archipel","_archipelPosition","createRabbit","poulpeTransform","poulpe","_poulpePosition","createScribe","phareTransform","phare","_pharePosition","createGirl","girl","_sea","_submarine","_sky","all","KeyZoneFactory","createDolphinIsland","createTemple","createBanquise","createPhare","createPoulpe","createArchipel","scaleY","scaleX","rec1","label1","rec2","label2","_textBlock","keyzone","_mainMenu","createSliderWithLabel","backButton","MainMenuUI","createButton","controlNode","labelText","initialValue","onChange","label","slider","minimum","maximum","thumbWidth","thumbColor","borderColor","valueLabel","round","toString","onValueChangedObservable","_optionMenuUI","OptionsMenuUI","playButton","onPlayPressed","optionsButton","onOptionsPressed","onQuitPressed","optionsMenuUI","_canvas","callback","button","CreateSimpleButton","toLowerCase","textBlock","onPointerEnterObservable","onPointerOutObservable","onPointerUpObservable","requestPointerLock","CreateFullscreenUI","WorldInteractionUI","IslandsUI","_ui","_worldInteractionUI","_dialogueInteractionUI","_islandsUI","_mainMenuUI","_optionsMenuUI","_questUI","_journalUI","_havok","_engine","enablePhysics","_interactionManager","_camera","_world","updateFocusState","pointerLockElement","runRenderLoop","resize","_uiManager","_isGameFocused","init","_player","_soundManager","UIManager","_questManager","onGameFocusChange","uiManager","showMainMenu","setup","mounted","getElementById","ShadersRepository","havok","havokPlugin","game","__exports__","components","YellowSubmarine","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","r","d","definition","o","defineProperty","enumerable","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","p","baseURI","self","location","href","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","bind","__webpack_exports__"],"sourceRoot":""}